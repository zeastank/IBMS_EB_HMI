{
  "$schema": "http://json-schema.org/draft-04/schema",
  "definitions": {
    "AccessConfig": {
      "definitions": {
        "access": {
          "title": "Access",
          "type": "object",
          "engineeringColumns": [
            "accessright",
            "group",
            "permission"
          ],
          "propertiesMeta": [
            {
              "name": "accessright",
              "displayName": "Access right",
              "category": "General",
              "displayPriority": 10,
              "description": "Right which this rule defines."
            },
            {
              "name": "group",
              "displayName": "Group",
              "category": "General",
              "displayPriority": 10,
              "description": "Group to which this access right is given."
            },
            {
              "name": "permission",
              "displayName": "Permission",
              "category": "General",
              "displayPriority": 10,
              "description": "Permission for this access rule. \nAllow of one group overrides Deny/Inherit of another group. \nDeny will result in deny if we have no Allow of another group. \nInherit will ask parent control when we got no Allow/Deny. If the parent does not define something there will be a specified default."
            }
          ],
          "properties": {
            "accessright": {
              "type": "string",
              "minLength": 1
            },
            "group": {
              "type": "string",
              "minLength": 1
            },
            "permission": {
              "type": "string",
              "enum": [
                "Allow",
                "Deny",
                "Inherit"
              ]
            }
          },
          "required": [
            "accessright",
            "group",
            "permission"
          ]
        }
      },
      "type": "array",
      "items": {
        "$ref": "#/definitions/AccessConfig/definitions/access"
      }
    },
    "BorderRadius": {
      "type": "object",
      "propertiesMeta": [
        {
          "name": "topLeft",
          "category": "general",
          "displayName": "TopLeft",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "topLeftUnit",
          "category": "general",
          "refTo": "topLeft",
          "displayName": "TopLeftUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "topRight",
          "category": "general",
          "displayName": "TopRight",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "topRightUnit",
          "category": "general",
          "refTo": "topRight",
          "displayName": "TopRightUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "bottomRight",
          "category": "general",
          "displayName": "BottomRight",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "bottomRightUnit",
          "category": "general",
          "refTo": "bottomRight",
          "displayName": "BottomRightUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "bottomLeft",
          "category": "general",
          "displayName": "BottomLeft",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "bottomLeftUnit",
          "category": "general",
          "refTo": "bottomLeft",
          "displayName": "BottomLeftUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        }
      ],
      "properties": {
        "topLeft": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "topLeftUnit": {
          "$ref": "#/definitions/MeasurementUnit"
        },
        "topRight": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "topRightUnit": {
          "$ref": "#/definitions/MeasurementUnit"
        },
        "bottomRight": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "bottomRightUnit": {
          "$ref": "#/definitions/MeasurementUnit"
        },
        "bottomLeft": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "bottomLeftUnit": {
          "$ref": "#/definitions/MeasurementUnit"
        }
      },
      "required": [
        "topLeft",
        "topRight",
        "bottomRight",
        "bottomLeft"
      ]
    },
    "BorderStyle": {
      "definitions": {
        "style": {
          "type": "string",
          "enum": [
            "Solid",
            "Dashed",
            "Dotted",
            "None"
          ],
          "default": "Solid"
        }
      },
      "type": "object",
      "properties": {
        "left": {
          "$ref": "#/definitions/BorderStyle/definitions/style"
        },
        "top": {
          "$ref": "#/definitions/BorderStyle/definitions/style"
        },
        "right": {
          "$ref": "#/definitions/BorderStyle/definitions/style"
        },
        "bottom": {
          "$ref": "#/definitions/BorderStyle/definitions/style"
        }
      },
      "required": [
        "left",
        "top",
        "right",
        "bottom"
      ]
    },
    "BorderWidth": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "left",
          "category": "general",
          "displayName": "Left",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "leftUnit",
          "category": "general",
          "refTo": "left",
          "displayName": "LeftUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "top",
          "category": "general",
          "displayName": "Top",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "topUnit",
          "category": "general",
          "refTo": "top",
          "displayName": "TopUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "right",
          "category": "general",
          "displayName": "right",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "rightUnit",
          "category": "general",
          "refTo": "right",
          "displayName": "rightUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "bottom",
          "category": "general",
          "displayName": "Bottom",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "bottomUnit",
          "category": "general",
          "refTo": "bottom",
          "displayName": "BottomUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        }
      ],
      "properties": {
        "left": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "leftUnit": {
          "$ref": "#/definitions/PixelUnit"
        },
        "top": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "topUnit": {
          "$ref": "#/definitions/PixelUnit"
        },
        "right": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "rightUnit": {
          "$ref": "#/definitions/PixelUnit"
        },
        "bottom": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "bottomUnit": {
          "$ref": "#/definitions/PixelUnit"
        }
      },
      "required": [
        "left",
        "top",
        "right",
        "bottom"
      ]
    },
    "BoxShadowList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "items": {
        "title": "BoxShadow definition",
        "type": "object",
        "propertiesMeta": [
          {
            "name": "color",
            "category": "Colors",
            "displayName": "Color",
            "displayPriority": 10,
            "description": "Color of this Box Shadow",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "offsetX",
            "category": "General",
            "displayName": "OffsetX",
            "displayPriority": 10,
            "description": "The Shadow Offset.",
            "defaultValue": null,
            "defaultValueInternal": 0
          },
          {
            "name": "offsetXUnit",
            "refTo": "offsetX",
            "category": "General",
            "displayName": "OffsetX Unit",
            "displayPriority": 10,
            "description": "The Shadow Offset.",
            "defaultValue": null,
            "defaultValueInternal": "px"
          },
          {
            "name": "offsetY",
            "category": "General",
            "displayName": "OffsetY",
            "displayPriority": 10,
            "description": "The Shadow Offset.",
            "defaultValue": null,
            "defaultValueInternal": 0
          },
          {
            "name": "offsetYUnit",
            "refTo": "offsetY",
            "category": "General",
            "displayName": "OffsetY Unit",
            "displayPriority": 10,
            "description": "The Shadow Offset.",
            "defaultValue": null,
            "defaultValueInternal": "px"
          },
          {
            "name": "inset",
            "category": "General",
            "displayName": "Inset",
            "displayPriority": 10,
            "description": "Inset shadows are drawn inside the border (even transparent ones), above the background, but below content.",
            "defaultValue": null,
            "defaultValueInternal": false
          },
          {
            "name": "blur",
            "category": "General",
            "displayName": "Blur",
            "displayPriority": 10,
            "description": "The larger this value, the bigger the blur, so the shadow becomes bigger and lighter.",
            "defaultValue": null,
            "defaultValueInternal": 0
          },
          {
            "name": "blurUnit",
            "refTo": "blur",
            "category": "General",
            "displayName": "BlurUnit",
            "displayPriority": 10,
            "description": "The larger this value, the bigger the blur, so the shadow becomes bigger and lighter.",
            "defaultValue": null,
            "defaultValueInternal": "px"
          },
          {
            "name": "spread",
            "category": "General",
            "displayName": "Spread",
            "displayPriority": 10,
            "description": "Positive values will cause the shadow to expand and grow bigger, negative values will cause the shadow to shrink.",
            "defaultValue": null,
            "defaultValueInternal": 0
          },
          {
            "name": "spreadUnit",
            "refTo": "spread",
            "category": "General",
            "displayName": "SpreadUnit",
            "displayPriority": 10,
            "description": "Positive values will cause the shadow to expand and grow bigger, negative values will cause the shadow to shrink.",
            "defaultValue": null,
            "defaultValueInternal": "px"
          }
        ],
        "properties": {
          "color": {
            "$ref": "#/definitions/SolidColor"
          },
          "offsetX": {
            "$ref": "#/definitions/MeasurementValue"
          },
          "offsetXUnit": {
            "$ref": "#/definitions/PixelUnit"
          },
          "offsetY": {
            "$ref": "#/definitions/MeasurementValue"
          },
          "offsetYUnit": {
            "$ref": "#/definitions/PixelUnit"
          },
          "inset": {
            "type": "boolean"
          },
          "blur": {
            "$ref": "#/definitions/MeasurementValue"
          },
          "blurUnit": {
            "$ref": "#/definitions/PixelUnit"
          },
          "spread": {
            "$ref": "#/definitions/MeasurementValue"
          },
          "spreadUnit": {
            "$ref": "#/definitions/PixelUnit"
          }
        }
      },
      "minItems": 0
    },
    "ClassNameList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "items": {
        "type": "string"
      },
      "minItems": 0
    },
    "Color": {
      "anyOf": [
        {
          "$ref": "#/definitions/SolidColor"
        },
        {
          "$ref": "#/definitions/LinearGradientColor"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    },
    "ContentPath": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "minLength": 1
    },
    "ContextReference": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object"
    },
    "Control": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiControl",
      "frameworkControlNamespace": "TcHmi.Controls.System"
    },
    "ControlAccessRight": {
      "type": "object",
      "description": "An access right which is checked by controls. In the Schema a defaultValue of true mean access is granted, false is denied, null is ask parent.",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Name of the access definition in the HTML."
        },
        "displayName": {
          "type": "string",
          "description": "Name which should be presented the user."
        },
        "visible": {
          "type": "boolean",
          "description": "Determine if an access definition is shown to the user."
        },
        "description": {
          "type": "string",
          "description": "A long description of this access definition."
        },
        "defaultValueInternal": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Defines the default of this control access right. This will be used if the check for this access right does not return a result. true mean access is granted, false is denied, null is ask parent."
        }
      },
      "required": [
        "name",
        "displayName",
        "visible",
        "defaultValueInternal"
      ]
    },
    "ControlAccessRightName": {
      "type": "string"
    },
    "ControlNamespace": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "minLength": 1
    },
    "ControlPropertyName": {
      "type": "string"
    },
    "ControlType": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "minLength": 1
    },
    "Empty": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        ""
      ]
    },
    "FontFamily": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string"
    },
    "FontSizeUnit": {
      "type": "string",
      "enum": [
        "px",
        "%"
      ],
      "default": "px"
    },
    "FontStyle": {
      "type": "string",
      "enum": [
        "Normal",
        "Italic",
        "Oblique",
        "Auto"
      ],
      "default": "Normal"
    },
    "FontWeight": {
      "type": "string",
      "enum": [
        "Normal",
        "Bold",
        "Auto"
      ],
      "default": "Normal"
    },
    "Fraction": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "Function": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "definitions": {
        "value": {
          "anyOf": [
            {
              "title": "StaticValue",
              "type": "object",
              "properties": {
                "objectType": {
                  "description": "An enum defining the variable type.",
                  "type": "string",
                  "enum": [
                    "StaticValue"
                  ]
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "valueType": {
                  "type": "string"
                }
              },
              "required": [
                "objectType",
                "value",
                "valueType"
              ]
            },
            {
              "title": "Symbol",
              "type": "object",
              "properties": {
                "objectType": {
                  "description": "An enum defining the variable type.",
                  "type": "string",
                  "enum": [
                    "Symbol"
                  ]
                },
                "symbolExpression": {
                  "$ref": "#/definitions/Function/definitions/symbolExpression"
                }
              },
              "required": [
                "objectType",
                "symbolExpression"
              ]
            },
            {
              "title": "ControlApiFunction",
              "type": "object",
              "properties": {
                "objectType": {
                  "description": "An enum defining the variable type.",
                  "type": "string",
                  "enum": [
                    "ControlApiFunction"
                  ]
                },
                "control": {
                  "type": "string"
                },
                "fn": {
                  "type": "string"
                },
                "valueType": {
                  "type": "string"
                }
              },
              "required": [
                "objectType",
                "control",
                "fn",
                "valueType"
              ]
            },
            {
              "title": "EventDataObject",
              "type": "object",
              "properties": {
                "objectType": {
                  "description": "An enum defining the variable type.",
                  "type": "string",
                  "enum": [
                    "EventDataObject"
                  ]
                },
                "propertyPath": {
                  "type": "string"
                }
              },
              "required": [
                "objectType",
                "propertyPath"
              ]
            }
          ]
        },
        "symbolExpression": {
          "title": "SymbolExpression",
          "type": "string",
          "pattern": "^%(s|i|l|pp|tp|f|ctrl|ctx|tr)%.+%\\1%$"
        }
      },
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "Function"
          ]
        },
        "fn": {
          "type": "string"
        },
        "fnParams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Function/definitions/value"
          }
        }
      },
      "required": [
        "objectType",
        "fn",
        "fnParams"
      ]
    },
    "FunctionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Function"
      }
    },
    "HorizontalAlignment": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "Left",
        "Center",
        "Right"
      ]
    },
    "Id": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "minLength": 1
    },
    "Inputmode": {
      "description": "Defines which keyboard layout should be loaded in the system keyboard when interacting. The exact layout file is defined in the project. \nThe most common one are: 'numeric', 'decimal', 'text'. Own project keywords are possible. \n'skip' ignores a focusIn, 'none' closes a keyboard on focusIn.",
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "text",
            "numeric",
            "decimal",
            "skip",
            "none"
          ],
          "description": "'skip' ignores a focusIn, 'none' closes a keyboard on focusIn."
        },
        {
          "type": "string",
          "description": "Project defined input mode"
        }
      ],
      "default": "text"
    },
    "LinearGradientColor": {
      "type": "object",
      "engineeringColumns": [
        "angle"
      ],
      "propertiesMeta": [
        {
          "name": "angle",
          "displayName": "Angle",
          "category": "General",
          "displayPriority": 10,
          "description": "Angle this Gradient is defined"
        }
      ],
      "properties": {
        "angle": {
          "type": "number"
        },
        "stopPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StopPoint"
          },
          "minItems": 2
        }
      },
      "default": {
        "angle": 0,
        "stopPoints": [
          {
            "color": "rgba(0, 0, 0, 1)",
            "stop": "0%"
          },
          {
            "color": "rgba(255, 255, 255, 1)",
            "stop": "100%"
          }
        ]
      },
      "required": [
        "angle",
        "stopPoints"
      ]
    },
    "Locale": {
      "default": "en",
      "description": "(Deprecated, use ProjectLocale from general) A list of locales for which we have a localization file in the project.",
      "type": "string"
    },
    "MeasurementUnit": {
      "type": "string",
      "enum": [
        "px",
        "%"
      ],
      "default": "px"
    },
    "MeasurementUnitOrFactor": {
      "type": "string",
      "enum": [
        "px",
        "%",
        "factor"
      ],
      "default": "px",
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiGrid.MeasurementUnitOrFactor"
    },
    "MeasurementValue": {
      "type": "number"
    },
    "Padding": {
      "type": "object",
      "propertiesMeta": [
        {
          "name": "left",
          "category": "general",
          "displayName": "Left",
          "displayPriority": 10,
          "description": "Sets the left padding of the element.",
          "defaultValue": 0,
          "defaultValueInternal": 0
        },
        {
          "name": "leftUnit",
          "category": "general",
          "refTo": "left",
          "displayName": "LeftUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "top",
          "category": "general",
          "displayName": "Top",
          "displayPriority": 10,
          "description": "Sets the top padding of the element.",
          "defaultValue": 0,
          "defaultValueInternal": 0
        },
        {
          "name": "topUnit",
          "category": "general",
          "refTo": "top",
          "displayName": "TopUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "right",
          "category": "general",
          "displayName": "Right",
          "displayPriority": 10,
          "description": "Sets the right padding of the element.",
          "defaultValue": 0,
          "defaultValueInternal": 0
        },
        {
          "name": "rightUnit",
          "category": "general",
          "refTo": "right",
          "displayName": "RightUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "bottom",
          "category": "general",
          "displayName": "Bottom",
          "displayPriority": 10,
          "description": "Sets the bottom padding of the element.",
          "defaultValue": 0,
          "defaultValueInternal": 0
        },
        {
          "name": "bottomUnit",
          "category": "general",
          "refTo": "bottom",
          "displayName": "BottomUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        }
      ],
      "properties": {
        "left": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "leftUnit": {
          "$ref": "#/definitions/MeasurementUnit"
        },
        "top": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "topUnit": {
          "$ref": "#/definitions/MeasurementUnit"
        },
        "right": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "rightUnit": {
          "$ref": "#/definitions/MeasurementUnit"
        },
        "bottom": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "bottomUnit": {
          "$ref": "#/definitions/MeasurementUnit"
        }
      },
      "required": [
        "left",
        "top",
        "right",
        "bottom"
      ]
    },
    "Path": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string"
    },
    "PixelPadding": {
      "type": "object",
      "propertiesMeta": [
        {
          "name": "left",
          "category": "general",
          "displayName": "Left",
          "displayPriority": 10,
          "description": "Sets the left padding of the element.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "leftUnit",
          "category": "general",
          "refTo": "left",
          "displayName": "LeftUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "top",
          "category": "general",
          "displayName": "Top",
          "displayPriority": 10,
          "description": "Sets the top padding of the element.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "topUnit",
          "category": "general",
          "refTo": "top",
          "displayName": "TopUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "right",
          "category": "general",
          "displayName": "Right",
          "displayPriority": 10,
          "description": "Sets the right padding of the element.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "rightUnit",
          "category": "general",
          "refTo": "right",
          "displayName": "RightUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "bottom",
          "category": "general",
          "displayName": "Bottom",
          "displayPriority": 10,
          "description": "Sets the bottom padding of the element.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "bottomUnit",
          "category": "general",
          "refTo": "bottom",
          "displayName": "BottomUnit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        }
      ],
      "properties": {
        "left": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "leftUnit": {
          "$ref": "#/definitions/PixelUnit"
        },
        "top": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "topUnit": {
          "$ref": "#/definitions/PixelUnit"
        },
        "right": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "rightUnit": {
          "$ref": "#/definitions/PixelUnit"
        },
        "bottom": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveNumber"
            },
            {
              "$ref": "#/definitions/MeasurementValue"
            }
          ]
        },
        "bottomUnit": {
          "$ref": "#/definitions/PixelUnit"
        }
      },
      "required": [
        "left",
        "top",
        "right",
        "bottom"
      ]
    },
    "PixelUnit": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "px"
      ]
    },
    "PositiveNumber": {
      "allOf": [
        {
          "$ref": "tchmi:general#/definitions/Number"
        },
        {
          "minimum": 0
        }
      ]
    },
    "RecipeReference": {
      "description": "Refers to one recipe of the server.",
      "type": "string",
      "minLength": 1
    },
    "MultipleRecipeReferences": {
      "description": "Refers to one or more recipe types of the server.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/RecipeReference"
      }
    },
    "RecipeTypeReference": {
      "description": "Refers to one recipe type of the server.",
      "type": "string",
      "minLength": 1
    },
    "MultipleRecipeTypeReferences": {
      "description": "Refers to one or more recipe types of the server.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/RecipeTypeReference"
      }
    },
    "ScaleMode": {
      "type": "string",
      "enum": [
        "None",
        "ScaleToFill",
        "ScaleToFit",
        "ScaleToFitWidth",
        "ScaleToFitHeight"
      ],
      "default": "None"
    },
    "ScrollMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "No",
        "Yes",
        "Auto"
      ]
    },
    "ServerEvent": {
      "anyOf": [
        {
          "title": "Message",
          "type": "object",
          "properties": {
            "type": {
              "type": "integer",
              "enum": [
                0
              ],
              "options": [
                {
                  "label": "ENUM_0_MESSAGE",
                  "value": 0
                }
              ],
              "default": 0
            },
            "domain": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "timeReceived": {
              "type": "string",
              "format": "date-time"
            },
            "sessionId": {
              "type": "string"
            },
            "severity": {
              "$ref": "tchmi:server#/definitions/severity"
            },
            "sourceDomain": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "timeRaised": {
              "type": "string",
              "format": "date-time"
            },
            "params": {
              "type": "object"
            }
          },
          "required": [
            "type",
            "domain",
            "name",
            "timeReceived",
            "severity",
            "sourceDomain",
            "text",
            "timeRaised",
            "params"
          ]
        },
        {
          "title": "Alarm",
          "type": "object",
          "properties": {
            "type": {
              "type": "integer",
              "enum": [
                1
              ],
              "options": [
                {
                  "label": "ENUM_1_ALARM",
                  "value": 1
                }
              ],
              "default": 1
            },
            "domain": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "timeReceived": {
              "type": "string",
              "format": "date-time"
            },
            "sessionId": {
              "type": "string"
            },
            "severity": {
              "$ref": "tchmi:server#/definitions/severity"
            },
            "sourceDomain": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "timeRaised": {
              "type": "string",
              "format": "date-time"
            },
            "params": {
              "type": "object"
            },
            "id": {
              "type": "integer"
            },
            "timeCleared": {
              "$ref": "tchmi:server#/definitions/nullableDateTime"
            },
            "timeConfirmed": {
              "$ref": "tchmi:server#/definitions/nullableDateTime"
            },
            "alarmState": {
              "$ref": "tchmi:server#/definitions/alarmState"
            },
            "confirmationState": {
              "$ref": "tchmi:server#/definitions/confirmationState"
            }
          },
          "required": [
            "type",
            "domain",
            "name",
            "timeReceived",
            "severity",
            "sourceDomain",
            "text",
            "timeRaised",
            "params",
            "id",
            "timeCleared",
            "timeConfirmed",
            "alarmState",
            "confirmationState"
          ]
        },
        {
          "title": "PayloadEvent",
          "type": "object",
          "properties": {
            "type": {
              "type": "integer",
              "enum": [
                2
              ],
              "options": [
                {
                  "label": "ENUM_2_PAYLOAD",
                  "value": 2
                }
              ],
              "default": 2
            },
            "domain": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "timeReceived": {
              "type": "string",
              "format": "date-time"
            },
            "sessionId": {
              "type": "string"
            },
            "payload": {}
          },
          "required": [
            "type",
            "domain",
            "name",
            "timeReceived"
          ]
        }
      ]
    },
    "SizeMode": {
      "type": "string",
      "enum": [
        "Value",
        "Parent"
      ],
      "default": "Value"
    },
    "SizeModeWithContent": {
      "type": "string",
      "enum": [
        "Value",
        "Parent",
        "Content"
      ],
      "default": "Value"
    },
    "SolidColor": {
      "type": "object",
      "properties": {
        "color": {
          "description": "Defining a color as CSS color: #-hexadecimal, rgb(), rgba(), hsl(), hsla(), css color keyword, none or transparent.",
          "type": "string",
          "minLength": 1,
          "default": "#000000"
        }
      },
      "required": [
        "color"
      ]
    },
    "Sorting": {
      "title": "Sorting",
      "type": "array",
      "items": {
        "title": "Sorting criterion",
        "type": "object",
        "engineeringColumns": [
          "name",
          "order"
        ],
        "propertiesMeta": [
          {
            "name": "name",
            "displayName": "Name",
            "category": "General",
            "displayPriority": 10,
            "description": "Name of the property to sort by",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "order",
            "displayName": "Order",
            "category": "General",
            "displayPriority": 10,
            "description": "Sort definition",
            "defaultValue": null,
            "defaultValueInternal": null
          }
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "order": {
            "type": "string",
            "enum": [
              "Ascending",
              "Descending"
            ],
            "default": "Ascending"
          }
        },
        "required": [
          "order"
        ],
        "additionalProperties": false
      }
    },
    "StopPoint": {
      "title": "StopPoint definition",
      "type": "object",
      "engineeringColumns": [
        "color",
        "stop"
      ],
      "properties": {
        "color": {
          "description": "Defining a color as CSS color: #-hexadecimal, rgb(), rgba(), hsl(), hsla(), lowercase css color keyword or transparent.",
          "type": "string",
          "minLength": 1
        },
        "stop": {
          "type": "string",
          "pattern": "^[0-9]*\\.?[0-9]+(?:px|%)$"
        }
      },
      "required": [
        "color"
      ]
    },
    "Symbol": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Symbol"
    },
    "ThemeName": {
      "type": "string",
      "default": "Base"
    },
    "ToggleState": {
      "type": "string",
      "enum": [
        "Normal",
        "Active"
      ],
      "default": "Normal"
    },
    "TransformList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "definitions": {
        "transform": {
          "anyOf": [
            {
              "title": "Translate",
              "type": "object",
              "propertiesMeta": [
                {
                  "name": "transformType",
                  "category": "general",
                  "displayName": "TransformType",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": "Translate",
                  "defaultValueInternal": "Translate"
                },
                {
                  "name": "x",
                  "category": "general",
                  "displayName": "x",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": null
                },
                {
                  "name": "xUnit",
                  "category": "general",
                  "refTo": "x",
                  "displayName": "xUnit",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": "px"
                },
                {
                  "name": "y",
                  "category": "general",
                  "displayName": "y",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": null
                },
                {
                  "name": "yUnit",
                  "category": "general",
                  "refTo": "y",
                  "displayName": "yUnit",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": "px"
                },
                {
                  "name": "z",
                  "category": "general",
                  "displayName": "z",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": null
                },
                {
                  "name": "zUnit",
                  "category": "general",
                  "refTo": "z",
                  "displayName": "zUnit",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": "px"
                }
              ],
              "properties": {
                "transformType": {
                  "type": "string",
                  "enum": [
                    "Translate"
                  ]
                },
                "x": {
                  "$ref": "#/definitions/MeasurementValue"
                },
                "xUnit": {
                  "$ref": "#/definitions/MeasurementUnit"
                },
                "y": {
                  "$ref": "#/definitions/MeasurementValue"
                },
                "yUnit": {
                  "$ref": "#/definitions/MeasurementUnit"
                },
                "z": {
                  "$ref": "#/definitions/MeasurementValue"
                },
                "zUnit": {
                  "$ref": "#/definitions/MeasurementUnit"
                }
              },
              "required": [
                "transformType"
              ]
            },
            {
              "title": "Rotate",
              "type": "object",
              "propertiesMeta": [
                {
                  "name": "transformType",
                  "category": "general",
                  "displayName": "TransformType",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": "Rotate",
                  "defaultValueInternal": "Rotate"
                },
                {
                  "name": "angle",
                  "category": "general",
                  "displayName": "Angle",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": null
                },
                {
                  "name": "angleUnit",
                  "category": "general",
                  "refTo": "angle",
                  "displayName": "AngleUnit",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": "deg"
                }
              ],
              "properties": {
                "transformType": {
                  "type": "string",
                  "enum": [
                    "Rotate"
                  ]
                },
                "angle": {
                  "$ref": "#/definitions/MeasurementValue"
                },
                "angleUnit": {
                  "$ref": "#/definitions/TransformList/definitions/angleUnit"
                },
                "vector": {
                  "type": "object",
                  "properties": {
                    "x": {
                      "type": "number"
                    },
                    "y": {
                      "type": "number"
                    },
                    "z": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "x",
                    "y",
                    "z"
                  ]
                }
              },
              "required": [
                "transformType",
                "angle"
              ]
            },
            {
              "title": "Scale",
              "type": "object",
              "propertiesMeta": [
                {
                  "name": "transformType",
                  "category": "general",
                  "displayName": "Transform Type",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": "Scale",
                  "defaultValueInternal": "Scale"
                },
                {
                  "name": "x",
                  "category": "general",
                  "displayName": "X",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": null
                },
                {
                  "name": "y",
                  "category": "general",
                  "displayName": "Y",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": null
                },
                {
                  "name": "z",
                  "category": "general",
                  "displayName": "Z",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": null
                }
              ],
              "properties": {
                "transformType": {
                  "type": "string",
                  "enum": [
                    "Scale"
                  ]
                },
                "x": {
                  "type": "number"
                },
                "y": {
                  "type": "number"
                },
                "z": {
                  "type": "number"
                }
              },
              "required": [
                "transformType"
              ]
            },
            {
              "title": "Skew",
              "type": "object",
              "propertiesMeta": [
                {
                  "name": "transformType",
                  "category": "general",
                  "displayName": "TransformType",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": "Skew",
                  "defaultValueInternal": "Skew"
                },
                {
                  "name": "xAngle",
                  "category": "general",
                  "displayName": "xAngle",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": null
                },
                {
                  "name": "xAngleUnit",
                  "category": "general",
                  "refTo": "xAngle",
                  "displayName": "xAngleUnit",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": "deg"
                },
                {
                  "name": "yAngle",
                  "category": "general",
                  "displayName": "yAngle",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": null
                },
                {
                  "name": "yAngleUnit",
                  "category": "general",
                  "refTo": "yAngle",
                  "displayName": "yAngleUnit",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": "deg"
                }
              ],
              "properties": {
                "transformType": {
                  "type": "string",
                  "enum": [
                    "Skew"
                  ]
                },
                "xAngle": {
                  "$ref": "#/definitions/MeasurementValue"
                },
                "xAngleUnit": {
                  "$ref": "#/definitions/TransformList/definitions/angleUnit"
                },
                "yAngle": {
                  "$ref": "#/definitions/MeasurementValue"
                },
                "yAngleUnit": {
                  "$ref": "#/definitions/TransformList/definitions/angleUnit"
                }
              },
              "required": [
                "transformType"
              ]
            },
            {
              "title": "Origin",
              "type": "object",
              "propertiesMeta": [
                {
                  "name": "transformType",
                  "category": "general",
                  "displayName": "TransformType",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": "Origin",
                  "defaultValueInternal": "Origin"
                },
                {
                  "name": "x",
                  "category": "general",
                  "displayName": "x",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": null
                },
                {
                  "name": "xUnit",
                  "category": "general",
                  "refTo": "x",
                  "displayName": "xUnit",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": "px"
                },
                {
                  "name": "y",
                  "category": "general",
                  "displayName": "y",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": null
                },
                {
                  "name": "yUnit",
                  "category": "general",
                  "refTo": "y",
                  "displayName": "yUnit",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": "px"
                },
                {
                  "name": "z",
                  "category": "general",
                  "displayName": "z",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": null
                },
                {
                  "name": "zUnit",
                  "category": "general",
                  "refTo": "z",
                  "displayName": "zUnit",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": "px"
                }
              ],
              "properties": {
                "transformType": {
                  "type": "string",
                  "enum": [
                    "Origin"
                  ]
                },
                "x": {
                  "$ref": "#/definitions/MeasurementValue"
                },
                "xUnit": {
                  "$ref": "#/definitions/MeasurementUnit"
                },
                "y": {
                  "$ref": "#/definitions/MeasurementValue"
                },
                "yUnit": {
                  "$ref": "#/definitions/MeasurementUnit"
                },
                "z": {
                  "$ref": "#/definitions/MeasurementValue"
                },
                "zUnit": {
                  "$ref": "#/definitions/MeasurementUnit"
                }
              },
              "required": [
                "transformType"
              ]
            },
            {
              "title": "Perspective",
              "type": "object",
              "propertiesMeta": [
                {
                  "name": "transformType",
                  "category": "general",
                  "displayName": "TransformType",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": "Perspective",
                  "defaultValueInternal": "Perspective"
                },
                {
                  "name": "distance",
                  "category": "general",
                  "displayName": "Distance",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": null
                },
                {
                  "name": "distanceUnit",
                  "category": "general",
                  "refTo": "distance",
                  "displayName": "DistanceUnit",
                  "displayPriority": 10,
                  "description": "",
                  "defaultValue": null,
                  "defaultValueInternal": "px"
                }
              ],
              "properties": {
                "transformType": {
                  "type": "string",
                  "enum": [
                    "Perspective"
                  ]
                },
                "distance": {
                  "$ref": "#/definitions/MeasurementValue"
                },
                "distanceUnit": {
                  "$ref": "#/definitions/MeasurementUnit"
                },
                "origin": {
                  "type": "object",
                  "propertiesMeta": [
                    {
                      "name": "x",
                      "category": "general",
                      "displayName": "x",
                      "displayPriority": 10,
                      "description": "",
                      "defaultValue": null,
                      "defaultValueInternal": null
                    },
                    {
                      "name": "xUnit",
                      "category": "general",
                      "refTo": "x",
                      "displayName": "xUnit",
                      "displayPriority": 10,
                      "description": "",
                      "defaultValue": null,
                      "defaultValueInternal": "px"
                    },
                    {
                      "name": "y",
                      "category": "general",
                      "displayName": "y",
                      "displayPriority": 10,
                      "description": "",
                      "defaultValue": null,
                      "defaultValueInternal": null
                    },
                    {
                      "name": "yUnit",
                      "category": "general",
                      "refTo": "y",
                      "displayName": "yUnit",
                      "displayPriority": 10,
                      "description": "",
                      "defaultValue": null,
                      "defaultValueInternal": "px"
                    }
                  ],
                  "properties": {
                    "x": {
                      "$ref": "#/definitions/MeasurementValue"
                    },
                    "xUnit": {
                      "$ref": "#/definitions/MeasurementUnit"
                    },
                    "y": {
                      "$ref": "#/definitions/MeasurementValue"
                    },
                    "yUnit": {
                      "$ref": "#/definitions/MeasurementUnit"
                    }
                  }
                }
              },
              "required": [
                "transformType",
                "distance"
              ]
            }
          ]
        },
        "angleUnit": {
          "type": "string",
          "enum": [
            "deg",
            "rad",
            "turn",
            "grad"
          ]
        }
      },
      "type": "array",
      "items": {
        "$ref": "#/definitions/TransformList/definitions/transform"
      }
    },
    "Trigger": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "definitions": {
        "action": {
          "anyOf": [
            {
              "title": "Condition",
              "type": "object",
              "description": "IF .. THEN ..ELSE - style condition",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "Condition"
                  ]
                },
                "parts": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "if": {
                            "$ref": "#/definitions/Trigger/definitions/expression"
                          },
                          "then": {
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/Trigger/definitions/action"
                            }
                          },
                          "showThenActions": {
                            "type": "boolean",
                            "description": "Holds the current state of the Trigger GUI. Not used in runtime"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "elseif": {
                            "$ref": "#/definitions/Trigger/definitions/expression"
                          },
                          "then": {
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/Trigger/definitions/action"
                            }
                          },
                          "showThenActions": {
                            "type": "boolean",
                            "description": "Holds the current state of the Trigger GUI. Not used in runtime"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "else": {
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/Trigger/definitions/action"
                            }
                          },
                          "showThenActions": {
                            "type": "boolean",
                            "description": "Holds the current state of the Trigger GUI. Not used in runtime"
                          }
                        }
                      }
                    ]
                  }
                },
                "success": {
                  "description": "Success callback action list.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "error": {
                  "description": "Error callback action list.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "active": {
                  "type": "boolean",
                  "description": "Should action be active? Defaults to true.",
                  "default": true
                },
                "collapsed": {
                  "type": "boolean",
                  "description": "Should action be collapsed? Not used in runtime",
                  "default": false
                },
                "asyncWait": {
                  "type": "boolean"
                }
              },
              "required": [
                "objectType",
                "true",
                "false"
              ]
            },
            {
              "title": "SwitchCase",
              "type": "object",
              "description": "SWITCH .. CASE ..CASE - style condition",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "SwitchCase"
                  ]
                },
                "compare": {
                  "$ref": "#/definitions/Trigger/definitions/value"
                },
                "cases": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/vCase"
                  }
                },
                "caseDefault": {
                  "$ref": "#/definitions/Trigger/definitions/dCase"
                },
                "success": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "error": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "active": {
                  "type": "boolean",
                  "description": "Should action be active? Defaults to true.",
                  "default": true
                },
                "collapsed": {
                  "type": "boolean",
                  "description": "Should action be collapsed? Not used in runtime",
                  "default": false
                },
                "asyncWait": {
                  "type": "boolean"
                }
              },
              "required": [
                "objectType",
                "compare",
                "cases",
                "caseDefault"
              ]
            },
            {
              "title": "WriteToSymbol",
              "type": "object",
              "description": "Write To Symbol",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "WriteToSymbol"
                  ]
                },
                "symbolExpression": {
                  "$ref": "#/definitions/Trigger/definitions/symbolExpression"
                },
                "value": {
                  "$ref": "#/definitions/Trigger/definitions/value"
                },
                "success": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "error": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "active": {
                  "type": "boolean",
                  "description": "Should action be active? Defaults to true.",
                  "default": true
                },
                "collapsed": {
                  "type": "boolean",
                  "description": "Should action be collapsed? Not used in runtime",
                  "default": false
                },
                "asyncWait": {
                  "type": "boolean"
                }
              },
              "required": [
                "objectType",
                "symbolExpression",
                "value"
              ]
            },
            {
              "title": "Function",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "Function"
                  ]
                },
                "fn": {
                  "type": "string"
                },
                "fnParams": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/value"
                  }
                },
                "success": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "error": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "active": {
                  "type": "boolean",
                  "description": "Should action be active? Defaults to true.",
                  "default": true
                },
                "collapsed": {
                  "type": "boolean",
                  "description": "Should action be collapsed? Not used in runtime",
                  "default": false
                },
                "asyncWait": {
                  "type": "boolean"
                }
              },
              "required": [
                "objectType",
                "fn",
                "fnParams"
              ]
            },
            {
              "title": "JavaScript",
              "type": "object",
              "description": "Executes a user-defined JavaScript",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "JavaScript"
                  ]
                },
                "sourceLines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "injectContextObject": {
                  "type": "boolean",
                  "description": "Inject context object.\nCall ctx.success() or ctx.error(TcHmi.Errors.ERROR)"
                },
                "waitMode": {
                  "type": "string",
                  "enum": [
                    "Synchronous",
                    "Asynchronous"
                  ],
                  "description": "Synchronous: Next step will called after last JavaScript line. Asynchronous: Next step will called after calling ctx.success() or ctx.error(TcHmi.Errors.ERROR)"
                },
                "success": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  },
                  "description": "Steps which will be called after call of ctx.success() with Asynchronous or last line with Synchronous."
                },
                "error": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  },
                  "description": "Steps which will be called after call of ctx.success() with Asynchronous or an exception with Synchronous."
                },
                "active": {
                  "type": "boolean",
                  "description": "Should action be active? Defaults to true.",
                  "default": true
                },
                "collapsed": {
                  "type": "boolean",
                  "description": "Should action be collapsed? Not used in runtime",
                  "default": false
                },
                "asyncWait": {
                  "type": "boolean",
                  "description": "The next step is called after the completion of this step."
                }
              },
              "required": [
                "objectType",
                "sourceLines"
              ]
            },
            {
              "title": "ActionTemplate",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "ActionTemplate"
                  ]
                },
                "description": {
                  "type": "string",
                  "description": "A long description of this control."
                },
                "templateName": {
                  "type": "string"
                },
                "fnParams": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/value"
                  }
                },
                "success": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "error": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "active": {
                  "type": "boolean",
                  "description": "Should action be active? Defaults to true.",
                  "default": true
                },
                "collapsed": {
                  "type": "boolean",
                  "description": "Should action be collapsed? Not used in runtime",
                  "default": false
                },
                "asyncWait": {
                  "type": "boolean"
                }
              },
              "required": [
                "objectType",
                "templateName",
                "fnParams"
              ]
            },
            {
              "title": "ControlApiFunction",
              "type": "object",
              "description": "",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "ControlApiFunction"
                  ]
                },
                "control": {
                  "type": "string"
                },
                "fn": {
                  "type": "string"
                },
                "fnParams": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/value"
                  }
                },
                "success": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "error": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "active": {
                  "type": "boolean",
                  "description": "Should action be active? Defaults to true.",
                  "default": true
                },
                "collapsed": {
                  "type": "boolean",
                  "description": "Should action be collapsed? Not used in runtime",
                  "default": false
                },
                "asyncWait": {
                  "type": "boolean"
                }
              },
              "required": [
                "objectType",
                "control",
                "fn"
              ]
            },
            {
              "title": "FunctionExpression",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "FunctionExpression"
                  ]
                },
                "functionExpression": {
                  "type": "string"
                },
                "success": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "error": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "active": {
                  "type": "boolean",
                  "description": "Should action be active? Defaults to true.",
                  "default": true
                },
                "collapsed": {
                  "type": "boolean",
                  "description": "Should action be collapsed? Not used in runtime",
                  "default": false
                },
                "asyncWait": {
                  "type": "boolean"
                }
              },
              "required": [
                "objectType",
                "functionExpression"
              ]
            },
            {
              "title": "Comment",
              "type": "object",
              "description": "Free comment. Will be ignored on runtime.",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "Comment"
                  ]
                },
                "target": {
                  "$ref": "#/definitions/Trigger/definitions/comment"
                },
                "success": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "error": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trigger/definitions/action"
                  }
                },
                "active": {
                  "type": "boolean",
                  "description": "Should action be active? Defaults to true.",
                  "default": true
                },
                "collapsed": {
                  "type": "boolean",
                  "description": "Should action be collapsed? Not used in runtime",
                  "default": false
                },
                "asyncWait": {
                  "type": "boolean"
                }
              },
              "required": [
                "objectType"
              ]
            }
          ]
        },
        "value": {
          "anyOf": [
            {
              "title": "StaticValue",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "StaticValue"
                  ]
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "valueType": {
                  "type": "string"
                }
              },
              "required": [
                "objectType",
                "value",
                "valueType"
              ]
            },
            {
              "title": "Symbol",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "Symbol"
                  ]
                },
                "symbolExpression": {
                  "$ref": "#/definitions/Trigger/definitions/symbolExpression"
                }
              },
              "required": [
                "objectType",
                "symbolExpression"
              ]
            },
            {
              "title": "EventDataObject",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "EventDataObject"
                  ]
                },
                "propertyPath": {
                  "type": "string"
                }
              },
              "required": [
                "objectType",
                "propertyPath"
              ]
            },
            {
              "title": "FunctionExpression",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "FunctionExpression"
                  ]
                },
                "functionExpression": {
                  "type": "string"
                }
              },
              "required": [
                "objectType",
                "functionExpression"
              ]
            }
          ]
        },
        "comment": {
          "title": "Comment",
          "type": "string"
        },
        "bindingTarget": {
          "anyOf": [
            {
              "title": "ControlAttributeBindingTarget",
              "type": "object",
              "description": "",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "ControlAttributeBindingTarget"
                  ]
                },
                "attributeExpression": {
                  "$ref": "#/definitions/Trigger/definitions/controlAttributeSymbolExpression"
                }
              },
              "required": [
                "objectType"
              ]
            }
          ]
        },
        "expression": {
          "title": "Expression",
          "type": "object",
          "properties": {
            "compare1": {
              "$ref": "#/definitions/Trigger/definitions/value"
            },
            "compare2": {
              "$ref": "#/definitions/Trigger/definitions/value"
            },
            "compareOperator": {
              "type": "string",
              "enum": [
                "==",
                "===",
                "!=",
                "!==",
                "<",
                "<=",
                ">",
                ">="
              ]
            },
            "logic": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "AND",
                    "OR"
                  ]
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "required": [
            "compare1",
            "compare2",
            "compareOperator"
          ]
        },
        "vCase": {
          "title": "VCase",
          "type": "object",
          "properties": {
            "actions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Trigger/definitions/action"
              }
            },
            "caseValue": {
              "$ref": "#/definitions/Trigger/definitions/value"
            }
          },
          "required": [
            "actions",
            "caseValue"
          ]
        },
        "dCase": {
          "title": "DCase",
          "type": "object",
          "properties": {
            "actions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Trigger/definitions/action"
              }
            }
          },
          "required": [
            "actions"
          ]
        },
        "symbolExpression": {
          "title": "SymbolExpression",
          "type": "string",
          "pattern": "^%(s|i|l|pp|tp|f|ctrl|ctx|tr)%.+%\\1%$"
        },
        "controlSymbolExpression": {
          "title": "controlSymbolExpression",
          "type": "string",
          "pattern": "^%(ctrl)%.+%\\1%$"
        },
        "controlAttributeSymbolExpression": {
          "title": "ControlAttributeSymbolExpression",
          "type": "string",
          "pattern": "^%(ctrl)%.+%\\1%$"
        }
      },
      "type": "object",
      "properties": {
        "event": {
          "type": "string",
          "minLength": 1
        },
        "preventDefault": {
          "type": "boolean",
          "description": "If activated the default action of the event will not be triggered.\nIf set on touch events the corresponding mouse events will not be triggered."
        },
        "displayName": {
          "type": "string",
          "description": "Name which should be presented the user."
        },
        "actions": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Trigger/definitions/action"
          }
        }
      },
      "additionalProperties": false,
      "required": [
        "event",
        "actions"
      ]
    },
    "TriggerList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Trigger"
      },
      "minItems": 1
    },
    "TypeRef": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string"
    },
    "UserControlPath": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "minLength": 1
    },
    "VerticalAlignment": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "Top",
        "Center",
        "Bottom"
      ]
    },
    "VirtualControlRightMappingList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "items": {
        "type": "object",
        "engineeringColumns": [
          "virtualControlRight",
          "controlRight"
        ],
        "properties": {
          "virtualControlRight": {
            "description": "Name of the right which is configured on a parent control (aka outer right).",
            "type": "string",
            "minLength": 1
          },
          "controlRight": {
            "description": "Name of the right which is working on this control (aka inner right).",
            "type": "string",
            "minLength": 1
          }
        },
        "description": "Allows a mapping of rights to parent control virtual rights. For example the 'operate' right of this control can be configured to react on a custom 'canStartPump' right of a parent control.",
        "required": [
          "controlRight",
          "virtualControlRight"
        ]
      },
      "description": "Allows a mapping of rights to parent control virtual rights. For example the 'operate' right of this control can be configured to react on a custom 'canStartPump' right of a parent control."
    },
    "Visibility": {
      "type": "string",
      "enum": [
        "Visible",
        "Hidden",
        "Collapsed"
      ],
      "default": "Visible"
    },
    "EnumMapping": {
      "type": "object",
      "patternProperties": {
        "^-?\\d+$": {
          "type": "string"
        }
      }
    },
    "DataPrecedence": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "Data",
        "UserInput",
        "ChangedDataOnly"
      ]
    },
    "TcHmi.BuildingAutomation.Controls.DataType": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "options": [
        {
          "label": "unknown",
          "value": 0
        },
        {
          "label": "string",
          "value": 1
        },
        {
          "label": "number",
          "value": 2
        },
        {
          "label": "integer",
          "value": 3
        },
        {
          "label": "boolean",
          "value": 4
        },
        {
          "label": "object",
          "value": 5
        },
        {
          "label": "array",
          "value": 6
        },
        {
          "label": "enum",
          "value": 7
        },
        {
          "label": "dateTime",
          "value": 8
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.EventCondition": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18
      ],
      "options": [
        {
          "label": "Invalid",
          "value": 0
        },
        {
          "label": "eTypeAlarm",
          "value": 1
        },
        {
          "label": "eTypeDisturb",
          "value": 2
        },
        {
          "label": "eTypeMaintenance",
          "value": 3
        },
        {
          "label": "eTypeNotification",
          "value": 4
        },
        {
          "label": "eTypeOther",
          "value": 5
        },
        {
          "label": "eFlagOverridden",
          "value": 6
        },
        {
          "label": "eFlagOutOfService",
          "value": 7
        },
        {
          "label": "eFlagFault",
          "value": 8
        },
        {
          "label": "eFlagActiveEvent",
          "value": 9
        },
        {
          "label": "ePrioLifeSafety",
          "value": 10
        },
        {
          "label": "ePrioCritical",
          "value": 11
        },
        {
          "label": "ePrioManualLocal",
          "value": 12
        },
        {
          "label": "ePrioManualRemote",
          "value": 13
        },
        {
          "label": "eLockPrioLocalMedium",
          "value": 14
        },
        {
          "label": "eLockPrioLocalHigh",
          "value": 15
        },
        {
          "label": "eLockPrioMedium",
          "value": 16
        },
        {
          "label": "eLockPrioHigh",
          "value": 17
        },
        {
          "label": "eEventIconDisplayed",
          "value": 18
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.EventIconState": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "options": [
        {
          "label": "Invalid",
          "value": 0
        },
        {
          "label": "eNone",
          "value": 1
        },
        {
          "label": "eIndicatd",
          "value": 2
        },
        {
          "label": "eGoneAcked",
          "value": 3
        },
        {
          "label": "eGone",
          "value": 4
        },
        {
          "label": "ePresentAcked",
          "value": 5
        },
        {
          "label": "ePresent",
          "value": 6
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.System.BaseControl": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "BaseControl",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.System"
    },
    "TcHmi.BuildingAutomation.ICoordinateXY": {
      "type": "object",
      "title": "ICoordinateXY",
      "description": "Defines a XY coordinate",
      "engineeringColumns": [
        "x",
        "y"
      ],
      "propertiesMeta": [
        {
          "name": "x",
          "category": "Common",
          "displayName": "X Value"
        },
        {
          "name": "y",
          "category": "Common",
          "displayName": "Y Value"
        }
      ],
      "properties": {
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      },
      "required": [
        "x",
        "y"
      ]
    },
    "TcHmi.BuildingAutomation.DialogWindowOptions": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "content",
          "displayName": "Content",
          "description": "The content that should be displayed in the dialog window.",
          "defaultValue": null
        },
        {
          "name": "buttons",
          "displayName": "Buttons",
          "description": "Buttons for the dialog.",
          "defaultValue": 0
        },
        {
          "name": "modal",
          "displayName": "Modal",
          "description": "Selects if the dialog is opened modal or not.",
          "defaultValue": true
        },
        {
          "name": "scrolling",
          "displayName": "Scrolling",
          "description": "Possible values are No, Yes, Auto.",
          "defaultValue": "Auto"
        },
        {
          "name": "headline",
          "displayName": "Headline",
          "description": "The headline of the dialog.",
          "defaultValue": "Dialog headline"
        },
        {
          "name": "width",
          "displayName": "Width",
          "defaultValue": 1000,
          "defaultValueInternal": 1000
        },
        {
          "name": "widthUnit",
          "displayName": "Width unit",
          "refTo": "width",
          "defaultValue": "px",
          "defaultValueInternal": "px"
        },
        {
          "name": "height",
          "displayName": "Height",
          "defaultValue": 500,
          "defaultValueInternal": 500
        },
        {
          "name": "heightUnit",
          "displayName": "Height unit",
          "refTo": "height",
          "defaultValue": "px",
          "defaultValueInternal": "px"
        }
      ],
      "properties": {
        "content": {
          "$ref": "tchmi:framework#/definitions/ContentPath"
        },
        "buttons": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.DialogWindowButtons"
        },
        "modal": {
          "type": "boolean"
        },
        "scrolling": {
          "$ref": "tchmi:framework#/definitions/ScrollMode"
        },
        "headline": {
          "type": "string"
        },
        "width": {
          "type": "number"
        },
        "widthUnit": {
          "$ref": "tchmi:framework#/definitions/MeasurementUnit"
        },
        "height": {
          "type": "number"
        },
        "heightUnit": {
          "$ref": "tchmi:framework#/definitions/MeasurementUnit"
        }
      }
    },
    "TcHmi.BuildingAutomation.UserContents": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "items": {
        "type": "object",
        "title": "UserContent",
        "description": "Defines a relation between a user and a content.",
        "engineeringColumns": [
          "userName",
          "content"
        ],
        "propertiesMeta": [
          {
            "name": "userName",
            "displayName": "UserName          ",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "content",
            "displayName": "Content",
            "defaultValue": null,
            "defaultValueInternal": null
          }
        ],
        "properties": {
          "userName": {
            "type": "string"
          },
          "content": {
            "$ref": "tchmi:framework#/definitions/ContentPath"
          }
        },
        "required": [
          "userName",
          "content"
        ]
      }
    },
    "TcHmi.BuildingAutomation.StringOrNumber": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "oneOf": [
        {
          "title": "String",
          "type": "string"
        },
        {
          "title": "Number",
          "type": "number"
        }
      ]
    },
    "TcHmi.BuildingAutomation.NumberOrBoolean": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": [
        "number",
        "boolean"
      ]
    },
    "TcHmi.BuildingAutomation.FourSidedColor": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "title": "FourSidedColor",
      "propertiesMeta": [
        {
          "name": "left",
          "displayName": "Left",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "top",
          "displayName": "Top",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "right",
          "displayName": "Right",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "bottom",
          "displayName": "Bottom",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "left": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "top": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "right": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "bottom": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        }
      }
    },
    "TcHmi.BuildingAutomation.Orientation": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1
      ],
      "options": [
        {
          "label": "Vertical",
          "value": 0
        },
        {
          "label": "Horizontal",
          "value": 1
        }
      ]
    },
    "TcHmi.BuildingAutomation.Direction": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "integer",
      "enum": [
        0,
        1
      ],
      "options": [
        {
          "label": "left",
          "value": 0
        },
        {
          "label": "right",
          "value": 1
        }
      ]
    },
    "TcHmi.BuildingAutomation.Position": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Position",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "options": [
        {
          "label": "left",
          "value": 0
        },
        {
          "label": "top",
          "value": 1
        },
        {
          "label": "right",
          "value": 2
        },
        {
          "label": "bottom",
          "value": 3
        }
      ]
    },
    "TcHmi.BuildingAutomation.DialogWindowButtons": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "DialogWindowButtons",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "options": [
        {
          "label": "Cancel",
          "value": 0
        },
        {
          "label": "CancelSize",
          "value": 1
        },
        {
          "label": "OkCancel",
          "value": 2
        },
        {
          "label": "OkCancelSize",
          "value": 3
        }
      ]
    },
    "TcHmi.BuildingAutomation.DateTimeChoice": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "DateTimeChoice",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ],
      "options": [
        {
          "label": "Date",
          "value": 0
        },
        {
          "label": "Time",
          "value": 1
        },
        {
          "label": "DateTime",
          "value": 2
        }
      ]
    },
    "TcHmi.BuildingAutomation.EventType": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        1,
        2,
        3,
        4,
        5
      ],
      "options": [
        {
          "label": "Alarm",
          "value": 1
        },
        {
          "label": "Disturb",
          "value": 2
        },
        {
          "label": "Maintenance",
          "value": 3
        },
        {
          "label": "Notification",
          "value": 4
        },
        {
          "label": "Other",
          "value": 5
        }
      ]
    },
    "TcHmi.BuildingAutomation.Weekday": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        255,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "options": [
        {
          "label": "Unspecified",
          "value": 255
        },
        {
          "label": "eMonday",
          "value": 1
        },
        {
          "label": "eTuesday",
          "value": 2
        },
        {
          "label": "eWednesday",
          "value": 3
        },
        {
          "label": "eThursday",
          "value": 4
        },
        {
          "label": "eFriday",
          "value": 5
        },
        {
          "label": "eSaturday",
          "value": 6
        },
        {
          "label": "eSunday",
          "value": 7
        }
      ]
    },
    "TcHmi.BuildingAutomation.Month": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        255,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
      ],
      "options": [
        {
          "label": "Unspecified",
          "value": 255
        },
        {
          "label": "eJanuary",
          "value": 1
        },
        {
          "label": "eFebruary",
          "value": 2
        },
        {
          "label": "eMarch",
          "value": 3
        },
        {
          "label": "eApril",
          "value": 4
        },
        {
          "label": "eMay",
          "value": 5
        },
        {
          "label": "eJune",
          "value": 6
        },
        {
          "label": "eJuly",
          "value": 7
        },
        {
          "label": "eAugust",
          "value": 8
        },
        {
          "label": "eSeptember",
          "value": 9
        },
        {
          "label": "eOctober",
          "value": 10
        },
        {
          "label": "eNovember",
          "value": 11
        },
        {
          "label": "eDecember",
          "value": 12
        }
      ]
    },
    "TcHmi.BuildingAutomation.BaTime": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "nHour",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "nMinute",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "nSecond",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "nHour": {
          "type": "number"
        },
        "nMinute": {
          "type": "number"
        },
        "nSecond": {
          "type": "number"
        }
      }
    },
    "TcHmi.BuildingAutomation.BaDate": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "eDayOfWeek",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "eMonth",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "nDay",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "nYear",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "eDayOfWeek": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Weekday"
        },
        "eMonth": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Month"
        },
        "nDay": {
          "type": "number"
        },
        "nYear": {
          "type": "number"
        }
      }
    },
    "TcHmi.BuildingAutomation.BaDateTime": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "stDate",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "stTime",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "stDate": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.BaDate"
        },
        "stTime": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.BaTime"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.System.BaseTemplate": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "BaseTemplate",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.System"
    },
    "TcHmi.BuildingAutomation.Controls.System.TextControl": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseControl",
      "frameworkControlType": "TextControl",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.System"
    },
    "TcHmi.BuildingAutomation.Controls.System.TextControl.TextDecorationLine": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "none",
        "underline",
        "overline",
        "line-through",
        "initial",
        "inherit"
      ]
    },
    "TcHmi.BuildingAutomation.Controls.System.TextControl.TextDecorationStyle": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "solid",
        "double",
        "dotted",
        "dashed",
        "wavy",
        "initial",
        "inherit"
      ]
    },
    "TcHmi.BuildingAutomation.Controls.System.TextControl.UserSelect": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "auto",
        "none",
        "text",
        "all"
      ]
    },
    "TcHmi.BuildingAutomation.Controls.System.TextControl.TextOverflow": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ],
      "options": [
        {
          "label": "none",
          "value": 0
        },
        {
          "label": "ellipsis",
          "value": 1
        },
        {
          "label": "marquee",
          "value": 2
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.System.BaseRoomControl": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseControl",
      "frameworkControlType": "BaseRoomControl",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.System"
    },
    "TcHmi.BuildingAutomation.Controls.Common.Button": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.TextControl",
      "frameworkControlType": "Button",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.Checkbox": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.TextControl",
      "frameworkControlType": "Checkbox",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.Checkbox.Appearance": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1,
        2
      ],
      "options": [
        {
          "label": "checkbox",
          "value": 0
        },
        {
          "label": "toggleSwitch",
          "value": 1
        },
        {
          "label": "toggleSlider",
          "value": 2
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Common.Checkbox.BaInterfaceSymbolNames": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaInterfaceSymbolNames",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "state",
          "displayName": "State",
          "description": "The symbol to set the state. (Default: State, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "stateFeedback",
          "displayName": "State feedback",
          "description": "The feedback for the state. (Default: StateFeedback, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "activeText",
          "displayName": "Active text",
          "description": "Text when the checkbox is active. (Default: ActiveText, DataType: string)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "inactiveText",
          "displayName": "Inactive text",
          "description": "Text when the checkbox is inactive. (Default: InactiveText, DataType: string)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "state": {
          "type": "string"
        },
        "stateFeedback": {
          "type": "string"
        },
        "activeText": {
          "type": "string"
        },
        "inactiveText": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.ColorPicker": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "ColorPicker",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.ColorPicker.ColorPlateType": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "options": [
        {
          "label": "hslRect1",
          "value": 0
        },
        {
          "label": "hslRectAll",
          "value": 1
        },
        {
          "label": "hsvCircle",
          "value": 2
        },
        {
          "label": "hslRing",
          "value": 3
        }
      ]
    },
    "TcHmi.BuildingAutomation.Color.RGBAColor": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "title": "RGBAColor",
      "propertiesMeta": [
        {
          "name": "r",
          "category": "Common",
          "displayName": "Red",
          "displayPriority": 10,
          "description": "Red 0-255",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "g",
          "category": "Common",
          "displayName": "Green",
          "displayPriority": 10,
          "description": "Green 0-255",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "b",
          "category": "Common",
          "displayName": "Blue",
          "displayPriority": 10,
          "description": "Blue 0-255",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "a",
          "category": "Common",
          "displayName": "Alpha",
          "displayPriority": 10,
          "description": "Alpha 0-1",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "r": {
          "type": "number"
        },
        "g": {
          "type": "number"
        },
        "b": {
          "type": "number"
        },
        "a": {
          "type": "number"
        }
      }
    },
    "TcHmi.BuildingAutomation.HSLColor": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "title": "HSLColor",
      "propertiesMeta": [
        {
          "name": "h",
          "category": "Common",
          "displayName": "Hue",
          "displayPriority": 10,
          "description": "Hue 0-1",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "s",
          "category": "Common",
          "displayName": "Saturation",
          "displayPriority": 10,
          "description": "Saturation 0-1",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "l",
          "category": "Common",
          "displayName": "Lightness",
          "displayPriority": 10,
          "description": "Lightness 0-1",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "h": {
          "type": "number"
        },
        "s": {
          "type": "number"
        },
        "l": {
          "type": "number"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.Combobox": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.TextControl",
      "frameworkControlType": "Combobox",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.Combobox.ComboboxItem": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "title": "ComboboxItem",
      "description": "Defines a combobox item",
      "engineeringColumns": [
        "text",
        "value"
      ],
      "propertiesMeta": [
        {
          "name": "text",
          "category": "Common",
          "displayName": "Text                                           ",
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Entry"
        },
        {
          "name": "value",
          "category": "Common",
          "displayName": "Value",
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "text": {
          "type": "string"
        },
        "value": {
          "type": "number"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.Combobox.ComboboxItems": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "title": "ComboboxItems",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Common.Combobox.ComboboxItem"
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.Combobox.BaInterfaceSymbolNames": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaInterfaceSymbolNames",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "value",
          "displayName": "Value",
          "description": "The symbol to set the value. (Default: Value, DataType: integer)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "valueFeedback",
          "displayName": "Value feedback",
          "description": "The feedback for the value. (Default: ValueFeedback, DataType: integer)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "stateTexts",
          "displayName": "State texts",
          "description": "Array for the texts of the different values. (Default: StateTexts, DataType: string[])",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "value": {
          "type": "string"
        },
        "valueFeedback": {
          "type": "string"
        },
        "stateTexts": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.DateTimeField": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.TextControl",
      "frameworkControlType": "DateTimeField",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls"
    },
    "TcHmi.BuildingAutomation.Controls.Common.Icon": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "Icon",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.Icon.Overlay": {
      "title": "Icon Overlay",
      "description": "Icon Overlay",
      "engineeringColumns": [
        "iconPath"
      ],
      "type": "object",
      "properties": {
        "iconColor": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "backgroundColor": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "iconPath": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "iconRotation": {
          "type": [
            "number",
            "null"
          ]
        },
        "iconRotationSpeed": {
          "type": [
            "number",
            "null"
          ]
        },
        "iconRotationDirection": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Direction"
        },
        "width": {
          "$ref": "tchmi:framework#/definitions/MeasurementValue"
        },
        "widthUnit": {
          "$ref": "tchmi:framework#/definitions/MeasurementUnit"
        },
        "height": {
          "$ref": "tchmi:framework#/definitions/MeasurementValue"
        },
        "heightUnit": {
          "$ref": "tchmi:framework#/definitions/MeasurementUnit"
        },
        "horizontalAlignment": {
          "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
        },
        "verticalAlignment": {
          "$ref": "tchmi:framework#/definitions/VerticalAlignment"
        },
        "margin": {
          "$ref": "tchmi:framework#/definitions/Padding"
        },
        "position": {
          "$ref": "tchmi:framework#/definitions/Padding"
        }
      },
      "propertiesMeta": [
        {
          "name": "iconColor",
          "displayName": "IconColor",
          "category": "Colors",
          "displayPriority": 10,
          "description": "Color of the icon.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "backgroundColor",
          "displayName": "BackgroundColor",
          "category": "Colors",
          "displayPriority": 10,
          "description": "Color of the background of the icon.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "iconPath",
          "displayName": "Icon",
          "category": "Icon",
          "displayPriority": 10,
          "description": "Path of the icon.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "iconRotation",
          "displayName": "Rotation",
          "category": "Icon",
          "displayPriority": 200,
          "description": "Rotation of the icon in degree (0°-360°).",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "iconRotationSpeed",
          "displayName": "RotationSpeed",
          "category": "Icon",
          "displayPriority": 200,
          "description": "Rotation speed of the icon. Icon rotation will be ignored if set.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "iconRotationDirection",
          "displayName": "RotationDirection",
          "category": "Icon",
          "displayPriority": 200,
          "description": "Rotation direction of the icon. Icon rotation will be ignored if set.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "width",
          "displayName": "Width",
          "category": "Overlay",
          "displayPriority": 10,
          "description": "Width of the overlay.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "widthUnit",
          "displayName": "WidthUnit",
          "refTo": "width",
          "category": "Overlay",
          "displayPriority": 10,
          "description": "Width unit of the overlay.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "height",
          "displayName": "Height",
          "category": "Overlay",
          "displayPriority": 10,
          "description": "Height of the overlay.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "heightUnit",
          "displayName": "HeightUnit",
          "refTo": "height",
          "category": "Overlay",
          "displayPriority": 10,
          "description": "Height unit of the overlay.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "horizontalAlignment",
          "displayName": "HorizontalAlignment",
          "category": "Overlay",
          "displayPriority": 10,
          "description": "Horizontal alignment of the overlay.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "verticalAlignment",
          "displayName": "VerticalAlignment",
          "category": "Overlay",
          "displayPriority": 10,
          "description": "Vertical alignment of the overlay.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "margin",
          "displayName": "Margin",
          "category": "Overlay",
          "displayPriority": 60,
          "description": "Margin around the overlay.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "position",
          "displayName": "Position",
          "category": "Overlay",
          "displayPriority": 60,
          "description": "Position of the overlay. This can be used if IconVerticalAlginment and IconHorizontalAlignment is not used or is not sufficient.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "required": [
        "icon"
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Common.Icon.OverlayList": {
      "title": "Overlay List",
      "description": "Overlay List",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Common.Icon.Overlay"
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.InputBox": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.TextControl",
      "frameworkControlType": "InputBox",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.InputBox.InputDataType": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1,
        2
      ],
      "options": [
        {
          "label": "auto",
          "value": 0
        },
        {
          "label": "string",
          "value": 1
        },
        {
          "label": "number",
          "value": 2
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Common.InputBox.BaInterfaceSymbolNames": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaInterfaceSymbolNames",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "value",
          "displayName": "Value",
          "description": "The symbol to set the value. (Default: Value, DataType: number, string)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "valueFeedback",
          "displayName": "Value feedback",
          "description": "The feedback for the value. (Default: ValueFeedback, DataType: number, string)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "unit",
          "displayName": "Unit",
          "description": "Unit for an analog value. (Default: Unit, DataType: string)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "minVal",
          "displayName": "Minimum value",
          "description": "Minimum value for an analog value. (Default: MinVal, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "maxVal",
          "displayName": "Maximum value",
          "description": "Maximum value for an analog value. (Default: MaxVal, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "value": {
          "type": "string"
        },
        "valueFeedback": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "minVal": {
          "type": "string"
        },
        "maxVal": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.ManualOverride": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseControl",
      "frameworkControlType": "ManualOverride",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.ManualOverride.BaInterfaceSymbolNames": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaInterfaceSymbolNames",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "manualEnable",
          "displayName": "ManualEnable",
          "description": "The symbol to set ManualEnable. (Default: ManualEnable, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "manualValue",
          "displayName": "ManualValue",
          "description": "The symbol to set the ManualValue. (Default: ManualValue, DataType: boolean | number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "autoValue",
          "displayName": "AutoValue",
          "description": "The symbol to set the AutoValue. (Default: AutoValue, DataType: boolean | number)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "manualEnable": {
          "type": "string"
        },
        "manualValue": {
          "type": "string"
        },
        "autoValue": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.ManualOverrideBinary": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseControl",
      "frameworkControlType": "ManualOverrideBinary",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.ManualOverrideBinary.BaInterfaceSymbolNames": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaInterfaceSymbolNames",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "manualEnable",
          "displayName": "ManualEnable",
          "description": "The symbol to set ManualEnable. (Default: ManualEnable, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "manualValue",
          "displayName": "ManualValue",
          "description": "The symbol to set the ManualValue. (Default: ManualValue, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "autoValue",
          "displayName": "AutoValue",
          "description": "The symbol to set the AutoValue. (Default: AutoValue, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "manualEnable": {
          "type": "string"
        },
        "manualValue": {
          "type": "string"
        },
        "autoValue": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.Slider": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.TextControl",
      "frameworkControlType": "Slider",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.Slider.SliderRanges": {
      "type": "array",
      "title": "SliderRanges",
      "items": {
        "type": "object",
        "title": "SliderRange",
        "description": "Defines a slider range",
        "engineeringColumns": [
          "start",
          "end"
        ],
        "propertiesMeta": [
          {
            "name": "color",
            "category": "Color",
            "displayName": "Color"
          },
          {
            "name": "start",
            "category": "Common",
            "displayName": "Start           ",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "end",
            "category": "Common",
            "displayName": "End",
            "defaultValue": null,
            "defaultValueInternal": null
          }
        ],
        "properties": {
          "color": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "start": {
            "type": "number"
          },
          "end": {
            "type": "number"
          }
        },
        "required": [
          "start",
          "color"
        ]
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.Slider.KnobAppearance": {
      "type": "string",
      "enum": [
        0,
        1
      ],
      "options": [
        {
          "label": "rectangle",
          "value": 0
        },
        {
          "label": "round",
          "value": 1
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Common.Slider.BaInterfaceSymbolNames": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaInterfaceSymbolNames",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "value",
          "displayName": "Value",
          "description": "The symbol to set the value. (Default: Value, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "valueFeedback",
          "displayName": "Value feedback",
          "description": "The feedback for the value. (Default: ValueFeedback, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "unit",
          "displayName": "Unit",
          "description": "Unit for an analog value. (Default: Unit, DataType: string)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "minVal",
          "displayName": "Minimum value",
          "description": "Minimum value for an analog value. (Default: MinVal, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "maxVal",
          "displayName": "Maximum value",
          "description": "Maximum value for an analog value. (Default: MaxVal, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "value": {
          "type": "string"
        },
        "valueFeedback": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "minVal": {
          "type": "string"
        },
        "maxVal": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.TabWindow": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseControl",
      "frameworkControlType": "TabWindow",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.TabWindow.Data": {
      "type": "array",
      "items": {
        "type": "object",
        "title": "TabData",
        "engineeringColumns": [
          "ID",
          "Text"
        ],
        "propertiesMeta": [
          {
            "name": "ID",
            "displayName": "ID",
            "description": "The unique ID of the tab.",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "Text",
            "displayName": "Text",
            "description": "The text that will be displayed in the tab.",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "Icon",
            "displayName": "Icon",
            "description": "The icon that will be displayed in the tab.",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "Content",
            "displayName": "Content",
            "description": "The content that will be displayed when the tab was selected.",
            "defaultValue": null,
            "defaultValueInternal": null
          }
        ],
        "properties": {
          "ID": {
            "type": "string"
          },
          "Text": {
            "type": "string"
          },
          "Icon": {
            "$ref": "tchmi:framework#/definitions/Path"
          },
          "Content": {
            "$ref": "tchmi:framework#/definitions/ContentPath"
          }
        },
        "required": [
          "ID",
          "Content"
        ]
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.Textblock": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.TextControl",
      "frameworkControlType": "Textblock",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.Calendar": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseControl",
      "frameworkControlType": "Calendar",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.Calendar.CalendarDisplayMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1
      ],
      "options": [
        {
          "label": "DatePicker",
          "value": 0
        },
        {
          "label": "EventCalendar",
          "value": 1
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Common.Calendar.CalendarDisplayView": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1
      ],
      "options": [
        {
          "label": "Month",
          "value": 0
        },
        {
          "label": "Year",
          "value": 1
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Management.Trend": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseControl",
      "frameworkControlType": "Trend",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Management"
    },
    "TcHmi.BuildingAutomation.Controls.Common.ValueField": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.TextControl",
      "frameworkControlType": "ValueField",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.Scale": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseControl",
      "frameworkControlType": "Scale",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.Scale.ScaleSetpoints": {
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.ICoordinateXY",
        "title": "ScaleSetpoint",
        "description": "Defines a scale setpoint"
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.Scale.ScaleBehavior": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1,
        2
      ],
      "options": [
        {
          "label": "any",
          "value": 0
        },
        {
          "label": "onlyDecreasing",
          "value": 1
        },
        {
          "label": "onlyIncreasing",
          "value": 2
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Common.Scale.ScaleEnding": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "options": [
        {
          "label": "direct",
          "value": 0
        },
        {
          "label": "infinity",
          "value": 1
        },
        {
          "label": "limits",
          "value": 2
        },
        {
          "label": "cutOff",
          "value": 3
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Common.Scale.Scales": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Scales",
      "type": "array",
      "items": {
        "type": "object",
        "title": "Scale",
        "description": "Defines a scale.",
        "engineeringColumns": [
          "Title"
        ],
        "propertiesMeta": [
          {
            "name": "ScaleSetpoints",
            "category": "Common",
            "displayName": "ScaleSetpoints",
            "displayPriority": 10,
            "description": "",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "YMax",
            "category": "Common",
            "displayName": "YMax",
            "displayPriority": 10,
            "description": "",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "YMin",
            "category": "Common",
            "displayName": "YMin",
            "displayPriority": 10,
            "description": "",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "Title",
            "category": "Common",
            "displayName": "Title",
            "displayPriority": 10,
            "description": "Title of the scale -> used for the axis description.",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "Behavior",
            "category": "Common",
            "displayName": "Behavior",
            "displayPriority": 10,
            "description": "Behavior of the scale",
            "defaultValue": 0,
            "defaultValueInternal": 0
          },
          {
            "name": "Ending",
            "category": "Common",
            "displayName": "Ending",
            "displayPriority": 10,
            "description": "Einding of the scale",
            "defaultValue": 0,
            "defaultValueInternal": 0
          },
          {
            "name": "SnapPeriode",
            "category": "Common",
            "displayName": "SnapPeriode",
            "displayPriority": 10,
            "description": "The periode the Setpoints should snap to after moving.",
            "defaultValue": 1,
            "defaultValueInternal": 1
          },
          {
            "name": "AllowVerticalMovement",
            "category": "Common",
            "displayName": "AllowVerticalMovement",
            "displayPriority": 10,
            "description": "Defines if vertical movement of the Setpoints is allowed.",
            "defaultValue": true,
            "defaultValueInternal": true
          },
          {
            "name": "AllowHorizontalMovement",
            "category": "Common",
            "displayName": "AllowHorizontalMovement",
            "displayPriority": 10,
            "description": "Defines if horizontal movement of the Setpoints is allowed.",
            "defaultValue": true,
            "defaultValueInternal": true
          },
          {
            "name": "YAxisExtension",
            "category": "Common",
            "displayName": "YAxisExtension",
            "displayPriority": 10,
            "description": "Defines how much the y axis is extended from YMin and YMax.",
            "defaultValue": 0,
            "defaultValueInternal": 0
          },
          {
            "name": "ReadOnly",
            "category": "Common",
            "displayName": "ReadOnly",
            "displayPriority": 10,
            "description": "Defines if horizontal movement of the Setpoints is allowed.",
            "defaultValue": true,
            "defaultValueInternal": true
          },
          {
            "name": "Unit",
            "category": "Common",
            "displayName": "Unit",
            "displayPriority": 10,
            "description": "Defines the unit of the y axis.",
            "defaultValue": null,
            "defaultValueInternal": null
          }
        ],
        "properties": {
          "ScaleSetpoints": {
            "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Common.Scale.ScaleSetpoints"
          },
          "YMax": {
            "type": "number"
          },
          "YMin": {
            "type": "number"
          },
          "Title": {
            "type": "string"
          },
          "Behavior": {
            "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Common.Scale.ScaleBehavior"
          },
          "Ending": {
            "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Common.Scale.ScaleEnding"
          },
          "SnapPeriode": {
            "type": "number"
          },
          "AllowVerticalMovement": {
            "type": "boolean"
          },
          "AllowHorizontalMovement": {
            "type": "boolean"
          },
          "YAxisExtension": {
            "type": "number"
          },
          "ReadOnly": {
            "type": "boolean"
          },
          "Unit": {
            "type": "string"
          }
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.DataGrid": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.Common.DataGrid",
      "frameworkControlType": "DataGrid",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.Controls.Beckhoff.TcHmiDatagrid.ColumnDefinitionList": {
      "title": "ColumnDefinitionList",
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "object",
            "engineeringColumns": [
              "name",
              "label",
              "control",
              "width",
              "widthUnit"
            ],
            "propertiesMeta": [
              {
                "name": "cellBackground",
                "displayName": "Cell background",
                "category": "Colors",
                "displayPriority": 10,
                "description": "Color of this cells",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "textColor",
                "displayName": "Text color",
                "category": "Colors",
                "displayPriority": 10,
                "description": "Color of the Text in this cells",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "name",
                "displayName": "name",
                "category": "General",
                "displayPriority": 10,
                "description": "Name of the property of the srcData object",
                "defaultValue": "",
                "defaultValueInternal": null
              },
              {
                "name": "label",
                "displayName": "Label",
                "category": "General",
                "displayPriority": 10,
                "description": "Name of the Label for this column",
                "defaultValue": "",
                "defaultValueInternal": null
              },
              {
                "name": "control",
                "displayName": "Control",
                "category": "General",
                "displayPriority": 10,
                "description": "Type of the input elements for this column",
                "defaultValue": "TextBox",
                "defaultValueInternal": null
              },
              {
                "name": "width",
                "displayName": "Width",
                "category": "General",
                "displayPriority": 10,
                "description": "Width for this column",
                "defaultValue": 100,
                "defaultValueInternal": null
              },
              {
                "name": "widthUnit",
                "refTo": "width",
                "displayName": "Width unit",
                "category": "General",
                "displayPriority": 10,
                "description": "Width unit for this column",
                "defaultValue": "px",
                "defaultValueInternal": "px"
              },
              {
                "name": "resize",
                "displayName": "Resize",
                "category": "General",
                "displayPriority": 10,
                "description": "Can this column be resized?",
                "defaultValue": false,
                "defaultValueInternal": false
              },
              {
                "name": "minWidth",
                "displayName": "Min width",
                "category": "General",
                "displayPriority": 10,
                "description": "Minimum width for this column",
                "defaultValue": 100,
                "defaultValueInternal": null
              },
              {
                "name": "minWidthUnit",
                "refTo": "minWidth",
                "displayName": "Min width unit",
                "category": "General",
                "displayPriority": 10,
                "description": "Minimum width unit for this column",
                "defaultValue": "px",
                "defaultValueInternal": "px"
              },
              {
                "name": "editable",
                "displayName": "Editable",
                "category": "General",
                "displayPriority": 10,
                "description": "Can this column be edited?",
                "defaultValue": false,
                "defaultValueInternal": false
              },
              {
                "name": "sortable",
                "displayName": "Sortable",
                "category": "General",
                "displayPriority": 10,
                "description": "Can this column be sortedby user interaction?",
                "defaultValue": true,
                "defaultValueInternal": true
              },
              {
                "name": "horizontalAlignment",
                "displayName": "Horizontal alignment",
                "category": "General",
                "displayPriority": 10,
                "description": "Horizontal alignment of this column",
                "defaultValue": "Left",
                "defaultValueInternal": "Left"
              },
              {
                "name": "verticalAlignment",
                "displayName": "Vertical alignment",
                "category": "General",
                "displayPriority": 10,
                "description": "Vertical alignment of this column",
                "defaultValue": "Center",
                "defaultValueInternal": "Center"
              },
              {
                "name": "format",
                "displayName": "Format",
                "category": "General",
                "displayPriority": 10,
                "description": "A reference of function which is called with each entry",
                "allowedFunctions": {
                  "returnType": "tchmi:general#/definitions/String",
                  "requiredArguments": [
                    {
                      "type": "tchmi:general#/definitions/Any",
                      "description": "The value to format."
                    }
                  ],
                  "waitMode": "Synchronous"
                },
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "dataDefinitions",
                "displayName": "Data definitions",
                "category": "General",
                "displayPriority": 10,
                "description": "Mapping from the srcData to a combobox or image selection",
                "defaultValue": null,
                "defaultValueInternal": null
              }
            ],
            "properties": {
              "cellBackground": {
                "$ref": "tchmi:framework#/definitions/Color"
              },
              "textColor": {
                "anyOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/SolidColor"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "name": {
                "type": "string",
                "minLength": 1
              },
              "label": {
                "type": "string"
              },
              "control": {
                "type": "string",
                "enum": [
                  "TextBox",
                  "TextBlock",
                  "CheckBox",
                  "Image",
                  "ComboBox",
                  "DateTimeField",
                  "EventIcon"
                ]
              },
              "width": {
                "type": "number",
                "minimum": 0
              },
              "widthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "resize": {
                "type": "boolean"
              },
              "minWidth": {
                "type": "number",
                "minimum": 0
              },
              "minWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "editable": {
                "type": "boolean"
              },
              "sortable": {
                "type": "boolean"
              },
              "horizontalAlignment": {
                "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
              },
              "verticalAlignment": {
                "$ref": "tchmi:framework#/definitions/VerticalAlignment"
              },
              "format": {
                "$ref": "tchmi:framework#/definitions/Function"
              },
              "dataDefinitions": {
                "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiDatagrid.DataDefinitionList"
              }
            },
            "required": [
              "name",
              "label",
              "control",
              "width",
              "widthUnit",
              "resize",
              "minWidth",
              "minWidthUnit",
              "editable",
              "horizontalAlignment",
              "verticalAlignment"
            ]
          }
        },
        {
          "type": "object",
          "propertiesMeta": [
            {
              "name": "cellBackground",
              "displayName": "Cell background",
              "category": "Colors",
              "displayPriority": 10,
              "description": "Color of this cells",
              "defaultValue": null,
              "defaultValueInternal": null
            },
            {
              "name": "textColor",
              "displayName": "Text color",
              "category": "Colors",
              "displayPriority": 10,
              "description": "Color of the Text in this cells",
              "defaultValue": null,
              "defaultValueInternal": null
            },
            {
              "name": "label",
              "displayName": "Label",
              "category": "General",
              "displayPriority": 10,
              "description": "Name of the Label for this column",
              "defaultValue": "",
              "defaultValueInternal": null
            },
            {
              "name": "control",
              "displayName": "Control",
              "category": "General",
              "displayPriority": 10,
              "description": "Type of the input elements for this column",
              "defaultValue": "TextBox",
              "defaultValueInternal": null
            },
            {
              "name": "width",
              "displayName": "Width",
              "category": "General",
              "displayPriority": 10,
              "description": "Width for this column",
              "defaultValue": 100,
              "defaultValueInternal": null
            },
            {
              "name": "widthUnit",
              "refTo": "width",
              "displayName": "Width unit",
              "category": "General",
              "displayPriority": 10,
              "description": "Width unit for this column",
              "defaultValue": "px",
              "defaultValueInternal": "px"
            },
            {
              "name": "resize",
              "displayName": "Resize",
              "category": "General",
              "displayPriority": 10,
              "description": "Can this column be resized?",
              "defaultValue": false,
              "defaultValueInternal": false
            },
            {
              "name": "minWidth",
              "displayName": "Min width",
              "category": "General",
              "displayPriority": 10,
              "description": "Minimum width for this column",
              "defaultValue": 100,
              "defaultValueInternal": null
            },
            {
              "name": "minWidthUnit",
              "refTo": "minWidth",
              "displayName": "Min width unit",
              "category": "General",
              "displayPriority": 10,
              "description": "Minimum width unit for this column",
              "defaultValue": "px",
              "defaultValueInternal": "px"
            },
            {
              "name": "editable",
              "displayName": "Editable",
              "category": "General",
              "displayPriority": 10,
              "description": "Can this column be edited?",
              "defaultValue": false,
              "defaultValueInternal": false
            },
            {
              "name": "sortable",
              "displayName": "Sortable",
              "category": "General",
              "displayPriority": 10,
              "description": "Can this column be sorted by user interaction?",
              "defaultValue": true,
              "defaultValueInternal": false
            },
            {
              "name": "horizontalAlignment",
              "displayName": "Horizontal alignment",
              "category": "General",
              "displayPriority": 10,
              "description": "Horizontal alignment of this column",
              "defaultValue": "Left",
              "defaultValueInternal": "Left"
            },
            {
              "name": "verticalAlignment",
              "displayName": "Vertical alignment",
              "category": "General",
              "displayPriority": 10,
              "description": "Vertical alignment of this column",
              "defaultValue": "Center",
              "defaultValueInternal": "Center"
            },
            {
              "name": "format",
              "displayName": "Format",
              "category": "General",
              "displayPriority": 10,
              "description": "A reference of function which is called with each entry",
              "allowedFunctions": {
                "returnType": "tchmi:general#/definitions/String",
                "requiredArguments": [
                  {
                    "type": "tchmi:general#/definitions/Number",
                    "description": "The value to format."
                  }
                ],
                "waitMode": "Synchronous"
              },
              "defaultValue": null,
              "defaultValueInternal": null
            },
            {
              "name": "dataDefinitions",
              "displayName": "Data definitions",
              "category": "General",
              "displayPriority": 10,
              "description": "Mapping from the srcData to a Combobox or Image selection",
              "defaultValue": null,
              "defaultValueInternal": null
            }
          ],
          "properties": {
            "cellBackground": {
              "$ref": "tchmi:framework#/definitions/Color"
            },
            "textColor": {
              "anyOf": [
                {
                  "$ref": "tchmi:framework#/definitions/SolidColor"
                },
                {
                  "type": "null"
                }
              ]
            },
            "label": {
              "type": "string"
            },
            "control": {
              "type": "string",
              "enum": [
                "TextBox",
                "TextBlock",
                "CheckBox",
                "Image",
                "ComboBox",
                "DateTimeField",
                "EventIcon"
              ]
            },
            "width": {
              "type": "number",
              "minimum": 0
            },
            "widthUnit": {
              "$ref": "tchmi:framework#/definitions/MeasurementUnit"
            },
            "resize": {
              "type": "boolean"
            },
            "minWidth": {
              "type": "number",
              "minimum": 0
            },
            "minWidthUnit": {
              "$ref": "tchmi:framework#/definitions/MeasurementUnit"
            },
            "editable": {
              "type": "boolean"
            },
            "sortable": {
              "type": "boolean"
            },
            "horizontalAlignment": {
              "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
            },
            "verticalAlignment": {
              "$ref": "tchmi:framework#/definitions/VerticalAlignment"
            },
            "format": {
              "$ref": "tchmi:framework#/definitions/Function"
            },
            "dataDefinitions": {
              "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiDatagrid.DataDefinitionList"
            }
          },
          "required": [
            "label",
            "control",
            "width",
            "widthUnit",
            "resize",
            "minWidth",
            "minWidthUnit",
            "editable",
            "horizontalAlignment",
            "verticalAlignment"
          ]
        },
        {
          "type": "array",
          "items": {
            "type": "object",
            "engineeringColumns": [
              "name",
              "label",
              "control",
              "width",
              "widthUnit"
            ],
            "propertiesMeta": [
              {
                "name": "cellBackground",
                "displayName": "Cell background",
                "category": "Colors",
                "displayPriority": 10,
                "description": "Background color of the cells in this column",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "textColor",
                "displayName": "Text color",
                "category": "Colors",
                "displayPriority": 10,
                "description": "Text color of the cells in this column",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "name",
                "displayName": "Name",
                "category": "General",
                "displayPriority": 10,
                "description": "Name of the property in the srcData object",
                "defaultValue": "",
                "defaultValueInternal": null
              },
              {
                "name": "label",
                "displayName": "Label",
                "category": "General",
                "displayPriority": 10,
                "description": "Name of the label for this column",
                "defaultValue": "",
                "defaultValueInternal": null
              },
              {
                "name": "control",
                "displayName": "Control",
                "category": "General",
                "displayPriority": 10,
                "description": "Type of the input elements for this column",
                "defaultValue": "TextBox",
                "defaultValueInternal": null
              },
              {
                "name": "width",
                "displayName": "Width",
                "category": "General",
                "displayPriority": 10,
                "description": "Width for this column",
                "defaultValue": 100,
                "defaultValueInternal": null
              },
              {
                "name": "widthUnit",
                "refTo": "width",
                "displayName": "Width unit",
                "category": "General",
                "displayPriority": 10,
                "description": "Width unit for this column. px defines an absolute width, % is relative to the control width and factor can be used to divide the available space into fractions.",
                "defaultValue": "px",
                "defaultValueInternal": "px"
              },
              {
                "name": "resize",
                "displayName": "Resize",
                "category": "General",
                "displayPriority": 10,
                "description": "Can this column be resized? Columns that have factor as their widthUnit can never be resizeable.",
                "defaultValue": false,
                "defaultValueInternal": false
              },
              {
                "name": "minWidth",
                "displayName": "Min width",
                "category": "General",
                "displayPriority": 10,
                "description": "Minimum width for this column",
                "defaultValue": 100,
                "defaultValueInternal": null
              },
              {
                "name": "minWidthUnit",
                "refTo": "minWidth",
                "displayName": "Min width unit",
                "category": "General",
                "displayPriority": 10,
                "description": "Minimum width unit for this column",
                "defaultValue": "px",
                "defaultValueInternal": "px"
              },
              {
                "name": "editable",
                "displayName": "Editable",
                "category": "General",
                "displayPriority": 10,
                "description": "Can this column be edited (text, number) or operated (button, checkbox)?",
                "defaultValue": false,
                "defaultValueInternal": false
              },
              {
                "name": "sortable",
                "displayName": "Sortable",
                "category": "General",
                "displayPriority": 10,
                "description": "Can this column be sortedby user interaction?",
                "defaultValue": true,
                "defaultValueInternal": true
              },
              {
                "name": "horizontalAlignment",
                "displayName": "Horizontal alignment",
                "category": "General",
                "displayPriority": 10,
                "description": "Horizontal alignment of this column",
                "defaultValue": "Left",
                "defaultValueInternal": "Left"
              },
              {
                "name": "verticalAlignment",
                "displayName": "Vertical alignment",
                "category": "General",
                "displayPriority": 10,
                "description": "Vertical alignment of this column",
                "defaultValue": "Center",
                "defaultValueInternal": "Center"
              },
              {
                "name": "headerHorizontalAlignment",
                "displayName": "Header Horizontal alignment",
                "category": "General",
                "displayPriority": 10,
                "description": "Horizontal alignment of the header of this column",
                "defaultValue": "Center",
                "defaultValueInternal": "Center"
              },
              {
                "name": "headerVerticalAlignment",
                "displayName": "Header Vertical alignment",
                "category": "General",
                "displayPriority": 10,
                "description": "Vertical alignment of the header of this column",
                "defaultValue": "Center",
                "defaultValueInternal": "Center"
              },
              {
                "name": "format",
                "displayName": "Format",
                "category": "General",
                "displayPriority": 10,
                "description": "A reference of function which is called with each entry",
                "allowedFunctions": {
                  "returnType": "tchmi:general#/definitions/String",
                  "requiredArguments": [
                    {
                      "type": "tchmi:general#/definitions/Any",
                      "description": "The value to format."
                    }
                  ],
                  "waitMode": "Synchronous"
                },
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "dataDefinitions",
                "displayName": "Data definitions",
                "category": "General",
                "displayPriority": 10,
                "description": "Mapping from the srcData to a combobox or image selection. \nText to show on Buttons. \nRestrictions for number inputs.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "ignoreEscapeSequences",
                "displayName": "Ignore Escape Sequences",
                "category": "General",
                "displayPriority": 10,
                "description": "When set to true a backslash in a text will be shown verbatim in the HMI",
                "defaultValue": false,
                "defaultValueInternal": false
              },
              {
                "name": "autoFocusOut",
                "displayName": "Auto Focus-Out",
                "category": "General",
                "displayPriority": 10,
                "description": "When set to true the control will automatically lose focus when the user presses the enter or escape key",
                "defaultValue": true,
                "defaultValueInternal": true
              },
              {
                "name": "autoSelectText",
                "displayName": "Auto Select Text",
                "category": "General",
                "displayPriority": 10,
                "description": "When set to true all text within the control will be selected when the control gains focus",
                "defaultValue": false,
                "defaultValueInternal": false
              }
            ],
            "properties": {
              "cellBackground": {
                "$ref": "tchmi:framework#/definitions/Color"
              },
              "textColor": {
                "anyOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/SolidColor"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "name": {
                "type": "string",
                "minLength": 1
              },
              "label": {
                "type": "string"
              },
              "control": {
                "type": "string",
                "enum": [
                  "TextBox",
                  "TextBlock",
                  "CheckBox",
                  "Image",
                  "ComboBox",
                  "NumericInput",
                  "SpinboxInput",
                  "PasswordInput",
                  "Button",
                  "ToggleButton",
                  "ToggleSwitch",
                  "RadioButton",
                  "DateTimeInput",
                  "TimespanInput"
                ]
              },
              "width": {
                "allOf": [
                  {
                    "$ref": "#/definitions/PositiveNumber"
                  },
                  {
                    "$ref": "#/definitions/MeasurementValue"
                  }
                ]
              },
              "widthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnitOrFactor"
              },
              "resize": {
                "type": "boolean"
              },
              "minWidth": {
                "allOf": [
                  {
                    "$ref": "#/definitions/PositiveNumber"
                  },
                  {
                    "$ref": "#/definitions/MeasurementValue"
                  }
                ]
              },
              "minWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "editable": {
                "type": "boolean"
              },
              "sortable": {
                "type": "boolean"
              },
              "horizontalAlignment": {
                "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
              },
              "verticalAlignment": {
                "$ref": "tchmi:framework#/definitions/VerticalAlignment"
              },
              "headerHorizontalAlignment": {
                "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
              },
              "headerVerticalAlignment": {
                "$ref": "tchmi:framework#/definitions/VerticalAlignment"
              },
              "format": {
                "$ref": "tchmi:framework#/definitions/Function"
              },
              "dataDefinitions": {
                "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiDatagrid.DataDefinitionList"
              },
              "ignoreEscapeSequences": {
                "type": "boolean"
              },
              "autoFocusOut": {
                "type": "boolean"
              },
              "autoSelectText": {
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "label",
              "control",
              "width",
              "widthUnit",
              "resize",
              "minWidth",
              "minWidthUnit",
              "editable",
              "horizontalAlignment",
              "verticalAlignment"
            ]
          }
        },
        {
          "type": "object",
          "propertiesMeta": [
            {
              "name": "cellBackground",
              "displayName": "Cell background",
              "category": "Colors",
              "displayPriority": 10,
              "description": "Background color of the cells in this column",
              "defaultValue": null,
              "defaultValueInternal": null
            },
            {
              "name": "textColor",
              "displayName": "Text color",
              "category": "Colors",
              "displayPriority": 10,
              "description": "Text color of the cells in this column",
              "defaultValue": null,
              "defaultValueInternal": null
            },
            {
              "name": "label",
              "displayName": "Label",
              "category": "General",
              "displayPriority": 10,
              "description": "Name of the label for this column",
              "defaultValue": "",
              "defaultValueInternal": null
            },
            {
              "name": "control",
              "displayName": "Control",
              "category": "General",
              "displayPriority": 10,
              "description": "Type of the input elements for this column",
              "defaultValue": "TextBox",
              "defaultValueInternal": null
            },
            {
              "name": "width",
              "displayName": "Width",
              "category": "General",
              "displayPriority": 10,
              "description": "Width for this column",
              "defaultValue": 100,
              "defaultValueInternal": null
            },
            {
              "name": "widthUnit",
              "refTo": "width",
              "displayName": "Width unit",
              "category": "General",
              "displayPriority": 10,
              "description": "Width unit for this column",
              "defaultValue": "px",
              "defaultValueInternal": "px"
            },
            {
              "name": "resize",
              "displayName": "Resize",
              "category": "General",
              "displayPriority": 10,
              "description": "Can this column be resized?",
              "defaultValue": false,
              "defaultValueInternal": false
            },
            {
              "name": "minWidth",
              "displayName": "Min width",
              "category": "General",
              "displayPriority": 10,
              "description": "Minimum width for this column",
              "defaultValue": 100,
              "defaultValueInternal": null
            },
            {
              "name": "minWidthUnit",
              "refTo": "minWidth",
              "displayName": "Min width unit",
              "category": "General",
              "displayPriority": 10,
              "description": "Minimum width unit for this column",
              "defaultValue": "px",
              "defaultValueInternal": "px"
            },
            {
              "name": "editable",
              "displayName": "Editable",
              "category": "General",
              "displayPriority": 10,
              "description": "Can this column be edited (text, number) or operated (button, checkbox)?",
              "defaultValue": false,
              "defaultValueInternal": false
            },
            {
              "name": "sortable",
              "displayName": "Sortable",
              "category": "General",
              "displayPriority": 10,
              "description": "Can this column be sorted by user interaction?",
              "defaultValue": true,
              "defaultValueInternal": false
            },
            {
              "name": "horizontalAlignment",
              "displayName": "Horizontal alignment",
              "category": "General",
              "displayPriority": 10,
              "description": "Horizontal alignment of this column",
              "defaultValue": "Left",
              "defaultValueInternal": "Left"
            },
            {
              "name": "verticalAlignment",
              "displayName": "Vertical alignment",
              "category": "General",
              "displayPriority": 10,
              "description": "Vertical alignment of this column",
              "defaultValue": "Center",
              "defaultValueInternal": "Center"
            },
            {
              "name": "headerHorizontalAlignment",
              "displayName": " Header Horizontal alignment",
              "category": "General",
              "displayPriority": 10,
              "description": "Horizontal alignment of the header of this column",
              "defaultValue": "Center",
              "defaultValueInternal": "Center"
            },
            {
              "name": "headerVerticalAlignment",
              "displayName": "Header Vertical alignment",
              "category": "General",
              "displayPriority": 10,
              "description": "Vertical alignment of the header of this column",
              "defaultValue": "Center",
              "defaultValueInternal": "Center"
            },
            {
              "name": "format",
              "displayName": "Format",
              "category": "General",
              "displayPriority": 10,
              "description": "A reference of function which is called with each entry",
              "allowedFunctions": {
                "returnType": "tchmi:general#/definitions/String",
                "requiredArguments": [
                  {
                    "type": "tchmi:general#/definitions/Any",
                    "description": "The value to format."
                  }
                ],
                "waitMode": "Synchronous"
              },
              "defaultValue": null,
              "defaultValueInternal": null
            },
            {
              "name": "dataDefinitions",
              "displayName": "Data definitions",
              "category": "General",
              "displayPriority": 10,
              "description": "Mapping from the srcData to a combobox or image selection. \nText to show on Buttons. \nRestrictions for number inputs.",
              "defaultValue": null,
              "defaultValueInternal": null
            },
            {
              "name": "ignoreEscapeSequences",
              "displayName": "Ignore Escape Sequences",
              "category": "General",
              "displayPriority": 10,
              "description": "When set to true a backslash in a text will be shown verbatim in the HMI",
              "defaultValue": false,
              "defaultValueInternal": false
            },
            {
              "name": "autoFocusOut",
              "displayName": "Auto Focus-Out",
              "category": "General",
              "displayPriority": 10,
              "description": "When set to true the control will automatically lose focus when the user presses the enter or escape key",
              "defaultValue": true,
              "defaultValueInternal": true
            },
            {
              "name": "autoSelectText",
              "displayName": "Auto Select Text",
              "category": "General",
              "displayPriority": 10,
              "description": "When set to true all text within the control will be selected when the control gains focus",
              "defaultValue": false,
              "defaultValueInternal": false
            }
          ],
          "properties": {
            "cellBackground": {
              "$ref": "tchmi:framework#/definitions/Color"
            },
            "textColor": {
              "anyOf": [
                {
                  "$ref": "tchmi:framework#/definitions/SolidColor"
                },
                {
                  "type": "null"
                }
              ]
            },
            "label": {
              "type": "string"
            },
            "control": {
              "type": "string",
              "enum": [
                "TextBox",
                "TextBlock",
                "CheckBox",
                "Image",
                "ComboBox",
                "NumericInput",
                "SpinboxInput",
                "PasswordInput",
                "Button",
                "ToggleButton",
                "ToggleSwitch",
                "RadioButton",
                "DateTimeInput",
                "TimespanInput"
              ]
            },
            "width": {
              "allOf": [
                {
                  "$ref": "#/definitions/PositiveNumber"
                },
                {
                  "$ref": "#/definitions/MeasurementValue"
                }
              ]
            },
            "widthUnit": {
              "$ref": "tchmi:framework#/definitions/MeasurementUnitOrFactor"
            },
            "resize": {
              "type": "boolean"
            },
            "minWidth": {
              "allOf": [
                {
                  "$ref": "#/definitions/PositiveNumber"
                },
                {
                  "$ref": "#/definitions/MeasurementValue"
                }
              ]
            },
            "minWidthUnit": {
              "$ref": "tchmi:framework#/definitions/MeasurementUnit"
            },
            "editable": {
              "type": "boolean"
            },
            "sortable": {
              "type": "boolean"
            },
            "horizontalAlignment": {
              "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
            },
            "verticalAlignment": {
              "$ref": "tchmi:framework#/definitions/VerticalAlignment"
            },
            "headerHorizontalAlignment": {
              "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
            },
            "headerVerticalAlignment": {
              "$ref": "tchmi:framework#/definitions/VerticalAlignment"
            },
            "format": {
              "$ref": "tchmi:framework#/definitions/Function"
            },
            "dataDefinitions": {
              "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiDatagrid.DataDefinitionList"
            },
            "ignoreEscapeSequences": {
              "type": "boolean"
            },
            "autoFocusOut": {
              "type": "boolean"
            },
            "autoSelectText": {
              "type": "boolean"
            }
          },
          "required": [
            "label",
            "control",
            "width",
            "widthUnit",
            "resize",
            "minWidth",
            "minWidthUnit",
            "editable",
            "horizontalAlignment",
            "verticalAlignment"
          ]
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Management.EventList": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseControl",
      "frameworkControlType": "EventList",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Management"
    },
    "TcHmi.BuildingAutomation.Controls.Management.EventList.Columns": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Columns",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "options": [
        {
          "label": "baIdentifier",
          "value": 0
        },
        {
          "label": "event",
          "value": 1
        },
        {
          "label": "timestamp",
          "value": 2
        },
        {
          "label": "device",
          "value": 3
        },
        {
          "label": "objectName",
          "value": 4
        },
        {
          "label": "instancePath",
          "value": 5
        },
        {
          "label": "description",
          "value": 6
        },
        {
          "label": "eventClass",
          "value": 7
        },
        {
          "label": "eventClassInstanceDescription",
          "value": 8
        },
        {
          "label": "eventClassDescription",
          "value": 9
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Management.EventList.ColumnSorting": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ColumnSorting",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Management.EventList.Columns"
      }
    },
    "TcHmi.BuildingAutomation.Controls.Management.EventList.Column": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "title": "Column",
      "description": "Define a column",
      "engineeringColumns": [
        "column"
      ],
      "propertiesMeta": [
        {
          "name": "type",
          "category": "Common",
          "displayName": "Column                                           ",
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "width",
          "category": "Common",
          "displayName": "Width",
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "widthUnit",
          "category": "Common",
          "displayName": "WidthUnit",
          "refTo": "width",
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "type": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Management.EventList.Columns"
        },
        "width": {
          "$ref": "tchmi:framework#/definitions/MeasurementValue"
        },
        "widthUnit": {
          "$ref": "tchmi:framework#/definitions/MeasurementUnitOrFactor"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Management.EventList.ColumnList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "title": "ColumnList",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Management.EventList.Column"
      }
    },
    "TcHmi.BuildingAutomation.Controls.Management.Schedule": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseControl",
      "frameworkControlType": "Schedule",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Management"
    },
    "TcHmi.BuildingAutomation.Conrols.Management.Schedule.StateColors": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "StateColors",
      "type": "array",
      "items": {
        "$schema": "http://json-schema.org/draft-04/schema",
        "title": "StateColor",
        "type": "object",
        "engineeringColumns": [
          "value",
          "color"
        ],
        "propertiesMeta": [
          {
            "name": "value",
            "category": "Common",
            "displayName": "Value",
            "displayPriority": 10,
            "description": "The value for the color.",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "color",
            "category": "Colors",
            "displayName": "Color",
            "displayPriority": 10,
            "description": "The color which will be the background color of a schedule entry when the value was reached.",
            "defaultValue": null,
            "defaultValueInternal": null
          }
        ],
        "properties": {
          "value": {
            "type": "number"
          },
          "color": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          }
        },
        "required": [
          "value",
          "color"
        ]
      }
    },
    "TcHmi.BuildingAutomation.Conrols.Management.Schedule.BaInterfaceSymbolNames": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaInterfaceSymbolNames",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "presentValue",
          "displayName": "PresentValue",
          "description": "The current value of the schedule. (DataType: boolean | number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "week",
          "displayName": "Week",
          "description": "The weekly schedule entries. (DataType: array)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "exceptions",
          "displayName": "Exceptions",
          "description": "The schedule exceptions. (DataType: array)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "calendar",
          "displayName": "Calendar",
          "description": "The calendar entries. (DataType: array)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "activeText",
          "displayName": "Active text",
          "description": "Text when the checkbox is active. (Default: ActiveText, DataType: string)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "inactiveText",
          "displayName": "Inactive text",
          "description": "Text when the checkbox is inactive. (Default: InactiveText, DataType: string)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "stateTexts",
          "displayName": "State texts",
          "description": "Array for the texts of the different values. (Default: StateTexts, DataType: string[])",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "unit",
          "displayName": "Unit",
          "description": "Unit for an analog value. (Default: Unit, DataType: string)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "presentValue": {
          "type": "string"
        },
        "week": {
          "type": "string"
        },
        "exceptions": {
          "type": "string"
        },
        "calendar": {
          "type": "string"
        },
        "activeText": {
          "type": "string"
        },
        "inactiveText": {
          "type": "string"
        },
        "stateTexts": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.UiIcon": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.Common.Button",
      "frameworkControlType": "UiIcon",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.UiIcon.DisplayPosition": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "DisplayPosition",
      "type": "string",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "options": [
        {
          "label": "left",
          "value": 0
        },
        {
          "label": "top",
          "value": 1
        },
        {
          "label": "right",
          "value": 2
        },
        {
          "label": "bottom",
          "value": 3
        },
        {
          "label": "topLeft",
          "value": 4
        },
        {
          "label": "topRight",
          "value": 5
        },
        {
          "label": "bottomRight",
          "value": 6
        },
        {
          "label": "bottomLeft",
          "value": 7
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Common.UiIcon.DisplaysData": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "items": {
        "type": "object",
        "title": "DisplayData",
        "description": "Defines a display for the object.",
        "propertiesMeta": [
          {
            "name": "baObject",
            "displayName": "BaObject",
            "category": "BA",
            "displayPriority": 1,
            "description": "BaObject for the display.",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "value",
            "category": "Common",
            "displayName": "Value",
            "description": "Value that is displayed in the display.",
            "displayPriority": 10,
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "position",
            "category": "Common",
            "displayName": "Position",
            "description": "Position of the display.",
            "displayPriority": 10,
            "defaultValue": 1,
            "defaultValueInternal": 1
          },
          {
            "name": "readOnly",
            "category": "Common",
            "displayName": "ReadOnly",
            "description": "Defines if the display is editable or read only.",
            "displayPriority": 10,
            "defaultValue": true,
            "defaultValueInternal": true
          },
          {
            "name": "unit",
            "category": "Common",
            "displayName": "Unit",
            "description": "The unit will be added to the displayed value if the type of Value is 'number'.",
            "displayPriority": 10,
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "digits",
            "category": "Common",
            "displayName": "Digits",
            "description": "Number of displayed digits.",
            "displayPriority": 10,
            "defaultValue": 1,
            "defaultValueInternal": 1
          },
          {
            "name": "textColor",
            "category": "Colors",
            "displayName": "TextColor",
            "description": "Color of the displayed text.",
            "displayPriority": 10,
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "fontWeight",
            "category": "Text",
            "displayName": "FontWeight",
            "description": "Font weight of the displayed text.",
            "displayPriority": 10,
            "defaultValue": "Bold",
            "defaultValueInternal": "Bold"
          }
        ],
        "properties": {
          "baObject": {
            "type": [
              "string",
              "null"
            ]
          },
          "value": {
            "type": "string"
          },
          "position": {
            "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Common.UiIcon.DisplayPosition"
          },
          "readOnly": {
            "type": "boolean"
          },
          "unit": {
            "type": "string"
          },
          "digits": {
            "type": "number"
          },
          "textColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "fontWeight": {
            "$ref": "tchmi:framework#/definitions/FontWeight"
          }
        },
        "required": [
          "value",
          "position"
        ]
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.UiIcon.EventsData": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "items": {
        "type": "object",
        "title": "EventData",
        "description": "Defines an event for the object.",
        "propertiesMeta": [
          {
            "name": "activate",
            "category": "Common",
            "displayName": "Activate",
            "description": "If true the event will be displayed on the UiIcon.",
            "defaultValue": false,
            "defaultValueInternal": false
          },
          {
            "name": "eventCondition",
            "category": "Common",
            "displayName": "Event condition",
            "description": "BA event condition. If this is used the icon of the event will be selected automatically.",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "eventIconState",
            "category": "Common",
            "displayName": "Event state",
            "description": "BA event icon state. If this is used the icon state of the event will be selected automatically.",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "eventCount",
            "category": "Common",
            "displayName": "Event count",
            "description": "If larger than 0 a small number will be displayed on the event. This indicates the number of active events with the same icon.",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "acknowledgeSymbol",
            "category": "Other",
            "displayName": "Acknowledge symbol",
            "description": "Boolean symbol that should be set to true when event icon was pressed.",
            "displayPriority": 200,
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "isAcknowledgeable",
            "category": "Other",
            "displayName": "Is Acknowledgeable",
            "description": "If true the event can be clicked, when false it is not enabled.",
            "displayPriority": 200,
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "icon",
            "category": "Other",
            "displayName": "Icon",
            "description": "Icon path for the displayed icon if 'EventCondition' and 'EventIconState' is not set.",
            "displayPriority": 200,
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "enablePulse",
            "category": "Other",
            "displayName": "Enable pulse",
            "description": "Activates or deactivates the pulse if 'EventCondition' and 'EventIconState' is not set.",
            "displayPriority": 200,
            "defaultValue": null,
            "defaultValueInternal": null
          }
        ],
        "properties": {
          "activate": {
            "type": "boolean"
          },
          "eventCondition": {
            "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.EventCondition"
          },
          "eventIconState": {
            "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.EventIconState"
          },
          "eventCount": {
            "type": "number"
          },
          "acknowledgeSymbol": {
            "$ref": "tchmi:framework#/definitions/Symbol"
          },
          "isAcknowledgeable": {
            "type": "boolean"
          },
          "icon": {
            "$ref": "tchmi:framework#/definitions/Path"
          },
          "enablePulse": {
            "type": "boolean"
          }
        },
        "required": [
          "activate"
        ]
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.UiIcon.Status": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        1,
        2,
        3,
        4,
        5,
        20,
        21
      ],
      "options": [
        {
          "label": "Alarm",
          "value": 1
        },
        {
          "label": "Disturb",
          "value": 2
        },
        {
          "label": "Maintenance",
          "value": 3
        },
        {
          "label": "Notification",
          "value": 4
        },
        {
          "label": "Other",
          "value": 5
        },
        {
          "label": "Active",
          "value": 20
        },
        {
          "label": "Inactive",
          "value": 21
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.System.UiIconFdbStp": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.Common.UiIcon",
      "frameworkControlType": "UiIconFdbStp",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.System"
    },
    "TcHmi.BuildingAutomation.Controls.Management.ProjectNavigationTextual": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseControl",
      "frameworkControlType": "ProjectNavigationTextual",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Management"
    },
    "TcHmi.BuildingAutomation.Controls.Management.ProjectNavigationTextual.BaUsedTitle": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "InstDescription",
        "Description",
        "SymbolPath",
        "ObjectName",
        "InstObjectName"
      ]
    },
    "TcHmi.BuildingAutomation.Controls.BuildingGeneral.BuildingInformation": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.Common.Button",
      "frameworkControlType": "BuildingInformation",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.BuildingGeneral"
    },
    "TcHmi.BuildingAutomation.Controls.BuildingGeneral.BuildingInformation.FacadeInfo": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "title": "FacadeInfo",
      "description": "Defines a facade",
      "engineeringColumns": [
        "name"
      ],
      "propertiesMeta": [
        {
          "name": "name",
          "category": "Common",
          "displayName": "Name                                           ",
          "description": "The name of the facade (e.g. west).",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "maintenance",
          "category": "Common",
          "displayName": "Maintenance",
          "description": "Flag if maintenance is active.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "stormProtection",
          "category": "Common",
          "displayName": "Storm Protection",
          "description": "Flag if storm protection is active.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "sunProtection",
          "category": "Common",
          "displayName": "Sun Protection",
          "description": "Flag if sun protection is active.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "maintenance": {
          "type": "boolean"
        },
        "stormProtection": {
          "type": "boolean"
        },
        "sunProtection": {
          "type": "boolean"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.BuildingGeneral.BuildingInformation.Facades": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "title": "Facades",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.BuildingGeneral.BuildingInformation.FacadeInfo"
      }
    },
    "TcHmi.BuildingAutomation.Controls.BuildingGeneral.Legend": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseControl",
      "frameworkControlType": "Legend",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.BuildingGeneral"
    },
    "TcHmi.BuildingAutomation.Controls.BuildingGeneral.Legend.LegendDialogOptions": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "modal",
          "displayName": "Modal",
          "description": "Defines if the legend dialog is opened modal or not."
        },
        {
          "name": "buttons",
          "displayName": "Buttons",
          "description": "Buttons for the legend dialog."
        },
        {
          "name": "width",
          "displayName": "Width",
          "description": "Width of the legend dialog."
        },
        {
          "name": "widthUnit",
          "displayName": "WidthUnit",
          "description": "Unit for width of the legend dialog.",
          "refTo": "width"
        },
        {
          "name": "height",
          "displayName": "Height",
          "description": "Height of the legend dialog."
        },
        {
          "name": "heightUnit",
          "displayName": "HeightUnit",
          "description": "Unit for height of the legend dialog.",
          "refTo": "height"
        },
        {
          "name": "entryWidth",
          "displayName": "EntryWidth",
          "description": "Width of an entry."
        },
        {
          "name": "entryWidthUnit",
          "displayName": "EntryWidthUnit",
          "description": "Unit for width of an entry.",
          "refTo": "entryWidth"
        },
        {
          "name": "tabPosition",
          "displayName": "TabPosition",
          "description": "Position of the tabs."
        },
        {
          "name": "iconSource",
          "displayName": "IconSource",
          "description": "Source of icons to be displayed."
        },
        {
          "name": "iconsCustom",
          "displayName": "IconsCustom",
          "description": "List of custom icons."
        }
      ],
      "properties": {
        "modal": {
          "type": "boolean"
        },
        "buttons": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.DialogWindowButtons"
        },
        "width": {
          "$ref": "tchmi:framework#/definitions/MeasurementValue"
        },
        "widthUnit": {
          "$ref": "tchmi:framework#/definitions/MeasurementUnit"
        },
        "height": {
          "$ref": "tchmi:framework#/definitions/MeasurementValue"
        },
        "heightUnit": {
          "$ref": "tchmi:framework#/definitions/MeasurementUnit"
        },
        "entryWidth": {
          "$ref": "tchmi:framework#/definitions/MeasurementValue"
        },
        "entryWidthUnit": {
          "$ref": "tchmi:framework#/definitions/MeasurementUnit"
        },
        "tabPosition": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Position"
        },
        "iconSource": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.BuildingGeneral.Legend.IconSource"
        },
        "iconsCustom": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.BuildingGeneral.Legend.IconAttributesList"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.BuildingGeneral.Legend.IconSource": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "options": [
        {
          "label": "All",
          "value": 0
        },
        {
          "label": "OnlyBa",
          "value": 1
        },
        {
          "label": "OnlyCustom",
          "value": 2
        },
        {
          "label": "OnlyCustomGlobal",
          "value": 3
        },
        {
          "label": "BaAndCustom",
          "value": 4
        },
        {
          "label": "BaAndCustomGlobal",
          "value": 5
        },
        {
          "label": "CustomAndCustomGlobal",
          "value": 6
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.BuildingGeneral.Legend.IconAttributes": {
      "title": "Icon",
      "description": "Icon",
      "type": "object",
      "engineeringColumns": [
        "iconCategory",
        "iconPath"
      ],
      "propertiesMeta": [
        {
          "name": "iconColor",
          "displayName": "IconColor",
          "category": "Colors",
          "displayPriority": 10,
          "description": "Color of the icon.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "iconCategory",
          "displayName": "Category",
          "category": "Common",
          "displayPriority": 10,
          "description": "Category of the icon.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "iconDescription",
          "displayName": "Description",
          "category": "Common",
          "displayPriority": 10,
          "description": "Description of the icon.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "iconPath",
          "displayName": "Icon",
          "category": "Icon",
          "displayPriority": 10,
          "description": "Path of the icon.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "iconRotation",
          "displayName": "Rotation",
          "category": "Icon",
          "displayPriority": 200,
          "description": "Rotation of the icon in degree (0°-360°).",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "iconRotationSpeed",
          "displayName": "RotationSpeed",
          "category": "Icon",
          "displayPriority": 200,
          "description": "Rotation speed of the icon. Icon rotation will be ignored if set.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "iconRotationDirection",
          "displayName": "RotationDirection",
          "category": "Icon",
          "displayPriority": 200,
          "description": "Rotation direction of the icon. Icon rotation will be ignored if set.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "iconOverlays",
          "displayName": "Overlays",
          "category": "Icon",
          "displayPriority": 200,
          "description": "The overlays for the icon.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "iconColor": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "iconCategory": {
          "type": [
            "string",
            "null"
          ]
        },
        "iconDescription": {
          "type": [
            "string",
            "null"
          ]
        },
        "iconPath": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "iconRotation": {
          "type": [
            "number",
            "null"
          ]
        },
        "iconRotationSpeed": {
          "type": [
            "number",
            "null"
          ]
        },
        "iconRotationDirection": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Direction"
        },
        "iconOverlays": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Common.Icon.OverlayList"
        }
      },
      "required": [
        "iconCategory",
        "iconPath"
      ]
    },
    "TcHmi.BuildingAutomation.Controls.BuildingGeneral.Legend.IconAttributesList": {
      "title": "Icon List",
      "description": "Icon List",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.BuildingGeneral.Legend.IconAttributes"
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.BulletPointList": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.TextControl",
      "frameworkControlType": "BulletPointList",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.BulletPointList.Entries": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "title": "Entries",
      "items": {
        "$ref": "tchmi:general#/definitions/String"
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.BulletPointList.ListStyleType": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "options": [
        {
          "label": "none",
          "value": 0
        },
        {
          "label": "disc",
          "value": 1
        },
        {
          "label": "circle",
          "value": 2
        },
        {
          "label": "square",
          "value": 3
        },
        {
          "label": "decimal",
          "value": 4
        },
        {
          "label": "decimal-leading-zero",
          "value": 5
        },
        {
          "label": "lower-roman",
          "value": 6
        },
        {
          "label": "upper-roman",
          "value": 7
        },
        {
          "label": "lower-latin",
          "value": 8
        },
        {
          "label": "upper-latin",
          "value": 9
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Common.BulletPointList.ListStyleTypes": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "oneOf": [
        {
          "title": "ListStyleType",
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Common.BulletPointList.ListStyleType"
        },
        {
          "title": "String",
          "type": "string"
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Damper": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.UiIconFdbStp",
      "frameworkControlType": "Damper",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Plants"
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Damper.DisplayMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Type",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        999
      ],
      "options": [
        {
          "label": "damper",
          "value": 0
        },
        {
          "label": "fireDamper",
          "value": 1
        },
        {
          "label": "shutOffValve",
          "value": 2
        },
        {
          "label": "custom",
          "value": 999
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Damper.BaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "feedback",
          "displayName": "Feedback",
          "description": "The feedback of the damper. (Default: Fdb, DataType: Analog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "setpoint",
          "displayName": "Setpoint",
          "description": "The setpoint of the damper. (Default: Mdlt, DataType: Analog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "command",
          "displayName": "Command",
          "description": "The command of the damper. (Default: Cmd, DataType: Binary)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "swiOpn",
          "displayName": "Switch open",
          "description": "The switch open of the damper. (Default: SwiOpn, DataType: Binary)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "swiCls",
          "displayName": "Switch close",
          "description": "The switch close of the damper. (Default: SwiCls, DataType: Binary)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "feedback": {
          "type": "string"
        },
        "setpoint": {
          "type": "string"
        },
        "command": {
          "type": "string"
        },
        "swiOpn": {
          "type": "string"
        },
        "swiCls": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Damper.SubBaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "SubBaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "identifier",
          "displayName": "Identifier",
          "description": "Identifier of the damper.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "subTemplate",
          "displayName": "Damper",
          "description": "The template description of the damper.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "subTemplate": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.Damper.BaTemplateDescription"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Motor": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.UiIconFdbStp",
      "frameworkControlType": "Motor",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Plants"
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Motor.DisplayMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Type",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        999
      ],
      "options": [
        {
          "label": "fan",
          "value": 0
        },
        {
          "label": "motor",
          "value": 1
        },
        {
          "label": "pump",
          "value": 2
        },
        {
          "label": "custom",
          "value": 999
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Motor.BaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "feedback",
          "displayName": "Feedback",
          "description": "The feedback of the motor. (Default: Fdb, DataType: Analog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "setpoint",
          "displayName": "Setpoint",
          "description": "The setpoint of the motor. (Default: Mdlt, DataType: Analog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "command",
          "displayName": "Command",
          "description": "The command of the motor. (Default: Cmd, DataType: Binary)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "feedback": {
          "type": "string"
        },
        "setpoint": {
          "type": "string"
        },
        "command": {
          "type": "string"
        }
      },
      "required": [
        "command"
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Motor.SubBaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "SubBaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "identifier",
          "displayName": "Identifier",
          "description": "Identifier of the motor.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "subTemplate",
          "displayName": "Motor",
          "description": "The template description of the motor.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "subTemplate": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.Motor.BaTemplateDescription"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Pump": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.UiIconFdbStp",
      "frameworkControlType": "Pump",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Plants"
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Pump.DisplayMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Type",
      "type": "integer",
      "enum": [
        0,
        999
      ],
      "options": [
        {
          "label": "pu1st",
          "value": 0
        },
        {
          "label": "custom",
          "value": 999
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Pump.BaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "feedback",
          "displayName": "Feedback",
          "description": "The feedback of the pump. (Default: Fdb, DataType: Analog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "setpoint",
          "displayName": "Setpoint",
          "description": "The setpoint of the pump. (Default: Mdlt, DataType: Analog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "command",
          "displayName": "Command",
          "description": "The command of the pump. (Default: Cmd, DataType: Binary)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "feedback": {
          "type": "string"
        },
        "setpoint": {
          "type": "string"
        },
        "command": {
          "type": "string"
        }
      },
      "required": [
        "command"
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Pump.SubBaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "SubBaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "identifier",
          "displayName": "Identifier",
          "description": "Identifier of the pump.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "subTemplate",
          "displayName": "Pump",
          "description": "The template description of the pump.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "subTemplate": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.Pump.BaTemplateDescription"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Valve": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.UiIconFdbStp",
      "frameworkControlType": "Valve",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Plants"
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Valve.DisplayMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Type",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        999
      ],
      "options": [
        {
          "label": "twoDirection_0",
          "value": 0
        },
        {
          "label": "twoDirection_1",
          "value": 1
        },
        {
          "label": "twoDirection_2",
          "value": 2
        },
        {
          "label": "twoDirection_3",
          "value": 3
        },
        {
          "label": "threeDirection_0",
          "value": 4
        },
        {
          "label": "threeDirection_1",
          "value": 5
        },
        {
          "label": "threeDirection_2",
          "value": 6
        },
        {
          "label": "threeDirection_3",
          "value": 7
        },
        {
          "label": "threeDirection_4",
          "value": 8
        },
        {
          "label": "custom",
          "value": 999
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Valve.BaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "feedback",
          "displayName": "Feedback",
          "description": "The feedback of the valve. (Default: Fdb / Anlg3Pnt::Pos, DataType: Analog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "setpoint",
          "displayName": "Setpoint",
          "description": "The setpoint of the valve. (Default: Mdlt, DataType: Analog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "command",
          "displayName": "Command",
          "description": "The command of the valve. (Default: Cmd, DataType: Binary)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "feedback": {
          "type": "string"
        },
        "setpoint": {
          "type": "string"
        },
        "command": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Valve.SubBaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "SubBaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "identifier",
          "displayName": "Identifier",
          "description": "Identifier of the sensor.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "subTemplate",
          "displayName": "Valve",
          "description": "The template description of the valve.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "subTemplate": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.Valve.BaTemplateDescription"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Plants.VAV": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.UiIconFdbStp",
      "frameworkControlType": "VAV",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Plants"
    },
    "TcHmi.BuildingAutomation.Controls.Plants.VAV.DisplayMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Type",
      "type": "integer",
      "enum": [
        0,
        999
      ],
      "options": [
        {
          "label": "vav",
          "value": 0
        },
        {
          "label": "custom",
          "value": 999
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Plants.VAV.BaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "setpoint",
          "displayName": "Setpoint",
          "description": "The setpoint of the VAV. (Default: Mdlt, DataType: Analog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "feedback",
          "displayName": "Feedback",
          "description": "The feedback of the VAV. (Default: Fdb, DataType: Analog)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "setpoint": {
          "type": "string"
        },
        "feedback": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Plants.VAV.SubBaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "SubBaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "identifier",
          "displayName": "Identifier",
          "description": "Identifier of the VAV.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "subTemplate",
          "displayName": "VAV",
          "description": "The template description of the VAV.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "subTemplate": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.VAV.BaTemplateDescription"
        }
      }
    },
    "TcHmi.Controls.TcHmiBaControls.System.Sensor": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.UiIconFdbStp",
      "frameworkControlType": "Sensor",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.System"
    },
    "TcHmi.BuildingAutomation.Controls.System.Sensor.BaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "feedback",
          "displayName": "Feedback",
          "description": "The feedback of the sensor.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "feedback": {
          "type": "string"
        }
      },
      "required": [
        "feedback"
      ]
    },
    "TcHmi.BuildingAutomation.Controls.System.Sensor.SubBaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "SubBaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "identifier",
          "displayName": "Identifier",
          "description": "Identifier of the sensor.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "subTemplate",
          "displayName": "Sensor Analog",
          "description": "The template description of the sensor.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "subTemplate": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.System.Sensor.BaTemplateDescription"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.System.Sensor.DisplayMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Type",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        30,
        999,
        1000
      ],
      "options": [
        {
          "label": "temperature",
          "value": 0
        },
        {
          "label": "pressure",
          "value": 1
        },
        {
          "label": "humidity",
          "value": 2
        },
        {
          "label": "humidityAbs",
          "value": 3
        },
        {
          "label": "enthalpy",
          "value": 4
        },
        {
          "label": "globalRadiation",
          "value": 5
        },
        {
          "label": "co2",
          "value": 6
        },
        {
          "label": "voc",
          "value": 7
        },
        {
          "label": "volumeFlow",
          "value": 8
        },
        {
          "label": "heatAmount",
          "value": 9
        },
        {
          "label": "current",
          "value": 10
        },
        {
          "label": "voltage",
          "value": 11
        },
        {
          "label": "brightness",
          "value": 30
        },
        {
          "label": "custom",
          "value": 999
        },
        {
          "label": "customLetter",
          "value": 1000
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.System.Sensor.PinLayout": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Type",
      "type": "integer",
      "enum": [
        -1,
        0,
        1
      ],
      "options": [
        {
          "label": "none",
          "value": -1
        },
        {
          "label": "single",
          "value": 0
        },
        {
          "label": "parallel",
          "value": 1
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Plants.SensorAnalog": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.Sensor",
      "frameworkControlType": "SensorAnalog",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Plants"
    },
    "TcHmi.BuildingAutomation.Controls.Plants.SensorAnalog.BaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "feedback",
          "displayName": "Feedback",
          "description": "The feedback of the sensor.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "feedback": {
          "type": "string"
        }
      },
      "required": [
        "feedback"
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Plants.SensorAnalog.SubBaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "SubBaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "identifier",
          "displayName": "Identifier",
          "description": "Identifier of the sensor.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "subTemplate",
          "displayName": "Sensor Analog",
          "description": "The template description of the sensor.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "subTemplate": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.SensorAnalog.BaTemplateDescription"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Plants.SensorBinary": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.Sensor",
      "frameworkControlType": "SensorBinary",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Plants"
    },
    "TcHmi.BuildingAutomation.Controls.Plants.SensorBinary.BaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "feedback",
          "displayName": "Feedback",
          "description": "The feedback of the sensor.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "feedback": {
          "type": "string"
        }
      },
      "required": [
        "feedback"
      ]
    },
    "TcHmi.BuildingAutomation.Controls.Plants.SensorBinary.SubBaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "SubBaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "identifier",
          "displayName": "Identifier",
          "description": "Identifier of the sensor.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "subTemplate",
          "displayName": "Sensor Binary",
          "description": "The template description of the sensor.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "subTemplate": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.SensorBinary.BaTemplateDescription"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Cooler": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseTemplate",
      "frameworkControlType": "Cooler",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Plants"
    },
    "TcHmi.BuildingAutomation.Controls.Plants.Cooler.BaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "tempFlow",
          "displayName": "Flow temperature sensor",
          "description": "The flow temperature sensor of the cooler. (Default: TFl, DataType: SensorAnalog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "tempReturn",
          "displayName": "Return temperature sensor",
          "description": "The return temperature sensor of the cooler. (Default: TRt, DataType: SensorAnalog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "valve",
          "displayName": "Valve",
          "description": "The valve of the cooler. (Default: Vlv, DataType: Valve)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "tempFlow": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.SensorAnalog.SubBaTemplateDescription"
        },
        "tempReturn": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.SensorAnalog.SubBaTemplateDescription"
        },
        "valve": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.Valve.SubBaTemplateDescription"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Plants.ErcPlate": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseTemplate",
      "frameworkControlType": "ErcPlate",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Plants"
    },
    "TcHmi.BuildingAutomation.Controls.Plants.ErcPlate.BaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "damper",
          "displayName": "Damper",
          "description": "The damper of the energy recovery. (Default: Dmp, DataType: Damper)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "damperBy",
          "displayName": "Damper Bypass",
          "description": "The damper bypass of the energy recovery. (Default: ByDmp, DataType: Damper)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "diffPrssSwi",
          "displayName": "Differential pressure",
          "description": "The differential pressure of the energy recovery. (Default: DiffPrssSwi, DataType: SensorBinary)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "damper": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.Damper.SubBaTemplateDescription"
        },
        "damperBy": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.Damper.SubBaTemplateDescription"
        },
        "diffPrssSwi": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Plants.ErcRotation": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseTemplate",
      "frameworkControlType": "ErcRotation",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Plants"
    },
    "TcHmi.BuildingAutomation.Controls.Plants.ErcRotation.BaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "diffPrssSwi",
          "displayName": "Differential pressure",
          "description": "The differential pressure of the energy recovery. (Default: DiffPrssSwi, DataType: SensorBinary)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "feedback",
          "displayName": "Feedback",
          "description": "The feedback of the energy recovery. (Default: Motor::Fdb, DataType: Analog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "setpoint",
          "displayName": "Setpoint",
          "description": "The setpoint of the energy recovery. (Default: Motor::Mdlt, DataType: Analog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "command",
          "displayName": "Command",
          "description": "The command of the energy recovery. (Default: Motor::Cmd, DataType: Binary)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "diffPrssSwi": {
          "type": "string"
        },
        "feedback": {
          "type": "string"
        },
        "setpoint": {
          "type": "string"
        },
        "command": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Plants.HeatingCircuit": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.Plants.Cooler",
      "frameworkControlType": "HeatingCircuit",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Plants"
    },
    "TcHmi.BuildingAutomation.Controls.Plants.HeatingCircuit.BaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "tempFlow",
          "displayName": "Flow temperature sensor",
          "description": "The flow temperature sensor of the heating circuit. (Default: TFl, DataType: SensorAnalog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "tempReturn",
          "displayName": "Return temperature sensor",
          "description": "The return temperature sensor of the heating circuit. (Default: TRt, DataType: SensorAnalog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "valve",
          "displayName": "Valve",
          "description": "The valve of the heating circuit. (Default: Vlv, DataType: Valve)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "pump",
          "displayName": "Pump",
          "description": "The pump of the heating circuit. (Default: Pu, DataType: Pump)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "tempFlowSp",
          "displayName": "Flow temperature sensor setpoint",
          "description": "The flow temperature sensor setpoint of the heating circuit. (Default: Sp::SpFlWT, DataType: Analog)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "tempFlow": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.SensorAnalog.SubBaTemplateDescription"
        },
        "tempReturn": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.SensorAnalog.SubBaTemplateDescription"
        },
        "valve": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.Valve.SubBaTemplateDescription"
        },
        "pump": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.Pump.SubBaTemplateDescription"
        },
        "tempFlowSp": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.Plants.PreHeater": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.Plants.HeatingCircuit",
      "frameworkControlType": "PreHeater",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Plants"
    },
    "TcHmi.BuildingAutomation.Controls.Plants.PreHeater.BaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "tempFlow",
          "displayName": "Flow temperature sensor",
          "description": "The flow temperature sensor of the pre-heater. (Default: TFl, DataType: SensorAnalog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "tempReturn",
          "displayName": "Return temperature sensor",
          "description": "The return temperature sensor of the pre-heater. (Default: TRt, DataType: SensorAnalog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "valve",
          "displayName": "Valve",
          "description": "The valve of the pre-heater. (Default: Vlv, DataType: Valve)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "pump",
          "displayName": "Pump",
          "description": "The pump of the pre-heater. (Default: Pu, DataType: Pump)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "tempFlowSp",
          "displayName": "Flow temperature sensor setpoint",
          "description": "The flow temperature sensor setpoint of the heating circuit. (Default: Sp::SpFlWT, DataType: Analog)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "frostThermostat",
          "displayName": "Frost thermostat",
          "description": "The frost thermostat of the pre-heater. (Default: FrostThermostat, DataType: SensorBinary)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "tFrost",
          "displayName": "Temperature frost",
          "description": "The temperature frost of the pre-heater. (Default: TFrost, DataType: SensorAnalog)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "tempFlow": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.SensorAnalog.SubBaTemplateDescription"
        },
        "tempReturn": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.SensorAnalog.SubBaTemplateDescription"
        },
        "valve": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.Valve.SubBaTemplateDescription"
        },
        "pump": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.Pump.SubBaTemplateDescription"
        },
        "tempFlowSp": {
          "type": "string"
        },
        "frostThermostat": {
          "type": "string"
        },
        "tFrost": {
          "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Plants.SensorAnalog.SubBaTemplateDescription"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.BuildingGeneral.WeatherStation": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseTemplate",
      "frameworkControlType": "WeatherStation",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.BuildingGeneral"
    },
    "TcHmi.BuildingAutomation.Controls.BuildingGeneral.WeatherStation.BaTemplateDescription": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaTemplateDescription",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "Dstb",
          "displayName": "Dstb",
          "description": "The disturbance of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Rain",
          "displayName": "Rain",
          "description": "The rain of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "WthT",
          "displayName": "WthT",
          "description": "The outisde temperature of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "DewPtT",
          "displayName": "DewPtT",
          "description": "The dew point of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "PrssAbs",
          "displayName": "PrssAbs",
          "description": "The absolute pressure of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "PrssRel",
          "displayName": "PrssRel",
          "description": "The relative pressure of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "HumAbs",
          "displayName": "HumAbs",
          "description": "The absolute humidty of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "HumRel",
          "displayName": "HumRel",
          "description": "The relative humidty of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Brightness_N",
          "displayName": "Brightness_N",
          "description": "The brightness in north of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Brightness_E",
          "displayName": "Brightness_E",
          "description": "The brightness in east of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Brightness_S",
          "displayName": "Brightness_S",
          "description": "The brightness in south of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Brightness_W",
          "displayName": "Brightness_W",
          "description": "The brightness in west of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Dawn",
          "displayName": "Dawn",
          "description": "The dawn of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "GlobRadn",
          "displayName": "GlobRadn",
          "description": "The global radiation of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "WndDir",
          "displayName": "WndDir",
          "description": "The wind direction of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "WndSpd",
          "displayName": "WndSpd",
          "description": "The wind speed of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Latd",
          "displayName": "Latd",
          "description": "The latitude of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Lngt",
          "displayName": "Lngt",
          "description": "The longitude of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "SunAzm",
          "displayName": "SunAzm",
          "description": "The sun azemut of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "SunElv",
          "displayName": "SunElv",
          "description": "The sun elevation of the weather station.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "Dstb": {
          "type": "string"
        },
        "Rain": {
          "type": "string"
        },
        "WthT": {
          "type": "string"
        },
        "DewPtT": {
          "type": "string"
        },
        "PrssAbs": {
          "type": "string"
        },
        "PrssRel": {
          "type": "string"
        },
        "HumAbs": {
          "type": "string"
        },
        "HumRel": {
          "type": "string"
        },
        "Brightness_N": {
          "type": "string"
        },
        "Brightness_E": {
          "type": "string"
        },
        "Brightness_S": {
          "type": "string"
        },
        "Brightness_W": {
          "type": "string"
        },
        "Dawn": {
          "type": "string"
        },
        "GlobRadn": {
          "type": "string"
        },
        "WndDir": {
          "type": "string"
        },
        "WndSpd": {
          "type": "string"
        },
        "Latd": {
          "type": "string"
        },
        "Lngt": {
          "type": "string"
        },
        "SunAzm": {
          "type": "string"
        },
        "SunElv": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.HeatingCooling": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseRoomControl",
      "frameworkControlType": "HeatingCooling",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.RoomAutomation"
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.HeatingCooling.EnergyLevel": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "integer",
      "enum": [
        1,
        2,
        3,
        4
      ],
      "options": [
        {
          "label": "protection",
          "value": 1
        },
        {
          "label": "economy",
          "value": 2
        },
        {
          "label": "preComfort",
          "value": 3
        },
        {
          "label": "comfort",
          "value": 4
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.HeatingCooling.BaInterfaceSymbolNames": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaInterfaceSymbolNames",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "name",
          "displayName": "Name",
          "description": "Name of the HeatingCooling. (Default: sName, DataType: string)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "error",
          "displayName": "Error",
          "description": "Defines if an error has occured or not. The error will be displayed. (Default: bErr_Out, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "roomTemp",
          "displayName": "Room temperature",
          "description": "The current room temperature. (Default: fRmT_Out, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "roomTempAdjust",
          "displayName": "Room temperature adjustment",
          "description": "The adjustment of the temperature setpoint. (Default: fRmTAdj_In, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "roomTempAdjustRange",
          "displayName": "Room temperature adjustment range",
          "description": "The range of the adjustment of the temperature setpoint. (Default: fRmTAdjLimit_Out, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "heatingSetpoint",
          "displayName": "Heating setpoint",
          "description": "The setpoint for heating. (Default: fSPHtg_Out, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "heatingActive",
          "displayName": "Heating active",
          "description": "Defines if the heating is active or not. (Default: fCtrlValHtg_Out, DataType: boolean / number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "coolingSetpoint",
          "displayName": "Cooling setpoint",
          "description": "The setpoint for cooling. (Default: fSPCol_Out, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "coolingActive",
          "displayName": "Cooling active",
          "description": "Defines if the cooling is active or not. (Default: fCtrlValCol_Out, DataType: boolean / number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "energyLevel",
          "displayName": "Energy level",
          "description": "The energy level of the HeatingCooling. (Default: eActualEnergyLevel_Out, DataType: integer)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "roomTemp": {
          "type": "string"
        },
        "roomTempAdjust": {
          "type": "string"
        },
        "roomTempAdjustRange": {
          "type": "string"
        },
        "heatingSetpoint": {
          "type": "string"
        },
        "heatingActive": {
          "type": "string"
        },
        "coolingSetpoint": {
          "type": "string"
        },
        "coolingActive": {
          "type": "string"
        },
        "energyLevel": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Light": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseRoomControl",
      "frameworkControlType": "Light",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.RoomAutomation"
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Light.DisplayMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1,
        2
      ],
      "options": [
        {
          "label": "lightBulb",
          "value": 0
        },
        {
          "label": "lightBulbFilled",
          "value": 1
        },
        {
          "label": "filled",
          "value": 2
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Light.Priority": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "integer",
      "enum": [
        1,
        2,
        3,
        4,
        8,
        9,
        12,
        13,
        14,
        18,
        19,
        20
      ],
      "options": [
        {
          "label": "fire",
          "value": 1
        },
        {
          "label": "communicationError",
          "value": 2
        },
        {
          "label": "burglary",
          "value": 3
        },
        {
          "label": "maintenance",
          "value": 4
        },
        {
          "label": "cleaning",
          "value": 8
        },
        {
          "label": "nightWatch",
          "value": 9
        },
        {
          "label": "simple",
          "value": 12
        },
        {
          "label": "manual",
          "value": 13
        },
        {
          "label": "automaticLight",
          "value": 14
        },
        {
          "label": "scene1",
          "value": 18
        },
        {
          "label": "scene2",
          "value": 19
        },
        {
          "label": "scene3",
          "value": 20
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Light.BaInterfaceSymbolNames": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaInterfaceSymbolNames",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "name",
          "displayName": "Name",
          "description": "Name of the light. (Default: sName, DataType: string)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "error",
          "displayName": "Error",
          "description": "Defines if an error has occured or not. The error will be displayed. (Default: bErr_Out, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "priority",
          "displayName": "Priority",
          "description": "Priority of the light. (Default: eActualPrio_Out, DataType: integer)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "fdbLightOn",
          "displayName": "Feedback light on",
          "description": "Feedback if the light is on or off. (Default: bLightOn_Out, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "resetManual",
          "displayName": "Reset Manual",
          "description": "Symbol to reset the light into automatic mode. (Default: bSetCtrlMod_In, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "cmdBrightness",
          "displayName": "Command Brightness",
          "description": "The command for the brightness. (Default: fSetLightValueMan_In, DataType: number | boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "setCmdBrightness",
          "displayName": "Set Command Brightness",
          "description": "The command to set the brightness value. (Default: bSetLightValueMan_In, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "fdbBrightness",
          "displayName": "Feedback Brightness",
          "description": "The feedback for the brightness. (Default: fLightValue_Out, DataType: number | boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "cmdTemperature",
          "displayName": "Command Temperature",
          "description": "The command for the light temperature. (Default: fSetLightTemperatureMan_In, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "setCmdTemperature",
          "displayName": "Set Command Temperature",
          "description": "The command to set the temperature value. (Default: bSetLightTemperatureMan_In, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "fdbTemperature",
          "displayName": "Feedback Temperature",
          "description": "The feedback for the light temperature. (Default: fLightTemperature_Out, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "resetManual": {
          "type": "string"
        },
        "fdbLightOn": {
          "type": "string"
        },
        "cmdBrightness": {
          "type": "string"
        },
        "setCmdBrightness": {
          "type": "string"
        },
        "fdbBrightness": {
          "type": "string"
        },
        "cmdTemperature": {
          "type": "string"
        },
        "setCmdTemperature": {
          "type": "string"
        },
        "fdbTemperature": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Sunblind": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseRoomControl",
      "frameworkControlType": "Sunblind",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.RoomAutomation"
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Sunblind.Controls": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "buttons",
        "sliderHorizontal"
      ]
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Sunblind.Priority": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "integer",
      "enum": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20
      ],
      "options": [
        {
          "label": "fire",
          "value": 1
        },
        {
          "label": "storm",
          "value": 2
        },
        {
          "label": "ice",
          "value": 3
        },
        {
          "label": "communicationError",
          "value": 4
        },
        {
          "label": "burglary",
          "value": 5
        },
        {
          "label": "maintenance",
          "value": 6
        },
        {
          "label": "referencing",
          "value": 7
        },
        {
          "label": "manualActuator",
          "value": 8
        },
        {
          "label": "manualGroup",
          "value": 9
        },
        {
          "label": "allDown",
          "value": 10
        },
        {
          "label": "allUp",
          "value": 11
        },
        {
          "label": "scene1",
          "value": 12
        },
        {
          "label": "facadeThermoAutomatic",
          "value": 13
        },
        {
          "label": "facadeTwilightAutomatic",
          "value": 14
        },
        {
          "label": "parkPosition",
          "value": 15
        },
        {
          "label": "scene2",
          "value": 16
        },
        {
          "label": "scene3",
          "value": 17
        },
        {
          "label": "sunProtection",
          "value": 18
        },
        {
          "label": "groupThermoAutomatic",
          "value": 19
        },
        {
          "label": "groupTwilightAutomatic",
          "value": 20
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Sunblind.BaInterfaceSymbolNames": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaInterfaceSymbolNames",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "name",
          "displayName": "Name",
          "description": "Name of the sunblind. (Default: sName, DataType: string)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "error",
          "displayName": "Error",
          "description": "Defines if an error has occured or not. The error will be displayed. (Default: bErr_Out, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "priority",
          "displayName": "Priority",
          "description": "Priority of the sunblind. (Default: eActualPrio_Out, DataType: integer)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "cmdUp",
          "displayName": "Command Up",
          "description": "The command to drive the sunblind up. (Default: bUp_In, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "cmdDown",
          "displayName": "Command down",
          "description": "The command to drive the sunblind down. (Default: bDown_In, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "fdbOpen",
          "displayName": "Feedback open",
          "description": "The feedback if the sunblind is opened. (Default: bOpened_Out, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "fdbClose",
          "displayName": "Feedback close",
          "description": "The feedback if the sunblind is closed. (Default: bClosed_Out, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "initialize",
          "displayName": "Initialize",
          "description": "When set to true the sunblind will be initialized. (Default: bInitialize_In, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "resetManual",
          "displayName": "Reset manual",
          "description": "Symbol to reset the sunblind into automatic mode. (Default: bResetManual_In, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "positionCmd",
          "displayName": "Position command",
          "description": "The command to set the position of the sunblind. (Default: fSunblindPosition_In, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "positionFdb",
          "displayName": "Position feedback",
          "description": "The position feedback of the sunblind. (Default: fSunblindPosition_Out, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "angleCmd",
          "displayName": "Angle command",
          "description": "The command to set the angle of the sunblind. (Default: fSunblindAngle_In, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "angleFdb",
          "displayName": "Angle feedback",
          "description": "The angle feedback of the sunblind. (Default: fSunblindAngle_Out, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "cmdUp": {
          "type": "string"
        },
        "cmdDown": {
          "type": "string"
        },
        "initialize": {
          "type": "string"
        },
        "resetManual": {
          "type": "string"
        },
        "positionCmd": {
          "type": "string"
        },
        "positionFdb": {
          "type": "string"
        },
        "angleFdb": {
          "type": "string"
        },
        "angleCmd": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Window": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseRoomControl",
      "frameworkControlType": "Window",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.RoomAutomation"
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Window.DisplayMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1
      ],
      "options": [
        {
          "label": "standard",
          "value": 0
        },
        {
          "label": "roofDome",
          "value": 1
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Window.BaInterfaceSymbolNames": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaInterfaceSymbolNames",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "name",
          "displayName": "Name",
          "description": "Name of the window. (Default: sName, DataType: string)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "error",
          "displayName": "Error",
          "description": "Defines if an error has occured or not. The error will be displayed. (Default: bErr_Out, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "priority",
          "displayName": "Priority",
          "description": "Priority of the window. (Default: eActualPrio_Out, DataType: integer)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "commandOpen",
          "displayName": "Command open",
          "description": "Command to open the window. (Default: cmdOpen, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "commandClose",
          "displayName": "Command close",
          "description": "Command to close the window. (Default: cmdClose, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "feedback",
          "displayName": "Feedback",
          "description": "Feedback about the window position. (Default: feedback, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "resetManual",
          "displayName": "Reset Manual",
          "description": "Symbol to reset the window into automatic mode. (Default: bResetManual_In, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "commandOpen": {
          "type": "string"
        },
        "commandClose": {
          "type": "string"
        },
        "feedback": {
          "type": "string"
        },
        "resetManual": {
          "type": "string"
        }
      }
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.RoomControl": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseControl",
      "frameworkControlType": "RoomControl",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.RoomAutomation"
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.RoomControl.ControlList": {
      "title": "ControlList",
      "type": "array",
      "items": {
        "oneOf": [
          {
            "title": "Light",
            "type": "object",
            "additionalProperties": false,
            "engineeringColumns": [
              "Name"
            ],
            "propertiesMeta": [
              {
                "name": "baObject",
                "displayName": "BaObject",
                "category": "BA",
                "displayPriority": 1,
                "description": "BaView of the light.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "baInterface",
                "displayName": "BaInterface",
                "category": "BA",
                "displayPriority": 1,
                "description": "BaInterface of the light.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "name",
                "displayName": "Name",
                "category": "Common",
                "displayPriority": 10,
                "description": "Name of the light.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "error",
                "displayName": "Error",
                "category": "Common",
                "displayPriority": 10,
                "description": "Defines if an error has occured or not. The error will be displayed.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "priority",
                "displayName": "Priority",
                "category": "Common",
                "displayPriority": 10,
                "description": "Priority of the light.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "brightness",
                "displayName": "Brightness",
                "category": "Common",
                "displayPriority": 10,
                "description": "Brightness of the light. When used as data binding the brightness will be written when changed by the user.",
                "defaultValue": 0,
                "defaultValueInternal": 0
              },
              {
                "name": "brightnessFeedback",
                "displayName": "BrightnessFeedback",
                "category": "Common",
                "displayPriority": 10,
                "description": "Feedback for the brightness of the light.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "resetManualSym",
                "displayName": "Reset hand mode",
                "category": "Common",
                "displayPriority": 10,
                "description": "Symbol which is set to true to reset the manual priority.",
                "defaultValue": null,
                "defaultValueInternal": null
              }
            ],
            "properties": {
              "baObject": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "baInterface": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "error": {
                "type": [
                  "boolean",
                  "string",
                  "null"
                ]
              },
              "priority": {
                "oneOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.RoomAutomation.Light.Priority"
                  },
                  {
                    "type": [
                      "number",
                      "string",
                      "null"
                    ]
                  }
                ]
              },
              "brightness": {
                "type": [
                  "number",
                  "boolean",
                  "string",
                  "null"
                ]
              },
              "brightnessFeedback": {
                "type": [
                  "number",
                  "boolean",
                  "string",
                  "null"
                ]
              },
              "resetManualSym": {
                "oneOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/Symbol"
                  },
                  {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                ]
              }
            }
          },
          {
            "title": "Sunblind",
            "type": "object",
            "additionalProperties": false,
            "engineeringColumns": [
              "Name"
            ],
            "propertiesMeta": [
              {
                "name": "baObject",
                "displayName": "BaObject",
                "category": "BA",
                "displayPriority": 1,
                "description": "BaView of the sunblind.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "baInterface",
                "displayName": "BaInterface",
                "category": "BA",
                "displayPriority": 1,
                "description": "BaInterface of the sunblind.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "name",
                "displayName": "Name",
                "category": "Common",
                "displayPriority": 10,
                "description": "Name of the sunblind.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "error",
                "displayName": "Error",
                "category": "Common",
                "displayPriority": 10,
                "description": "Defines if an error has occured or not. The error will be displayed.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "priority",
                "displayName": "Priority",
                "category": "Common",
                "displayPriority": 10,
                "description": "Priority of the sunblind.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "openFeedback",
                "displayName": "Open Feedback",
                "category": "Common",
                "displayPriority": 10,
                "description": "Feedback if the sunblind is opened.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "closeFeedback",
                "displayName": "Close Feedback",
                "category": "Common",
                "displayPriority": 10,
                "description": "Feedback if the sunblind is closed.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "position",
                "displayName": "Position",
                "category": "Common",
                "displayPriority": 10,
                "description": "Position of the sunblind. When used as data binding the position will be written when changed by the user.",
                "defaultValue": null,
                "defaultValueInternal": 0
              },
              {
                "name": "positionFeedback",
                "displayName": "PositionFeedback",
                "category": "Common",
                "displayPriority": 10,
                "description": "Feedback for the position of the sunblind.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "angle",
                "displayName": "Angle",
                "category": "Common",
                "displayPriority": 10,
                "description": "Angle of the sunblind. When used as data binding the angle will be written when changed by the user.",
                "defaultValue": null,
                "defaultValueInternal": 0
              },
              {
                "name": "angleFeedback",
                "displayName": "AngleFeedback",
                "category": "Common",
                "displayPriority": 10,
                "description": "Feedback for the angle of the sunblind.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "resetManualSym",
                "displayName": "Reset hand mode",
                "category": "Common",
                "displayPriority": 10,
                "description": "Symbol which is set to true to reset the manual priority.",
                "defaultValue": null,
                "defaultValueInternal": null
              }
            ],
            "properties": {
              "baObject": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "baInterface": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "error": {
                "type": [
                  "boolean",
                  "string",
                  "null"
                ]
              },
              "priority": {
                "oneOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.RoomAutomation.Sunblind.Priority"
                  },
                  {
                    "type": [
                      "number",
                      "string",
                      "null"
                    ]
                  }
                ]
              },
              "openFeedback": {
                "type": [
                  "boolean",
                  "string",
                  "null"
                ]
              },
              "closeFeedback": {
                "type": [
                  "boolean",
                  "string",
                  "null"
                ]
              },
              "position": {
                "type": [
                  "number",
                  "string",
                  "null"
                ]
              },
              "positionFeedback": {
                "type": [
                  "number",
                  "string",
                  "null"
                ]
              },
              "angle": {
                "type": [
                  "number",
                  "string",
                  "null"
                ]
              },
              "angleFeedback": {
                "type": [
                  "number",
                  "string",
                  "null"
                ]
              },
              "resetManualSym": {
                "oneOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/Symbol"
                  },
                  {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                ]
              }
            }
          },
          {
            "title": "Heating cooling",
            "type": "object",
            "additionalProperties": false,
            "engineeringColumns": [
              "Name"
            ],
            "propertiesMeta": [
              {
                "name": "baObject",
                "displayName": "BaObject",
                "category": "BA",
                "displayPriority": 1,
                "description": "BaView of the heating cooling.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "baInterface",
                "displayName": "BaInterface",
                "category": "BA",
                "displayPriority": 1,
                "description": "BaInterface of the heating cooling.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "name",
                "displayName": "Name",
                "category": "Common",
                "displayPriority": 10,
                "description": "Name of the heating cooling.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "error",
                "displayName": "Error",
                "category": "Common",
                "displayPriority": 10,
                "description": "Defines if an error has occured or not. The error will be displayed.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "priority",
                "displayName": "Priority",
                "category": "Common",
                "displayPriority": 10,
                "description": "Priority of the heating cooling.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "roomTemp",
                "displayName": "RoomTemp",
                "category": "Common",
                "displayPriority": 10,
                "description": "The current room temperature.",
                "defaultValue": 0,
                "defaultValueInternal": 0
              },
              {
                "name": "roomTempAdjust",
                "displayName": "RoomTempAdjust",
                "category": "Common",
                "displayPriority": 10,
                "description": "The adjustment for the room temperature setpoint.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "roomTempAdjustFeedback",
                "displayName": "RoomTempAdjustFeedback",
                "category": "Common",
                "displayPriority": 10,
                "description": "Feedback for the room temperature adjustment.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "heatingSetpoint",
                "displayName": "HeatingSetpoint",
                "category": "Common",
                "displayPriority": 10,
                "description": "Setpoint of the heating controller. If no cooling setpoint is used it is possible to use the CoolingActive flag to switch between heating and cooling mode.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "coolingSetpoint",
                "displayName": "CoolingSetpoint",
                "category": "Common",
                "displayPriority": 10,
                "description": "Setpoint of the cooling controller.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "heatingActive",
                "displayName": "HeatingActive",
                "category": "Common",
                "displayPriority": 10,
                "description": "Flag that defines if heating mode is active or not.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "coolingActive",
                "displayName": "CoolingActive",
                "category": "Common",
                "displayPriority": 10,
                "description": "Flag that defines if cooling mode is active or not.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "energyLevel",
                "displayName": "Energy level",
                "category": "Common",
                "displayPriority": 10,
                "description": "The energy level of the HeatingCooling. (Default: eActualEnergyLevel_Out, DataType: integer)",
                "defaultValue": null,
                "defaultValueInternal": null
              }
            ],
            "properties": {
              "baObject": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "baInterface": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "error": {
                "type": [
                  "boolean",
                  "string",
                  "null"
                ]
              },
              "priority": {
                "oneOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.RoomAutomation.Sunblind.Priority"
                  },
                  {
                    "type": [
                      "number",
                      "string",
                      "null"
                    ]
                  }
                ]
              },
              "roomTemp": {
                "type": [
                  "number",
                  "string",
                  "null"
                ]
              },
              "roomTempAdjust": {
                "type": [
                  "number",
                  "string",
                  "null"
                ]
              },
              "roomTempAdjustFeedback": {
                "type": [
                  "number",
                  "string",
                  "null"
                ]
              },
              "heatingSetpoint": {
                "type": [
                  "number",
                  "string",
                  "null"
                ]
              },
              "coolingSetpoint": {
                "type": [
                  "number",
                  "string",
                  "null"
                ]
              },
              "heatingActive": {
                "type": [
                  "boolean",
                  "number",
                  "string",
                  "null"
                ]
              },
              "coolingActive": {
                "type": [
                  "boolean",
                  "number",
                  "string",
                  "null"
                ]
              },
              "energyLevel": {
                "oneOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.RoomAutomation.HeatingCooling.EnergyLevel"
                  },
                  {
                    "type": [
                      "number",
                      "string",
                      "null"
                    ]
                  }
                ]
              }
            }
          },
          {
            "title": "Window",
            "type": "object",
            "additionalProperties": false,
            "engineeringColumns": [
              "Name"
            ],
            "propertiesMeta": [
              {
                "name": "baObject",
                "displayName": "BaObject",
                "category": "BA",
                "displayPriority": 1,
                "description": "BaView of the window.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "baInterface",
                "displayName": "BaInterface",
                "category": "BA",
                "displayPriority": 1,
                "description": "BaInterface of the window.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "name",
                "displayName": "Name",
                "category": "Common",
                "displayPriority": 10,
                "description": "Name of the window.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "error",
                "displayName": "Error",
                "category": "Common",
                "displayPriority": 10,
                "description": "Defines if an error has occured or not. The error will be displayed.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "windowPosition",
                "displayName": "Position",
                "category": "Common",
                "displayPriority": 10,
                "description": "Position of the window. When used as data binding the position will be written when changed by the user.",
                "defaultValue": null,
                "defaultValueInternal": 0
              },
              {
                "name": "windowPositionFeedback",
                "displayName": "PositionFeedback",
                "category": "Common",
                "displayPriority": 10,
                "description": "Feedback for the position of the window.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "resetManualSym",
                "displayName": "Reset hand mode",
                "category": "Common",
                "displayPriority": 10,
                "description": "Symbol which is set to true to reset the manual priority.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "displayMode",
                "displayName": "DisplayMode",
                "category": "Common",
                "displayPriority": 10,
                "description": "Defines the display mode of the window.",
                "defaultValue": 0,
                "defaultValueInternal": 0
              },
              {
                "name": "iconRotation",
                "displayName": "IconRotation",
                "category": "Common",
                "displayPriority": 10,
                "description": "The rotation of the icon in degree (0°-360°).",
                "defaultValue": null,
                "defaultValueInternal": null
              }
            ],
            "properties": {
              "baObject": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "baInterface": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "error": {
                "type": [
                  "boolean",
                  "string",
                  "null"
                ]
              },
              "windowPosition": {
                "type": [
                  "number",
                  "boolean",
                  "string",
                  "null"
                ]
              },
              "windowPositionFeedback": {
                "type": [
                  "number",
                  "boolean",
                  "string",
                  "null"
                ]
              },
              "resetManualSym": {
                "oneOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/Symbol"
                  },
                  {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                ]
              },
              "displayMode": {
                "oneOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.RoomAutomation.Window.DisplayMode"
                  },
                  {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                ]
              },
              "iconRotation": {
                "type": [
                  "number",
                  "null"
                ]
              }
            }
          }
        ]
      }
    },
    "TcHmi.BuildingAutomation.Controls.Common.Paginator": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiRegion",
      "frameworkControlType": "Paginator",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.Common"
    },
    "TcHmi.BuildingAutomation.Controls.Common.Paginator.Pages": {
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/ContentPath"
      }
    },
    "TcHmi.Controls.BaseTemplate.TcHmiBreadcrumb": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiBreadcrumb",
      "frameworkControlNamespace": "TcHmi.Controls.BaseTemplate"
    },
    "TcHmi.Controls.BaseTemplate.TcHmiBurgerMenu": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiBurgerMenu",
      "frameworkControlNamespace": "TcHmi.Controls.BaseTemplate"
    },
    "TcHmiBurgerMenu": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.BaseTemplate.TcHmiBurgerMenu"
    },
    "TcHmi.Controls.BaseTemplate.TcHmiHeader": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiHeader",
      "frameworkControlNamespace": "TcHmi.Controls.BaseTemplate"
    },
    "TcHmiHeader": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.BaseTemplate.TcHmiHeader"
    },
    "TcHmi.Controls.BaseTemplate.TcHmiHeader.HeaderItems": {
      "id": "tchmi:framework#/definitions/TcHmi.Controls.BaseTemplate.TcHmiHeader.HeaderItems",
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "items": {
        "oneOf": [
          {
            "title": "Time",
            "type": "object",
            "engineeringColumns": [
              "itemType",
              "priority",
              "prefWidth"
            ],
            "properties": {
              "itemType": {
                "enum": [
                  "Time"
                ],
                "type": "string"
              },
              "priority": {
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5"
                ],
                "type": "string"
              },
              "itemAlign": {
                "enum": [
                  "Right",
                  "Left"
                ],
                "type": "string"
              },
              "prefWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "prefHeight": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefHeightUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "minWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "minWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "classList": {
                "$ref": "tchmi:framework#/definitions/ClassNameList"
              },
              "accessRights": {
                "$ref": "tchmi:framework#/definitions/AccessConfig"
              },
              "timeDisplayLayout": {
                "enum": [
                  "Time",
                  "Date",
                  "TimeDateSingleLine",
                  "TimeDateMultiLine",
                  "DateTimeSingleLine",
                  "DateTimeMultiLine"
                ],
                "type": "string"
              }
            },
            "propertiesMeta": [
              {
                "category": "General",
                "defaultValue": "Time",
                "defaultValueInternal": "Time",
                "description": "The type of the header item.",
                "displayName": "Item Type",
                "displaypriority": 10,
                "name": "itemType"
              },
              {
                "category": "General",
                "defaultValue": "3",
                "defaultValueInternal": "3",
                "description": "Element priority for the resizign process(1 : low priority, 5: high priority)",
                "displayName": "Priority",
                "displaypriority": 10,
                "name": "priority"
              },
              {
                "category": "General",
                "defaultValue": "Right",
                "defaultValueInternal": "Right",
                "description": "The horizontal alignment of the item inside the header bar.",
                "displayName": "Item Position",
                "displaypriority": 10,
                "name": "itemAlign"
              },
              {
                "category": "Layout",
                "defaultValue": 128,
                "defaultValueInternal": 128,
                "description": "The preferred width of the item.",
                "displayName": "Preferred Width",
                "displaypriority": 10,
                "name": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": null,
                "defaultValueInternal": "px",
                "description": "The unit of preferred width of the item.",
                "displayName": "Preferred Width Unit",
                "displaypriority": 10,
                "name": "prefWidthUnit",
                "refTo": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": 48,
                "defaultValueInternal": 48,
                "description": "The preferred heigth of the item.",
                "displayName": "Preferred Height",
                "displaypriority": 10,
                "name": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred heigth of the item.",
                "displayName": "Preferred Height Unit",
                "displaypriority": 10,
                "name": "prefHeightUnit",
                "refTo": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": 96,
                "defaultValueInternal": 96,
                "description": "The minimal width of the item.",
                "displayName": "Minimum Width",
                "displaypriority": 10,
                "name": "minWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of minimal width of the item.",
                "displayName": "Minimum Width Unit",
                "displaypriority": 10,
                "name": "minWidthUnit",
                "refTo": "minWidth"
              },
              {
                "category": "Layout",
                "description": "Defines the classes the control is part of. These can be addressed in themes.",
                "displayName": "Class List",
                "displaypriority": 10,
                "name": "classList",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "category": "Permissions",
                "name": "accessRights",
                "displayName": "Access Right",
                "displaypriority": 10,
                "description": "[Optional] Array of user groups which have access to this content.",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "category": "Specific",
                "defaultValue": "TimeDateMultiLine",
                "defaultValueInternal": "TimeDateMultiLine",
                "description": "The layout of the displayed time and date",
                "displayName": "Time Display Layout",
                "displaypriority": 10,
                "name": "timeDisplayLayout"
              }
            ],
            "required": [
              "itemType",
              "priority",
              "itemAlign",
              "prefWidth",
              "prefWidthUnit",
              "prefHeight",
              "prefHeightUnit",
              "minWidth",
              "minWidthUnit",
              "classList",
              "accessRights",
              "timeDisplayLayout"
            ],
            "additionalProperties": false
          },
          {
            "title": "Text",
            "type": "object",
            "engineeringColumns": [
              "itemType",
              "priority",
              "prefWidth"
            ],
            "properties": {
              "itemType": {
                "enum": [
                  "Text"
                ],
                "type": "string"
              },
              "priority": {
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5"
                ],
                "type": "string"
              },
              "itemAlign": {
                "enum": [
                  "Right",
                  "Left"
                ],
                "type": "string"
              },
              "prefWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "prefHeight": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefHeightUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "minWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "minWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "classList": {
                "$ref": "tchmi:framework#/definitions/ClassNameList"
              },
              "accessRights": {
                "$ref": "tchmi:framework#/definitions/AccessConfig"
              },
              "text": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "targetRegion": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiRegion"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "targetContent": {
                "anyOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/ContentPath"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "propertiesMeta": [
              {
                "category": "General",
                "defaultValue": "Text",
                "defaultValueInternal": "Text",
                "description": "The type of the header item.",
                "displayName": "Item Type",
                "displaypriority": 10,
                "name": "itemType"
              },
              {
                "category": "General",
                "defaultValue": "3",
                "defaultValueInternal": "3",
                "description": "Element priority for the resizign process(1 : low priority, 5: high priority)",
                "displayName": "Priority",
                "displaypriority": 10,
                "name": "priority"
              },
              {
                "category": "General",
                "defaultValue": "Right",
                "defaultValueInternal": "Right",
                "description": "The horizontal alignment of the item inside the header bar.",
                "displayName": "Item Position",
                "displaypriority": 10,
                "name": "itemAlign"
              },
              {
                "category": "Layout",
                "defaultValue": 160,
                "defaultValueInternal": 160,
                "description": "The preferred width of the item.",
                "displayName": "Preferred Width",
                "displaypriority": 10,
                "name": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred width of the item.",
                "displayName": "Preferred Width Unit",
                "displaypriority": 10,
                "name": "prefWidthUnit",
                "refTo": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": 48,
                "defaultValueInternal": 48,
                "description": "The preferred heigth of the item.",
                "displayName": "Preferred Height",
                "displaypriority": 10,
                "name": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred heigth of the item.",
                "displayName": "Preferred Height Unit",
                "displaypriority": 10,
                "name": "prefHeightUnit",
                "refTo": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": 96,
                "defaultValueInternal": 96,
                "description": "The minimal width of the item.",
                "displayName": "Minimum Width",
                "displaypriority": 10,
                "name": "minWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of minimal width of the item.",
                "displayName": "Minimum Width Unit",
                "displaypriority": 10,
                "name": "minWidthUnit",
                "refTo": "minWidth"
              },
              {
                "category": "Layout",
                "description": "Defines the classes the control is part of. These can be addressed in themes.",
                "displayName": "Class List",
                "displaypriority": 10,
                "name": "classList",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "name": "accessRights",
                "displayName": "Access Right",
                "category": "Permissions",
                "displaypriority": 10,
                "description": "[Optional] Array of user groups which have access to this content.",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "category": "Specific",
                "defaultValue": "Application name",
                "defaultValueInternal": "Application name",
                "description": "The displayed text.",
                "displayName": "Text",
                "displaypriority": 20,
                "name": "text"
              },
              {
                "category": "Specific",
                "defaultValue": null,
                "defaultValueInternal": null,
                "description": "Target Region",
                "displayName": "Target Region",
                "displaypriority": 20,
                "name": "targetRegion"
              },
              {
                "category": "Specific",
                "defaultValue": null,
                "defaultValueInternal": null,
                "description": "Content path to the Messages page",
                "displayName": "Target Content",
                "displaypriority": 20,
                "name": "targetContent"
              }
            ],
            "required": [
              "itemType",
              "priority",
              "itemAlign",
              "prefWidth",
              "prefWidthUnit",
              "prefHeight",
              "prefHeightUnit",
              "minWidth",
              "minWidthUnit",
              "classList",
              "accessRights",
              "text"
            ],
            "additionalProperties": false
          },
          {
            "title": "EventLine",
            "type": "object",
            "engineeringColumns": [
              "itemType",
              "priority",
              "prefWidth"
            ],
            "properties": {
              "itemType": {
                "enum": [
                  "EventLine"
                ],
                "type": "string"
              },
              "priority": {
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5"
                ],
                "type": "string"
              },
              "itemAlign": {
                "enum": [
                  "Right",
                  "Left"
                ],
                "type": "string"
              },
              "prefWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "prefHeight": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefHeightUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "minWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "minWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "classList": {
                "$ref": "tchmi:framework#/definitions/ClassNameList"
              },
              "accessRights": {
                "$ref": "tchmi:framework#/definitions/AccessConfig"
              },
              "messageFormat": {
                "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiEventLine.MessageFormat"
              },
              "filter": {
                "$ref": "tchmi:server#/definitions/eventFilter"
              },
              "targetRegion": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiRegion"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "targetContent": {
                "anyOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/ContentPath"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "propertiesMeta": [
              {
                "category": "General",
                "defaultValue": "EventLine",
                "defaultValueInternal": "EventLine",
                "description": "The type of the header item.",
                "displayName": "Item Type",
                "displaypriority": 10,
                "name": "itemType"
              },
              {
                "category": "General",
                "defaultValue": "3",
                "defaultValueInternal": "3",
                "description": "Element priority for the resizign process(1 : low priority, 5: high priority)",
                "displayName": "Priority",
                "displaypriority": 10,
                "name": "priority"
              },
              {
                "category": "General",
                "defaultValue": "Right",
                "defaultValueInternal": "Right",
                "description": "The horizontal alignment of the item inside the header bar.",
                "displayName": "Item Position",
                "displaypriority": 10,
                "name": "itemAlign"
              },
              {
                "category": "Layout",
                "defaultValue": 560,
                "defaultValueInternal": 560,
                "description": "The preferred width of the item.",
                "displayName": "Preferred Width",
                "displaypriority": 10,
                "name": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred width of the item.",
                "displayName": "Preferred Width Unit",
                "displaypriority": 10,
                "name": "prefWidthUnit",
                "refTo": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": 48,
                "defaultValueInternal": 48,
                "description": "The preferred heigth of the item.",
                "displayName": "Preferred Height",
                "displaypriority": 10,
                "name": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred heigth of the item.",
                "displayName": "Preferred Height Unit",
                "displaypriority": 10,
                "name": "prefHeightUnit",
                "refTo": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": 160,
                "defaultValueInternal": 160,
                "description": "The minimal width of the item.",
                "displayName": "Minimum Width",
                "displaypriority": 10,
                "name": "minWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of minimal width of the item.",
                "displayName": "Minimum Width Unit",
                "displaypriority": 10,
                "name": "minWidthUnit",
                "refTo": "minWidth"
              },
              {
                "category": "Layout",
                "description": "Defines the classes the control is part of. These can be addressed in themes.",
                "displayName": "Class List",
                "displaypriority": 10,
                "name": "classList",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "name": "accessRights",
                "displayName": "Access Right",
                "category": "Permissions",
                "displaypriority": 10,
                "description": "[Optional] Array of user groups which have access to this content.",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "category": "Specific",
                "description": "The parts that form the displayed event message.",
                "displayName": "Message Format",
                "displaypriority": 10,
                "name": "messageFormat",
                "defaultValue": [
                  {
                    "name": "timeRaised"
                  },
                  {
                    "text": " | "
                  },
                  {
                    "name": "domain"
                  },
                  {
                    "text": " | "
                  },
                  {
                    "name": "text"
                  }
                ],
                "defaultValueInternal": []
              },
              {
                "category": "Specific",
                "description": "The filter for the displayed events.",
                "displayName": "Filter",
                "displaypriority": 20,
                "name": "filter",
                "defaultValue": [
                  {
                    "path": "domain",
                    "comparator": "==",
                    "value": "TcHmiEventLogger"
                  },
                  {
                    "logic": "OR"
                  },
                  {
                    "path": "domain",
                    "comparator": "==",
                    "value": "TcHmiAlarm"
                  }
                ],
                "defaultValueInternal": []
              },
              {
                "category": "Specific",
                "defaultValue": null,
                "defaultValueInternal": null,
                "description": "Target Region",
                "displayName": "Target Region",
                "displaypriority": 30,
                "name": "targetRegion"
              },
              {
                "category": "Specific",
                "defaultValue": null,
                "defaultValueInternal": null,
                "description": "Content path to the Messages page",
                "displayName": "Target Content",
                "displaypriority": 40,
                "name": "targetContent"
              }
            ],
            "required": [
              "itemType",
              "priority",
              "itemAlign",
              "prefWidth",
              "prefWidthUnit",
              "prefHeight",
              "prefHeightUnit",
              "minWidth",
              "minWidthUnit",
              "classList",
              "accessRights",
              "filter"
            ],
            "additionalProperties": false
          },
          {
            "title": "StateImage",
            "type": "object",
            "engineeringColumns": [
              "itemType",
              "priority",
              "prefWidth"
            ],
            "properties": {
              "itemType": {
                "enum": [
                  "StateImage"
                ],
                "type": "string"
              },
              "priority": {
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5"
                ],
                "type": "string"
              },
              "itemAlign": {
                "enum": [
                  "Right",
                  "Left"
                ],
                "type": "string"
              },
              "prefWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "prefHeight": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefHeightUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "minWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "minWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "classList": {
                "$ref": "tchmi:framework#/definitions/ClassNameList"
              },
              "accessRights": {
                "$ref": "tchmi:framework#/definitions/AccessConfig"
              },
              "stateList": {
                "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiStateImage.StateList"
              },
              "stateVar": {
                "$ref": "tchmi:general#/definitions/Any"
              },
              "iconWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "iconWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "text": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "textPosition": {
                "enum": [
                  "Right",
                  "Left"
                ],
                "type": "string"
              }
            },
            "propertiesMeta": [
              {
                "category": "General",
                "defaultValue": "StateImage",
                "defaultValueInternal": "StateImage",
                "description": "The type of the header item.",
                "displayName": "Item Type",
                "displaypriority": 10,
                "name": "itemType"
              },
              {
                "category": "General",
                "defaultValue": "3",
                "defaultValueInternal": "3",
                "description": "Element priority for the resizign process(1 : low priority, 5: high priority)",
                "displayName": "Priority",
                "displaypriority": 10,
                "name": "priority"
              },
              {
                "category": "General",
                "defaultValue": "Right",
                "defaultValueInternal": "Right",
                "description": "The horizontal alignment of the item inside the header bar.",
                "displayName": "Item Position",
                "displaypriority": 10,
                "name": "itemAlign"
              },
              {
                "category": "Layout",
                "defaultValue": 160,
                "defaultValueInternal": 160,
                "description": "The preferred width of the item.",
                "displayName": "Preferred Width",
                "displaypriority": 10,
                "name": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred width of the item.",
                "displayName": "Preferred Width Unit",
                "displaypriority": 10,
                "name": "prefWidthUnit",
                "refTo": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": 48,
                "defaultValueInternal": 48,
                "description": "The preferred heigth of the item.",
                "displayName": "Preferred Height",
                "displaypriority": 10,
                "name": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred heigth of the item.",
                "displayName": "Preferred Height Unit",
                "displaypriority": 10,
                "name": "prefHeightUnit",
                "refTo": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": 48,
                "defaultValueInternal": 48,
                "description": "The minimal width of the item.",
                "displayName": "Minimum Width",
                "displaypriority": 10,
                "name": "minWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of minimal width of the item.",
                "displayName": "Minimum Width Unit",
                "displaypriority": 10,
                "name": "minWidthUnit",
                "refTo": "minWidth"
              },
              {
                "category": "Layout",
                "description": "Defines the classes the control is part of. These can be addressed in themes.",
                "displayName": "Class List",
                "displaypriority": 10,
                "name": "classList",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "name": "accessRights",
                "displayName": "Access Right",
                "category": "Permissions",
                "displaypriority": 10,
                "description": "[Optional] Array of user groups which have access to this content.",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "category": "Specific",
                "defaultValue": null,
                "defaultValueInternal": null,
                "description": "Enumeration to switch the icon state",
                "displayName": "State Variable",
                "displaypriority": 20,
                "name": "stateVar"
              },
              {
                "category": "Specific",
                "description": "An array of string, icon maps ",
                "displayName": "State defintions",
                "displaypriority": 20,
                "name": "stateList",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "category": "Specific",
                "defaultValue": 48,
                "defaultValueInternal": 48,
                "description": "The preferred width of the item. Percentage values will be based on the icon height.",
                "displayName": "Icon Width",
                "displaypriority": 10,
                "name": "iconWidth"
              },
              {
                "category": "Specific",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred width of the item.",
                "displayName": "Icon Width Unit",
                "displaypriority": 20,
                "name": "iconWidthUnit",
                "refTo": "iconWidth"
              },
              {
                "category": "Specific",
                "defaultValue": null,
                "defaultValueInternal": null,
                "description": "The displayed text.",
                "displayName": "Text",
                "displaypriority": 30,
                "name": "text"
              },
              {
                "category": "General",
                "defaultValue": "Left",
                "defaultValueInternal": "Left",
                "description": "The position of the description text.",
                "displayName": "Text Position",
                "displaypriority": 40,
                "name": "textPosition"
              }
            ],
            "required": [
              "itemType",
              "priority",
              "itemAlign",
              "prefWidth",
              "prefWidthUnit",
              "prefHeight",
              "prefHeightUnit",
              "minWidth",
              "minWidthUnit",
              "classList",
              "accessRights",
              "iconWidth",
              "iconWidthUnit",
              "stateList",
              "stateVar"
            ],
            "additionalProperties": false
          },
          {
            "title": "UserManagement",
            "type": "object",
            "engineeringColumns": [
              "itemType",
              "priority",
              "prefWidth"
            ],
            "properties": {
              "itemType": {
                "enum": [
                  "UserManagement"
                ],
                "type": "string"
              },
              "priority": {
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5"
                ],
                "type": "string"
              },
              "itemAlign": {
                "enum": [
                  "Right",
                  "Left"
                ],
                "type": "string"
              },
              "prefWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "prefHeight": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefHeightUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "minWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "minWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "classList": {
                "$ref": "tchmi:framework#/definitions/ClassNameList"
              },
              "accessRights": {
                "$ref": "tchmi:framework#/definitions/AccessConfig"
              },
              "allowLogout": {
                "type": "boolean"
              },
              "allowSwitchUser": {
                "type": "boolean"
              }
            },
            "propertiesMeta": [
              {
                "category": "General",
                "defaultValue": "UserManagement",
                "defaultValueInternal": "UserManagement",
                "description": "The type of the header item.",
                "displayName": "Item Type",
                "displaypriority": 10,
                "name": "itemType"
              },
              {
                "category": "General",
                "defaultValue": "3",
                "defaultValueInternal": "3",
                "description": "Element priority for the resizign process(1 : low priority, 5: high priority)",
                "displayName": "Priority",
                "displaypriority": 10,
                "name": "priority"
              },
              {
                "category": "General",
                "defaultValue": "Right",
                "defaultValueInternal": "Right",
                "description": "The horizontal alignment of the item inside the header bar.",
                "displayName": "Item Position",
                "displaypriority": 10,
                "name": "itemAlign"
              },
              {
                "category": "Layout",
                "defaultValue": 320,
                "defaultValueInternal": 320,
                "description": "The preferred width of the item.",
                "displayName": "Preferred Width",
                "displaypriority": 10,
                "name": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred width of the item.",
                "displayName": "Preferred Width Unit",
                "displaypriority": 10,
                "name": "prefWidthUnit",
                "refTo": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": 48,
                "defaultValueInternal": 48,
                "description": "The preferred heigth of the item.",
                "displayName": "Preferred Height",
                "displaypriority": 10,
                "name": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred heigth of the item.",
                "displayName": "Preferred Height Unit",
                "displaypriority": 10,
                "name": "prefHeightUnit",
                "refTo": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": 128,
                "defaultValueInternal": 128,
                "description": "The minimal width of the item.",
                "displayName": "Minimum Width",
                "displaypriority": 10,
                "name": "minWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of minimal width of the item.",
                "displayName": "Minimum Width Unit",
                "displaypriority": 10,
                "name": "minWidthUnit",
                "refTo": "minWidth"
              },
              {
                "category": "Layout",
                "description": "Defines the classes the control is part of. These can be addressed in themes.",
                "displayName": "Class List",
                "displaypriority": 10,
                "name": "classList",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "name": "accessRights",
                "displayName": "Access Right",
                "category": "Permissions",
                "displaypriority": 10,
                "description": "[Optional] Array of user groups which have access to this content.",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "category": "Specific",
                "defaultValue": null,
                "defaultValueInternal": true,
                "description": "Defines whether the logout button is displayed in the dropdown.",
                "displayName": "Allow Logout",
                "displaypriority": 10,
                "name": "allowLogout"
              },
              {
                "category": "Specific",
                "defaultValue": null,
                "defaultValueInternal": false,
                "description": "Defines whether the switch user button is displayed in the dropdown.",
                "displayName": "Allow Switch User",
                "displaypriority": 20,
                "name": "allowSwitchUser"
              }
            ],
            "required": [
              "itemType",
              "priority",
              "itemAlign",
              "prefWidth",
              "prefWidthUnit",
              "prefHeight",
              "prefHeightUnit",
              "minWidth",
              "minWidthUnit",
              "classList",
              "accessRights"
            ],
            "additionalProperties": false
          },
          {
            "title": "Image",
            "type": "object",
            "engineeringColumns": [
              "itemType",
              "priority",
              "prefWidth"
            ],
            "properties": {
              "itemType": {
                "enum": [
                  "Image"
                ],
                "type": "string"
              },
              "priority": {
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5"
                ],
                "type": "string"
              },
              "itemAlign": {
                "enum": [
                  "Right",
                  "Left"
                ],
                "type": "string"
              },
              "altText": {
                "type": "string"
              },
              "prefWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "prefHeight": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefHeightUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "minWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "minWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "classList": {
                "$ref": "tchmi:framework#/definitions/ClassNameList"
              },
              "accessRights": {
                "$ref": "tchmi:framework#/definitions/AccessConfig"
              },
              "image": {
                "anyOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/Path"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "targetRegion": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiRegion"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "targetContent": {
                "anyOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/ContentPath"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "propertiesMeta": [
              {
                "category": "General",
                "defaultValue": "Image",
                "defaultValueInternal": "Image",
                "description": "The type of the header item.",
                "displayName": "Item Type",
                "displaypriority": 10,
                "name": "itemType"
              },
              {
                "category": "General",
                "defaultValue": "3",
                "defaultValueInternal": "3",
                "description": "Element priority for the resizign process(1 : low priority, 5: high priority)",
                "displayName": "Priority",
                "displaypriority": 10,
                "name": "priority"
              },
              {
                "category": "General",
                "defaultValue": "Right",
                "defaultValueInternal": "Right",
                "description": "The horizontal alignment of the item inside the header bar.",
                "displayName": "Item Position",
                "displaypriority": 10,
                "name": "itemAlign"
              },
              {
                "category": "Layout",
                "defaultValue": 160,
                "defaultValueInternal": 160,
                "description": "The preferred width of the item.",
                "displayName": "Preferred Width",
                "displaypriority": 10,
                "name": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred width of the item.",
                "displayName": "Preferred Width Unit",
                "displaypriority": 10,
                "name": "prefWidthUnit",
                "refTo": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": 48,
                "defaultValueInternal": 48,
                "description": "The preferred heigth of the item.",
                "displayName": "Preferred Height",
                "displaypriority": 10,
                "name": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred heigth of the item.",
                "displayName": "Preferred HeightUnit",
                "displaypriority": 10,
                "name": "prefHeightUnit",
                "refTo": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": 96,
                "defaultValueInternal": 96,
                "description": "The minimal width of the item.",
                "displayName": "Minimum Width",
                "displaypriority": 10,
                "name": "minWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of minimal width of the item.",
                "displayName": "Minimum Width Unit",
                "displaypriority": 10,
                "name": "minWidthUnit",
                "refTo": "minWidth"
              },
              {
                "category": "Layout",
                "description": "Defines the classes the control is part of. These can be addressed in themes.",
                "displayName": "Class List",
                "displaypriority": 10,
                "name": "classList",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "name": "accessRights",
                "displayName": "Access Right",
                "category": "Permissions",
                "displaypriority": 10,
                "description": "[Optional] Array of user groups which have access to this content.",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "category": "Specific",
                "defaultValue": null,
                "defaultValueInternal": null,
                "description": "The displayed image",
                "displayName": "Image",
                "displaypriority": 20,
                "name": "image"
              },
              {
                "category": "Specific",
                "defaultValue": "Image",
                "defaultValueInternal": "Image",
                "description": "The text which will be displayed if the image was not found.",
                "displayName": "Alternative Text",
                "displaypriority": 20,
                "name": "altText"
              },
              {
                "category": "Specific",
                "defaultValue": null,
                "defaultValueInternal": null,
                "description": "Target Region",
                "displayName": "Target Region",
                "displaypriority": 20,
                "name": "targetRegion"
              },
              {
                "category": "Specific",
                "defaultValue": null,
                "defaultValueInternal": null,
                "description": "Content path to the Messages page",
                "displayName": "Target Content",
                "displaypriority": 20,
                "name": "targetContent"
              }
            ],
            "required": [
              "itemType",
              "priority",
              "itemAlign",
              "prefWidth",
              "prefWidthUnit",
              "prefHeight",
              "prefHeightUnit",
              "minWidth",
              "minWidthUnit",
              "classList",
              "accessRights",
              "image"
            ],
            "additionalProperties": false
          },
          {
            "title": "ThemeSelect",
            "type": "object",
            "engineeringColumns": [
              "itemType",
              "priority",
              "prefWidth"
            ],
            "properties": {
              "itemType": {
                "enum": [
                  "ThemeSelect"
                ],
                "type": "string"
              },
              "priority": {
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5"
                ],
                "type": "string"
              },
              "itemAlign": {
                "enum": [
                  "Right",
                  "Left"
                ],
                "type": "string"
              },
              "prefWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "prefHeight": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefHeightUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "minWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "minWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "classList": {
                "$ref": "tchmi:framework#/definitions/ClassNameList"
              },
              "accessRights": {
                "$ref": "tchmi:framework#/definitions/AccessConfig"
              }
            },
            "propertiesMeta": [
              {
                "category": "General",
                "defaultValue": "ThemeSelect",
                "defaultValueInternal": "ThemeSelect",
                "description": "The type of the header item.",
                "displayName": "Item Type",
                "displaypriority": 10,
                "name": "itemType"
              },
              {
                "category": "General",
                "defaultValue": "3",
                "defaultValueInternal": "3",
                "description": "Element priority for the resizign process(1 : low priority, 5: high priority)",
                "displayName": "Priority",
                "displaypriority": 10,
                "name": "priority"
              },
              {
                "category": "General",
                "defaultValue": "Right",
                "defaultValueInternal": "Right",
                "description": "The horizontal alignment of the item inside the header bar.",
                "displayName": "Item Position",
                "displaypriority": 10,
                "name": "itemAlign"
              },
              {
                "category": "Layout",
                "defaultValue": 560,
                "defaultValueInternal": 560,
                "description": "The preferred width of the item.",
                "displayName": "Preferred Width",
                "displaypriority": 10,
                "name": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred width of the item.",
                "displayName": "Preferred Width Unit",
                "displaypriority": 10,
                "name": "prefWidthUnit",
                "refTo": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": 48,
                "defaultValueInternal": 48,
                "description": "The preferred heigth of the item.",
                "displayName": "Preferred Height",
                "displaypriority": 10,
                "name": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred heigth of the item.",
                "displayName": "Preferred Height Unit",
                "displaypriority": 10,
                "name": "prefHeightUnit",
                "refTo": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": 160,
                "defaultValueInternal": 160,
                "description": "The minimal width of the item.",
                "displayName": "Minimum Width",
                "displaypriority": 10,
                "name": "minWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of minimal width of the item.",
                "displayName": "Minimum Width Unit",
                "displaypriority": 10,
                "name": "minWidthUnit",
                "refTo": "minWidth"
              },
              {
                "category": "Layout",
                "description": "Defines the classes the control is part of. These can be addressed in themes.",
                "displayName": "Class List",
                "displaypriority": 10,
                "name": "classList",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "name": "accessRights",
                "displayName": "Access Right",
                "category": "Permissions",
                "displaypriority": 10,
                "description": "[Optional] Array of user groups which have access to this content.",
                "defaultValue": [],
                "defaultValueInternal": []
              }
            ],
            "required": [
              "itemType",
              "priority",
              "itemAlign",
              "prefWidth",
              "prefWidthUnit",
              "prefHeight",
              "prefHeightUnit",
              "minWidth",
              "minWidthUnit",
              "classList",
              "accessRights"
            ],
            "additionalProperties": false
          },
          {
            "title": "LocalizationSelect",
            "type": "object",
            "engineeringColumns": [
              "itemType",
              "priority",
              "prefWidth"
            ],
            "properties": {
              "itemType": {
                "enum": [
                  "LocalizationSelect"
                ],
                "type": "string"
              },
              "priority": {
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5"
                ],
                "type": "string"
              },
              "itemAlign": {
                "enum": [
                  "Right",
                  "Left"
                ],
                "type": "string"
              },
              "prefWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "prefHeight": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefHeightUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "minWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "minWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "classList": {
                "$ref": "tchmi:framework#/definitions/ClassNameList"
              },
              "accessRights": {
                "$ref": "tchmi:framework#/definitions/AccessConfig"
              },
              "localizationMapping": {
                "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLocalizationSelect.ListItemList"
              }
            },
            "propertiesMeta": [
              {
                "category": "General",
                "defaultValue": "LocalizationSelect",
                "defaultValueInternal": "LocalizationSelect",
                "description": "The type of the header item.",
                "displayName": "Item Type",
                "displaypriority": 10,
                "name": "itemType"
              },
              {
                "category": "General",
                "defaultValue": "3",
                "defaultValueInternal": "3",
                "description": "Element priority for the resizign process(1 : low priority, 5: high priority)",
                "displayName": "Priority",
                "displaypriority": 10,
                "name": "priority"
              },
              {
                "category": "General",
                "defaultValue": "Right",
                "defaultValueInternal": "Right",
                "description": "The horizontal alignment of the item inside the header bar.",
                "displayName": "Item Position",
                "displaypriority": 10,
                "name": "itemAlign"
              },
              {
                "category": "Layout",
                "defaultValue": 560,
                "defaultValueInternal": 560,
                "description": "The preferred width of the item.",
                "displayName": "Preferred Width",
                "displaypriority": 10,
                "name": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred width of the item.",
                "displayName": "Preferred Width Unit",
                "displaypriority": 10,
                "name": "prefWidthUnit",
                "refTo": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": 48,
                "defaultValueInternal": 48,
                "description": "The preferred heigth of the item.",
                "displayName": "Preferred Height",
                "displaypriority": 10,
                "name": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred heigth of the item.",
                "displayName": "Preferred Height Unit",
                "displaypriority": 10,
                "name": "prefHeightUnit",
                "refTo": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": 160,
                "defaultValueInternal": 160,
                "description": "The minimal width of the item.",
                "displayName": "Minimum Width",
                "displaypriority": 10,
                "name": "minWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of minimal width of the item.",
                "displayName": "Minimum Width Unit",
                "displaypriority": 10,
                "name": "minWidthUnit",
                "refTo": "minWidth"
              },
              {
                "category": "Layout",
                "description": "Defines the classes the control is part of. These can be addressed in themes.",
                "displayName": "Class List",
                "displaypriority": 10,
                "name": "classList",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "name": "accessRights",
                "displayName": "Access Right",
                "category": "Permissions",
                "displaypriority": 10,
                "description": "[Optional] Array of user groups which have access to this content.",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "name": "localizationMapping",
                "displayName": "Localization Mapping",
                "category": "Specific",
                "displaypriority": 10,
                "description": "[Optional] Changes the label for each localization identifier..",
                "defaultValue": [
                  {
                    "code": "de",
                    "text": "German"
                  },
                  {
                    "code": "de-DE",
                    "text": "German (Germany)"
                  },
                  {
                    "code": "en",
                    "text": "English"
                  },
                  {
                    "code": "en-US",
                    "text": "English (United States)"
                  }
                ],
                "defaultValueInternal": []
              }
            ],
            "required": [
              "itemType",
              "priority",
              "itemAlign",
              "prefWidth",
              "prefWidthUnit",
              "prefHeight",
              "prefHeightUnit",
              "minWidth",
              "minWidthUnit",
              "classList",
              "accessRights"
            ],
            "additionalProperties": false
          },
          {
            "title": "ADS State",
            "type": "object",
            "engineeringColumns": [
              "itemType",
              "priority",
              "prefWidth"
            ],
            "properties": {
              "itemType": {
                "enum": [
                  "AdsState"
                ],
                "type": "string"
              },
              "priority": {
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5"
                ],
                "type": "string"
              },
              "itemAlign": {
                "enum": [
                  "Right",
                  "Left"
                ],
                "type": "string"
              },
              "prefWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "prefHeight": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "prefHeightUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "minWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "minWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "classList": {
                "$ref": "tchmi:framework#/definitions/ClassNameList"
              },
              "accessRights": {
                "$ref": "tchmi:framework#/definitions/AccessConfig"
              },
              "adsRuntime": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "serverInterval": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "serverDomain": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "stateImages": {
                "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiAdsState.StateImages"
              },
              "iconWidth": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "iconWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "text": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "textPosition": {
                "enum": [
                  "Right",
                  "Left"
                ],
                "type": "string"
              }
            },
            "propertiesMeta": [
              {
                "category": "General",
                "defaultValue": "AdsState",
                "defaultValueInternal": "AdsState",
                "description": "The type of the header item.",
                "displayName": "Item Type",
                "displaypriority": 10,
                "name": "itemType"
              },
              {
                "category": "General",
                "defaultValue": "3",
                "defaultValueInternal": "3",
                "description": "Element priority for the resizign process(1 : low priority, 5: high priority)",
                "displayName": "Priority",
                "displaypriority": 10,
                "name": "priority"
              },
              {
                "category": "General",
                "defaultValue": "Right",
                "defaultValueInternal": "Right",
                "description": "The horizontal alignment of the item inside the header bar.",
                "displayName": "Item Position",
                "displaypriority": 10,
                "name": "itemAlign"
              },
              {
                "category": "Layout",
                "defaultValue": 160,
                "defaultValueInternal": 160,
                "description": "The preferred width of the item.",
                "displayName": "Preferred Width",
                "displaypriority": 10,
                "name": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": null,
                "defaultValueInternal": "px",
                "description": "The unit of preferred width of the item.",
                "displayName": "Preferred Width Unit",
                "displaypriority": 10,
                "name": "prefWidthUnit",
                "refTo": "prefWidth"
              },
              {
                "category": "Layout",
                "defaultValue": 48,
                "defaultValueInternal": 48,
                "description": "The preferred heigth of the item.",
                "displayName": "Preferred Height",
                "displaypriority": 10,
                "name": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred heigth of the item.",
                "displayName": "Preferred Height Unit",
                "displaypriority": 10,
                "name": "prefHeightUnit",
                "refTo": "prefHeight"
              },
              {
                "category": "Layout",
                "defaultValue": 96,
                "defaultValueInternal": 96,
                "description": "The minimal width of the item.",
                "displayName": "Minimum Width",
                "displaypriority": 10,
                "name": "minWidth"
              },
              {
                "category": "Layout",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of minimal width of the item.",
                "displayName": "Minimum Width Unit",
                "displaypriority": 10,
                "name": "minWidthUnit",
                "refTo": "minWidth"
              },
              {
                "category": "Layout",
                "description": "Defines the classes the control is part of. These can be addressed in themes.",
                "displayName": "Class List",
                "displaypriority": 10,
                "name": "classList",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "category": "Permissions",
                "name": "accessRights",
                "displayName": "Access Right",
                "displaypriority": 10,
                "description": "[Optional] Array of user groups which have access to this content.",
                "defaultValue": [],
                "defaultValueInternal": []
              },
              {
                "category": "Specific",
                "name": "adsRuntime",
                "displayName": "Runtime",
                "displaypriority": 10,
                "description": "The ADS extension runtime to be watched.",
                "defaultValue": "PLC1",
                "defaultValueInternal": null
              },
              {
                "category": "Specific",
                "defaultValue": 48,
                "defaultValueInternal": 48,
                "description": "The preferred width of the item. Percentage values will be based on the icon height.",
                "displayName": "Icon Width",
                "displaypriority": 10,
                "name": "iconWidth"
              },
              {
                "category": "Specific",
                "defaultValue": "px",
                "defaultValueInternal": "px",
                "description": "The unit of preferred width of the item.",
                "displayName": "Icon Width Unit",
                "displaypriority": 20,
                "name": "iconWidthUnit",
                "refTo": "iconWidth"
              },
              {
                "category": "Specific",
                "defaultValue": "PLC 1 State",
                "defaultValueInternal": null,
                "description": "The displayed text.",
                "displayName": "Text",
                "displaypriority": 20,
                "name": "text"
              },
              {
                "category": "General",
                "defaultValue": "Left",
                "defaultValueInternal": "Left",
                "description": "The position of the description text.",
                "displayName": "Text Position",
                "displaypriority": 30,
                "name": "textPosition"
              },
              {
                "category": "Specific",
                "name": "serverInterval",
                "displayName": "Server Interval",
                "displaypriority": 60,
                "description": "Sets the interval for the ADS state subscription in milliseconds. This might be expensive performance wise, so do not set to a very low value.",
                "defaultValue": 500,
                "defaultValueInternal": null
              },
              {
                "category": "Specific",
                "name": "serverDomain",
                "displayName": "Server Domain",
                "displaypriority": 70,
                "description": "The domain of the ADS extension in the server. Defaults to 'ADS'.",
                "defaultValue": "ADS",
                "defaultValueInternal": ""
              },
              {
                "category": "Specific",
                "name": "stateImages",
                "displayName": "StateImages",
                "displaypriority": 40,
                "description": "A structure defining an image for each state the control can have and the fallback image.",
                "defaultValue": null,
                "defaultValueInternal": null
              }
            ],
            "required": [
              "itemType",
              "priority",
              "itemAlign",
              "prefWidth",
              "prefWidthUnit",
              "prefHeight",
              "prefHeightUnit",
              "minWidth",
              "minWidthUnit",
              "classList",
              "accessRights",
              "adsRuntime",
              "serverInterval",
              "serverDomain",
              "iconWidth",
              "iconWidthUnit"
            ],
            "additionalProperties": false
          }
        ]
      }
    },
    "TcHmi.Controls.BaseTemplate.TcHmiNavigation": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiNavigation",
      "frameworkControlNamespace": "TcHmi.Controls.BaseTemplate"
    },
    "TcHmiNavigation": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.BaseTemplate.TcHmiNavigation"
    },
    "TcHmi.Controls.BaseTemplate.TcHmiNavigation.NavigationOrientation": {
      "enum": [
        "Horizontal",
        "Vertical"
      ],
      "type": "string"
    },
    "TcHmi.Controls.BaseTemplate.TcHmiNavigation.ListItem": {
      "title": "List Item",
      "description": "Navigation Item",
      "type": "object",
      "engineeringColumns": [
        "name",
        "content"
      ],
      "propertiesMeta": [
        {
          "name": "name",
          "displayName": "Name",
          "category": "General",
          "displayPriority": 10,
          "description": "Name of the Page. Will be displayed on the navigation button.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "content",
          "displayName": "Content",
          "category": "General",
          "displayPriority": 10,
          "description": "Path to the .content file the button click will switch to.  ",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "icon_a",
          "displayName": "Icon Active",
          "category": "Icon",
          "displayPriority": 10,
          "description": "[Optional] Select an image for the Icon in active state. For themeable Icons place the icon in every theme folder with the exact same structure and declare the path to the icon in 'Base' Theme here ",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "icon_n",
          "displayName": "Icon Normal",
          "category": "Icon",
          "displayPriority": 10,
          "description": "[Optional] Select an image for the Icon in normal state. For themeable Icons place the icon in every theme folder with the exact same structure and declare the path to the icon in 'Base' Theme here ",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "icon_p",
          "displayName": "Icon Pressed",
          "category": "Icon",
          "displayPriority": 10,
          "description": "[Optional] Select an image for the Icon in pressed state. For themeable Icons place the icon in every theme folder with the exact same structure and declare the path to the icon in 'Base' Theme here ",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "subItem",
          "displayName": "Sub Item",
          "category": "General",
          "displayPriority": 10,
          "description": "[Optional] Create sub Item for this Item. Sub item will be displayed in the context menu when this Content is selected.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "accessRights",
          "displayName": "Access Right",
          "category": "General",
          "displayPriority": 10,
          "description": "[Optional] Array of user groups which have access to this content.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "content": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "icon_a": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "icon_n": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "icon_p": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "subItem": {
          "$ref": "tchmi:framework#/definitions/TcHmi.Controls.BaseTemplate.TcHmiNavigation.ListItemList"
        },
        "accessRights": {
          "$ref": "tchmi:framework#/definitions/AccessConfig"
        }
      },
      "required": [
        "name",
        "content"
      ]
    },
    "TcHmi.Controls.BaseTemplate.TcHmiNavigation.ListItemList": {
      "title": "ListItemList",
      "description": "List Navigation Items",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Controls.BaseTemplate.TcHmiNavigation.ListItem"
      }
    },
    "TcHmi.Controls.BaseTemplate.TcHmiNavigation.ScrollbarStyle": {
      "type": "string",
      "enum": [
        "Auto",
        "None"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiButton": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiButton",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiButton.StateSymbol": {
      "allOf": [
        {
          "$ref": "tchmi:framework#/definitions/Symbol"
        },
        {
          "frameworkSymbolSubType": {
            "$ref": "tchmi:general#/definitions/Boolean"
          }
        }
      ]
    },
    "TcHmiButton": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiButton"
    },
    "TcHmiButtonStateSymbol": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiButton.StateSymbol"
    },
    "TcHmi.Controls.Beckhoff.TcHmiToggleButton": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiToggleButton",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiToggleButton": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiToggleButton"
    },
    "ChartBarGraphColorList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartBarGraphColorList"
    },
    "ChartBarGraphDataDefinitionList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartBarGraphDataDefinitionList"
    },
    "ChartBarGraphPosition": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartBarGraphPosition"
    },
    "TcHmi.Controls.Beckhoff.TcHmiBarChart": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiBarChart",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiBarChart.ChartBarGraphColorList": {
      "title": "ChartBarGraphColorList",
      "engineeringDefaultDatatype": 0,
      "anyOf": [
        {
          "type": "array",
          "items": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          }
        },
        {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        }
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiBarChart.ChartBarGraphDataDefinitionList": {
      "title": "ChartBarGraphDataDefinitionList",
      "engineeringDefaultDatatype": 0,
      "anyOf": [
        {
          "type": "array",
          "title": "Array<Array<number>>",
          "items": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        {
          "type": "array",
          "title": "Array<number>",
          "items": {
            "type": "number"
          }
        }
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiBarChart.ChartBarGraphPosition": {
      "title": "ChartBarGraphPosition",
      "type": "string",
      "enum": [
        "Left",
        "Right"
      ],
      "default": "Left"
    },
    "TcHmi.Controls.Beckhoff.TcHmiBarChart.ChartBarGraphDescriptionDefinitionList": {
      "title": "ChartBarGraphDescriptionDefinitionList",
      "type": "array",
      "items": {
        "type": "object",
        "engineeringColumns": [
          "legendName"
        ],
        "propertiesMeta": [
          {
            "name": "barColor",
            "displayName": "Bar color",
            "category": "Colors",
            "displayPriority": 10,
            "description": "Color for this bars",
            "defaultValue": {
              "color": "#2775be"
            },
            "defaultValueInternal": null
          },
          {
            "name": "legendName",
            "category": "General",
            "displayName": "Legend name",
            "displayPriority": 10,
            "description": "The name that is displayed in the legend.",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "scaleFactor",
            "category": "General",
            "displayName": "Scale factor",
            "displayPriority": 10,
            "description": "Scales all values with this scale factor.",
            "defaultValue": null,
            "defaultValueInternal": 1
          },
          {
            "name": "colorRanges",
            "category": "General",
            "displayName": "Bar color ranges",
            "displayPriority": 10,
            "description": "An array of colors to be used in different ranges.",
            "defaultValue": null,
            "defaultValueInternal": null
          }
        ],
        "properties": {
          "barColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "legendName": {
            "type": "string"
          },
          "scaleFactor": {
            "type": "number"
          },
          "colorRanges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "color": {
                  "$ref": "tchmi:framework#/definitions/SolidColor"
                },
                "expression": {
                  "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiBarChart.ChartBarColorFilter"
                }
              }
            }
          }
        },
        "additionalProperties": false
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiBarChart.ChartBarColorFilter": {
      "title": "ChartBarColorFilter",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "enum": [
                  "{value}"
                ],
                "default": "{value}"
              },
              "comparator": {
                "type": "string",
                "enum": [
                  "==",
                  "!=",
                  "<",
                  ">",
                  "<=",
                  ">="
                ],
                "default": "=="
              },
              "value": {
                "type": "number"
              }
            },
            "additionalProperties": false,
            "required": [
              "path",
              "comparator",
              "value"
            ]
          },
          {
            "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiBarChart.ChartBarColorFilter"
          }
        ]
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiBarChart.ChartBarGraphArrangement": {
      "title": "ChartBarGraphArrangement",
      "type": "string",
      "enum": [
        "Overlapped",
        "Clustered",
        "Stacked"
      ],
      "default": "Overlapped"
    },
    "TcHmi.Controls.Beckhoff.TcHmiBarChart.ChartAxisLabeling": {
      "title": "ChartAxisLabeling",
      "type": "string",
      "enum": [
        "Number",
        "Scientific",
        "Auto"
      ],
      "default": "Number"
    },
    "TcHmi.Controls.Beckhoff.TcHmiBarChart.ChartReferenceLineDefinition": {
      "title": "ChartReferenceLineDefinition",
      "type": "object",
      "engineeringColumns": [
        "name",
        "value",
        "orientation"
      ],
      "propertiesMeta": [
        {
          "name": "show",
          "category": "General",
          "displayName": "Show",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": true
        },
        {
          "name": "name",
          "category": "General",
          "displayName": "Name",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": ""
        },
        {
          "name": "orientation",
          "category": "General",
          "displayName": "Orientation",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "Horizontal",
          "defaultValueInternal": "Horizontal"
        },
        {
          "name": "value",
          "category": "General",
          "displayName": "Value",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 0
        },
        {
          "name": "color",
          "category": "Colors",
          "displayName": "Color",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiBarChart::ReferenceLineColor%/tr%",
          "defaultValueInternal": {
            "color": "#4794da"
          }
        },
        {
          "name": "lineWidth",
          "category": "General",
          "displayName": "Line width",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 1
        },
        {
          "name": "showLabel",
          "category": "General",
          "displayName": "Show label",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": true
        },
        {
          "name": "labelHorizontalAlignment",
          "category": "General",
          "displayName": "Label horizontal alignment",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Right"
        },
        {
          "name": "labelVerticalAlignment",
          "category": "General",
          "displayName": "Label vertical alignment",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Top"
        },
        {
          "name": "labelFontFamily",
          "category": "General",
          "displayName": "Label font-family",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "labelFontSize",
          "category": "General",
          "displayName": "Label font-size",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 12
        },
        {
          "name": "labelFontSizeUnit",
          "refTo": "labelFontSize",
          "category": "General",
          "displayName": "Label font-size unit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "labelFontWeight",
          "category": "General",
          "displayName": "Label font-weight",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Auto"
        }
      ],
      "properties": {
        "show": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "orientation": {
          "type": "string",
          "enum": [
            "Horizontal",
            "Vertical"
          ]
        },
        "value": {
          "type": "number"
        },
        "color": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "lineWidth": {
          "type": "number"
        },
        "showLabel": {
          "type": "boolean"
        },
        "labelHorizontalAlignment": {
          "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
        },
        "labelVerticalAlignment": {
          "$ref": "tchmi:framework#/definitions/VerticalAlignment"
        },
        "labelFontFamily": {
          "$ref": "tchmi:framework#/definitions/FontFamily"
        },
        "labelFontSize": {
          "$ref": "tchmi:framework#/definitions/MeasurementValue"
        },
        "labelFontSizeUnit": {
          "$ref": "tchmi:framework#/definitions/PixelUnit"
        },
        "labelFontWeight": {
          "$ref": "tchmi:framework#/definitions/FontWeight"
        }
      },
      "additionalProperties": false,
      "required": [
        "name",
        "value",
        "orientation"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiBarChart.ChartReferenceLineDefinitionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ChartReferenceLineDefinitionList",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiBarChart.ChartReferenceLineDefinition"
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiBarChart.ChartReferenceLinesPosition": {
      "title": "ChartReferenceLinesPosition",
      "type": "string",
      "enum": [
        "Background",
        "Foreground"
      ],
      "default": "Background"
    },
    "TcHmiBarChart": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiBarChart"
    },
    "ChartLineStyle": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.ChartLineStyle"
    },
    "GaugeKnobDefinition": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.GaugeKnobDefinition"
    },
    "GaugeRangeDefinitionList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.GaugeRangeDefinitionList"
    },
    "GaugeTickDefinition": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.GaugeTickDefinition"
    },
    "TcHmi.Controls.Beckhoff.ChartLineStyle": {
      "title": "ChartLineStyle",
      "type": "string",
      "enum": [
        "Dashed",
        "Dotted",
        "Solid"
      ],
      "default": "Dashed"
    },
    "TcHmi.Controls.Beckhoff.GaugeKnobDefinition": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "GaugeKnobDefinition",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "imagePath",
          "category": "General",
          "displayName": "ImagePath",
          "displayPriority": 10,
          "description": "Path to a Pixel or Vector Image.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "width",
          "category": "General",
          "displayName": "Width",
          "displayPriority": 10,
          "description": "Width of the Knob",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "height",
          "category": "General",
          "displayName": "Height",
          "displayPriority": 10,
          "description": "Height of the Knob",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "offsetX",
          "category": "General",
          "displayName": "Offset X",
          "displayPriority": 10,
          "description": "Defines the Offset of the Knob.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "offsetY",
          "category": "General",
          "displayName": "Offset Y",
          "displayPriority": 10,
          "description": "Defines the Offset of the Knob.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "imagePath": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "width": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "offsetX": {
          "type": "number"
        },
        "offsetY": {
          "type": "number"
        }
      }
    },
    "TcHmi.Controls.Beckhoff.GaugeRangeDefinitionList": {
      "title": "GaugeRangeDefinitionList",
      "type": "array",
      "items": {
        "type": "object",
        "title": "Range Definition",
        "engineeringColumns": [
          "start",
          "end",
          "color"
        ],
        "propertiesMeta": [
          {
            "name": "color",
            "displayName": "Color",
            "category": "Colors",
            "displayPriority": 10,
            "description": "Color of this range",
            "defaultValue": "rgba(0, 0, 0, 1)",
            "defaultValueInternal": null
          },
          {
            "name": "start",
            "displayName": "Start",
            "category": "General",
            "displayPriority": 10,
            "description": "Start of this range",
            "defaultValue": 0,
            "defaultValueInternal": 0
          },
          {
            "name": "end",
            "displayName": "End",
            "category": "General",
            "displayPriority": 10,
            "description": "End of this range",
            "defaultValue": 0,
            "defaultValueInternal": 0
          }
        ],
        "properties": {
          "color": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "start": {
            "type": "number"
          },
          "end": {
            "type": "number"
          }
        },
        "required": [
          "color",
          "start",
          "end"
        ]
      }
    },
    "TcHmi.Controls.Beckhoff.GaugeTickDefinition": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "GaugeTickDefinition",
      "type": "object",
      "properties": {
        "mainTickRange": {
          "type": "number",
          "minimum": 0
        },
        "subTickRange": {
          "type": "number",
          "minimum": 0
        }
      },
      "required": [
        "mainTickRange",
        "subTickRange"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiCheckbox": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiCheckbox",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiCheckbox.StateSymbol": {
      "allOf": [
        {
          "$ref": "tchmi:framework#/definitions/Symbol"
        },
        {
          "frameworkSymbolSubType": {
            "$ref": "tchmi:general#/definitions/Boolean"
          }
        }
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiCheckbox.TextPosition": {
      "type": "string",
      "enum": [
        "Left",
        "Right"
      ]
    },
    "TcHmiCheckbox": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiCheckbox"
    },
    "TcHmiCheckboxStateSymbol": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiCheckbox.StateSymbol"
    },
    "DropDownStyle": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiCombobox.DropDownStyle"
    },
    "ListItem": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiCombobox.ListItem"
    },
    "ListItemList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiCombobox.ListItemList"
    },
    "TcHmi.Controls.Beckhoff.TcHmiCombobox": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiCombobox",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiCombobox.DropDownStyle": {
      "type": "string",
      "enum": [
        "Classic",
        "Mobile"
      ],
      "default": "Classic"
    },
    "TcHmi.Controls.Beckhoff.TcHmiCombobox.ListItem": {
      "title": "List Item",
      "description": "List Item List",
      "type": "object",
      "engineeringColumns": [
        "id",
        "text",
        "value",
        "category"
      ],
      "propertiesMeta": [
        {
          "name": "id",
          "displayName": "ID",
          "category": "General",
          "displayPriority": 10,
          "description": "Numerical ID for this entry. Can be chosen freely, but must be unique.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "text",
          "displayName": "Text",
          "category": "General",
          "displayPriority": 10,
          "description": "Text to show for this entry",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "value",
          "displayName": "Value",
          "category": "General",
          "displayPriority": 10,
          "description": "Value which is associated to this entry",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "category",
          "displayName": "Category",
          "category": "General",
          "displayPriority": 10,
          "description": "An optional category which will be displayed above the item as a label (like <optgroup> in HTML).\nConsecutive items that have the exact same category will all be displayed under one category.\nHowever, if two items have the same category, but are not back to back, the category will be displayed twice to preserve the original item order.\nFor example items with categories [A, A, B, A] will create the category A with two entries, one category B with a single entry and after that again the category A with a single entry.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "id": {
          "type": "number"
        },
        "text": {
          "type": "string"
        },
        "value": {},
        "category": {
          "type": "string"
        }
      },
      "required": [
        "text"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiCombobox.ListItemList": {
      "title": "ListItemList",
      "description": "List Item List",
      "engineeringDefaultDatatype": 0,
      "anyOf": [
        {
          "type": "array",
          "items": {
            "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiCombobox.ListItem"
          }
        },
        {
          "type": "array"
        },
        {
          "type": "object"
        }
      ]
    },
    "TcHmiCombobox": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiCombobox"
    },
    "EnumDataSymbol": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiCombobox.EnumDataSymbol"
    },
    "TcHmi.Controls.Beckhoff.TcHmiCombobox.EnumDataSymbol": {
      "allOf": [
        {
          "$ref": "tchmi:framework#/definitions/Symbol"
        },
        {
          "frameworkSymbolSubType": {
            "$ref": "tchmi:general#/definitions/Object"
          }
        }
      ]
    },
    "DGColumnDefinitionList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiDatagrid.ColumnDefinitionList"
    },
    "DGDataDefinitionList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiDatagrid.DataDefinitionList"
    },
    "DGSorting": {
      "$ref": "tchmi:framework#/definitions/Sorting"
    },
    "TcHmi.Controls.Beckhoff.TcHmiDatagrid.Sorting": {
      "$ref": "tchmi:framework#/definitions/Sorting"
    },
    "TcHmi.Controls.Beckhoff.TcHmiDatagrid": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiDatagrid",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiDatagrid.DataSymbol": {
      "allOf": [
        {
          "$ref": "tchmi:framework#/definitions/Symbol"
        },
        {
          "frameworkSymbolSubType": {
            "$ref": "tchmi:general#/definitions/Array"
          }
        }
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiDatagrid.DataDefinitionList": {
      "anyOf": [
        {
          "type": "array",
          "title": "Definition for an image control",
          "items": {
            "type": "object",
            "title": "Definition for an image selection",
            "engineeringColumns": [
              "value",
              "source",
              "width",
              "height",
              "text"
            ],
            "propertiesMeta": [
              {
                "name": "value",
                "displayName": "Value",
                "category": "General",
                "displayPriority": 10,
                "description": "Value which is compared to select this image.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "source",
                "displayName": "Source",
                "category": "General",
                "displayPriority": 10,
                "description": "Path to the image.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "width",
                "displayName": "Width",
                "category": "General",
                "displayPriority": 10,
                "description": "Pixel width for this image",
                "defaultValue": 0,
                "defaultValueInternal": null
              },
              {
                "name": "height",
                "displayName": "Height",
                "category": "General",
                "displayPriority": 10,
                "description": "Pixel height for this image",
                "defaultValue": 0,
                "defaultValueInternal": null
              },
              {
                "name": "text",
                "displayName": "Text",
                "category": "General",
                "displayPriority": 10,
                "description": "Alt text (tooltip) for this image",
                "defaultValue": null,
                "defaultValueInternal": null
              }
            ],
            "properties": {
              "value": {
                "$ref": "tchmi:general#/definitions/Any"
              },
              "source": {
                "$ref": "tchmi:framework#/definitions/Path"
              },
              "width": {
                "type": "number",
                "minimum": 0
              },
              "height": {
                "type": "number",
                "minimum": 0
              },
              "text": {
                "type": "string"
              }
            },
            "required": [
              "value",
              "source",
              "width",
              "height"
            ]
          }
        },
        {
          "type": "array",
          "title": "Definition for a combobox control",
          "items": {
            "type": "object",
            "title": "Definition for an combobox entry",
            "engineeringColumns": [
              "text",
              "value"
            ],
            "propertiesMeta": [
              {
                "name": "value",
                "displayName": "Value",
                "category": "General",
                "displayPriority": 10,
                "description": "Value which is compared to create this entry.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "text",
                "displayName": "Text",
                "category": "General",
                "displayPriority": 10,
                "description": "Text to show for this entry",
                "defaultValue": null,
                "defaultValueInternal": null
              }
            ],
            "properties": {
              "value": {
                "$ref": "tchmi:general#/definitions/Any"
              },
              "text": {
                "type": "string"
              }
            },
            "required": [
              "value",
              "text"
            ],
            "additionalProperties": false
          }
        },
        {
          "type": "object",
          "title": "Definition for a numeric input control",
          "properties": {
            "minValue": {
              "type": "number"
            },
            "maxValue": {
              "type": "number"
            },
            "decimalDigits": {
              "type": "number",
              "minimum": 0
            }
          },
          "propertiesMeta": [
            {
              "name": "minValue",
              "displayName": "Min Value",
              "category": "General",
              "displayPriority": 10,
              "description": "The minimal value of the numeric input. No restrictions if it's unset.",
              "defaultValue": 0,
              "defaultValueInternal": null
            },
            {
              "name": "maxValue",
              "displayName": "Max Value",
              "category": "General",
              "displayPriority": 10,
              "description": "The maximal value of the numeric input. No restrictions if it's unset.",
              "defaultValue": 100,
              "defaultValueInternal": null
            },
            {
              "name": "decimalDigits",
              "displayName": "Decimal Digits",
              "category": "General",
              "displayPriority": 10,
              "description": "Number of displayed decimal digits. No restrictions if it's unset.",
              "defaultValue": 0,
              "defaultValueInternal": null
            }
          ]
        },
        {
          "type": "object",
          "title": "Definition for a spinbox input control",
          "properties": {
            "minValue": {
              "type": "number"
            },
            "maxValue": {
              "type": "number"
            },
            "decimalDigits": {
              "type": "number",
              "minimum": 0
            },
            "step": {
              "type": "number"
            }
          },
          "propertiesMeta": [
            {
              "name": "step",
              "displayName": "Step",
              "category": "General",
              "displayPriority": 10,
              "description": "Defines in which step increasing/decreasing the value is possible. \nIf you define a decimal number here it is recommended to set the 'decimal digits' property too to have an effect.",
              "defaultValue": 1,
              "defaultValueInternal": 1
            },
            {
              "name": "minValue",
              "displayName": "Min Value",
              "category": "General",
              "displayPriority": 10,
              "description": "The minimal value of the numeric input. No restrictions if it's unset.",
              "defaultValue": 0,
              "defaultValueInternal": null
            },
            {
              "name": "maxValue",
              "displayName": "Max Value",
              "category": "General",
              "displayPriority": 10,
              "description": "The maximal value of the numeric input. No restrictions if it's unset.",
              "defaultValue": 100,
              "defaultValueInternal": null
            },
            {
              "name": "decimalDigits",
              "displayName": "Decimal Digits",
              "category": "General",
              "displayPriority": 10,
              "description": "Number of displayed decimal digits. No restrictions if it's unset.",
              "defaultValue": 0,
              "defaultValueInternal": null
            }
          ]
        },
        {
          "type": "object",
          "title": "Definition for a button control",
          "properties": {
            "text": {
              "$ref": "tchmi:general#/definitions/String"
            }
          },
          "propertiesMeta": [
            {
              "name": "text",
              "displayName": "Text",
              "category": "General",
              "displayPriority": 10,
              "description": "Defines the text of the button.",
              "defaultValue": "",
              "defaultValueInternal": null
            }
          ]
        }
      ]
    },
    "TcHmiDatagrid": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiDatagrid"
    },
    "TcHmi.Controls.Beckhoff.TcHmiDateTimeInput": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiDateTimeInput",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiDateTimeInput": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiDateTimeInput"
    },
    "TcHmi.Controls.Beckhoff.TcHmiDateTimeInput.ButtonPosition": {
      "title": "DateTimeInputButtonPosition",
      "type": "string",
      "enum": [
        "Left",
        "Right"
      ],
      "default": "Right"
    },
    "TcHmi.Controls.Beckhoff.TcHmiDateTimePicker": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiDateTimePicker",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiDateTimePicker": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiDateTimePicker"
    },
    "TcHmi.Controls.Beckhoff.TcHmiEllipse": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiEllipse",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiEllipse": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiEllipse"
    },
    "EventGridColumnList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiEventGrid.ColumnList"
    },
    "EventGridMenuBarPosition": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiEventGrid.MenuBarPosition"
    },
    "TcHmi.Controls.Beckhoff.TcHmiEventGrid": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiEventGrid",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiEventGrid.ColumnList": {
      "title": "ColumnList",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "title": "Column",
            "type": "object",
            "engineeringColumns": [
              "columnName"
            ],
            "propertiesMeta": [
              {
                "name": "columnName",
                "displayName": "Column Name",
                "category": "General",
                "displayPriority": 10,
                "description": "Source of this column",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "width",
                "displayName": "Width",
                "category": "General",
                "displayPriority": 10,
                "description": "Width of this column",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "widthUnit",
                "refTo": "width",
                "displayName": "Width Unit",
                "category": "General",
                "displayPriority": 10,
                "description": "Width unit of this column. px defines an absolute width, % is relative to the control width and factor can be used to divide the available space into fractions.",
                "defaultValue": null,
                "defaultValueInternal": "px"
              },
              {
                "name": "sortable",
                "displayName": "sortable",
                "category": "General",
                "displayPriority": 10,
                "description": "Whether it should be possible to sort this column",
                "defaultValue": true,
                "defaultValueInternal": null
              },
              {
                "name": "format",
                "displayName": "Format",
                "category": "General",
                "displayPriority": 10,
                "description": "A reference of function which is called with each entry",
                "allowedFunctions": {
                  "returnType": "tchmi:general#/definitions/String",
                  "requiredArguments": [
                    {
                      "type": "tchmi:general#/definitions/Any",
                      "description": "The value to format."
                    }
                  ],
                  "waitMode": "Synchronous"
                },
                "defaultValue": null,
                "defaultValueInternal": null
              }
            ],
            "properties": {
              "columnName": {
                "type": "string",
                "enum": [
                  "severity",
                  "type",
                  "alarmState",
                  "confirmationState",
                  "domain",
                  "sourceDomain",
                  "name",
                  "text",
                  "timeAndDateRaised",
                  "timeRaised",
                  "dateRaised",
                  "timeAndDateConfirmed",
                  "timeConfirmed",
                  "dateConfirmed",
                  "timeAndDateCleared",
                  "timeCleared",
                  "dateCleared"
                ]
              },
              "width": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "widthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnitOrFactor"
              },
              "sortable": {
                "type": "boolean",
                "default": true
              },
              "format": {
                "$ref": "tchmi:framework#/definitions/Function"
              }
            },
            "required": [
              "columnName"
            ]
          },
          {
            "title": "Custom column",
            "type": "object",
            "engineeringColumns": [
              "columnName"
            ],
            "propertiesMeta": [
              {
                "name": "columnName",
                "displayName": "Column Name",
                "category": "General",
                "displayPriority": 10,
                "description": "Source of this column",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "label",
                "displayName": "Label",
                "category": "General",
                "displayPriority": 10,
                "description": "Label of this column",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "width",
                "displayName": "Width",
                "category": "General",
                "displayPriority": 10,
                "description": "Width of this column",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "widthUnit",
                "refTo": "width",
                "displayName": "Width Unit",
                "category": "General",
                "displayPriority": 10,
                "description": "Width unit of this column. px defines an absolute width, % is relative to the control width and factor can be used to divide the available space into fractions.",
                "defaultValue": null,
                "defaultValueInternal": "px"
              },
              {
                "name": "sortable",
                "displayName": "sortable",
                "category": "General",
                "displayPriority": 10,
                "description": "Whether it should be possible to sort this column",
                "defaultValue": true,
                "defaultValueInternal": null
              },
              {
                "name": "format",
                "displayName": "Format",
                "category": "General",
                "displayPriority": 10,
                "description": "A reference of function which is called with each entry",
                "allowedFunctions": {
                  "returnType": "tchmi:general#/definitions/String",
                  "requiredArguments": [
                    {
                      "type": "tchmi:general#/definitions/Any",
                      "description": "The value to format."
                    }
                  ],
                  "waitMode": "Synchronous"
                },
                "defaultValue": null,
                "defaultValueInternal": null
              }
            ],
            "properties": {
              "columnName": {
                "type": "string",
                "pattern": "^params::"
              },
              "label": {
                "type": "string"
              },
              "width": {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              "widthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnitOrFactor"
              },
              "sortable": {
                "type": "boolean",
                "default": true
              },
              "format": {
                "$ref": "tchmi:framework#/definitions/Function"
              }
            },
            "required": [
              "columnName"
            ]
          }
        ]
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiEventGrid.MenuBarPosition": {
      "type": "string",
      "enum": [
        "Top",
        "Bottom",
        "Left",
        "Right"
      ],
      "default": "Top"
    },
    "TcHmi.Controls.Beckhoff.TcHmiEventGrid.ServerEvent": {
      "$ref": "tchmi:framework#/definitions/ServerEvent"
    },
    "TcHmi.Controls.Beckhoff.TcHmiEventGrid.IconDefinition": {
      "title": "IconDefinition",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "imagePath",
          "category": "General",
          "displayName": "ImagePath",
          "displayPriority": 10,
          "description": "Path to a Pixel or Vector Image.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "width",
          "category": "General",
          "displayName": "Width",
          "displayPriority": 10,
          "description": "Width of the icon",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "height",
          "category": "General",
          "displayName": "Height",
          "displayPriority": 10,
          "description": "Height of the icon",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "imagePath": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "width": {
          "type": "number"
        },
        "height": {
          "type": "number"
        }
      },
      "required": [
        "imagePath",
        "width",
        "height"
      ]
    },
    "TcHmiEventGrid": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiEventGrid"
    },
    "TcHmi.Controls.Beckhoff.TcHmiEventLine": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiEventLine",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiEventLine": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiEventLine"
    },
    "TcHmi.Controls.Beckhoff.TcHmiEventLine.MessageFormat": {
      "title": "MessageFormat",
      "type": "array",
      "engineeringColumns": [
        "title"
      ],
      "items": {
        "anyOf": [
          {
            "title": "Event Property",
            "type": "object",
            "propertiesMeta": [
              {
                "name": "name",
                "displayName": "Name",
                "category": "General",
                "displayPriority": 10,
                "description": "A Part of the displayed message.",
                "defaultValue": null,
                "defaultValueInternal": null
              }
            ],
            "properties": {
              "name": {
                "type": "string",
                "enum": [
                  "type",
                  "severity",
                  "alarmState",
                  "confirmationState",
                  "domain",
                  "sourceDomain",
                  "name",
                  "text",
                  "timeReceived",
                  "timeRaised",
                  "timeConfirmed",
                  "timeCleared"
                ]
              }
            },
            "required": [
              "name"
            ]
          },
          {
            "title": "Event Parameter",
            "type": "object",
            "propertiesMeta": [
              {
                "name": "name",
                "displayName": "Name",
                "category": "General",
                "displayPriority": 10,
                "description": "The Path to a property of the received event. Subproperties can be accessed with the '::' seperator.",
                "defaultValue": "params::",
                "defaultValueInternal": null
              }
            ],
            "properties": {
              "name": {
                "type": "string",
                "pattern": "^params::"
              }
            },
            "required": [
              "name"
            ]
          },
          {
            "title": "Text",
            "type": "object",
            "propertiesMeta": [
              {
                "name": "text",
                "displayName": "Text",
                "category": "General",
                "displayPriority": 10,
                "description": "A custom text displayed in the event message.",
                "defaultValue": null,
                "defaultValueInternal": null
              }
            ],
            "properties": {
              "text": {
                "type": "string"
              }
            },
            "required": [
              "text"
            ]
          }
        ]
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiEventLine.TextOverflow": {
      "type": "string",
      "enum": [
        "Ellipsis",
        "MarqueeLeftToRight",
        "MarqueeRightToLeft"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiFileExplorer": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiFileExplorer",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiFileExplorer.MenuBarPosition": {
      "type": "string",
      "enum": [
        "Top",
        "Bottom"
      ],
      "default": "Top"
    },
    "TcHmi.Controls.Beckhoff.TcHmiFileExplorer.NameArray": {
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1
      }
    },
    "TcHmiFileExplorer": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiFileExplorer"
    },
    "TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiHorizontalBarChart",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartBarGraphColorList": {
      "title": "ChartBarGraphColorList",
      "engineeringDefaultDatatype": 0,
      "anyOf": [
        {
          "type": "array",
          "items": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          }
        },
        {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        }
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartBarGraphDataDefinitionList": {
      "title": "ChartBarGraphDataDefinitionList",
      "engineeringDefaultDatatype": 0,
      "anyOf": [
        {
          "type": "array",
          "title": "Array<Array<number>>",
          "items": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        {
          "type": "array",
          "title": "Array<number>",
          "items": {
            "type": "number"
          }
        }
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartBarGraphPosition": {
      "title": "ChartBarGraphPosition",
      "type": "string",
      "enum": [
        "Left",
        "Right"
      ],
      "default": "Left"
    },
    "TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartBarGraphArrangement": {
      "title": "ChartBarGraphArrangement",
      "type": "string",
      "enum": [
        "Overlapped",
        "Clustered",
        "Stacked"
      ],
      "default": "Overlapped"
    },
    "TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartBarGraphDescriptionDefinitionList": {
      "title": "ChartBarGraphDescriptionDefinitionList",
      "type": "array",
      "items": {
        "type": "object",
        "engineeringColumns": [
          "legendName"
        ],
        "propertiesMeta": [
          {
            "name": "barColor",
            "displayName": "Bar color",
            "category": "Colors",
            "displayPriority": 10,
            "description": "Color for this bars",
            "defaultValue": {
              "color": "#2775be"
            },
            "defaultValueInternal": null
          },
          {
            "name": "legendName",
            "category": "General",
            "displayName": "Legend name",
            "displayPriority": 10,
            "description": "The name that is displayed in the legend.",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "scaleFactor",
            "category": "General",
            "displayName": "Scale factor",
            "displayPriority": 10,
            "description": "Scales all values with this scale factor.",
            "defaultValue": null,
            "defaultValueInternal": 1
          },
          {
            "name": "colorRanges",
            "category": "General",
            "displayName": "Bar color ranges",
            "displayPriority": 10,
            "description": "An array of colors to be used in different ranges.",
            "defaultValue": null,
            "defaultValueInternal": null
          }
        ],
        "properties": {
          "barColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "legendName": {
            "type": "string"
          },
          "scaleFactor": {
            "type": "number"
          },
          "colorRanges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "color": {
                  "$ref": "tchmi:framework#/definitions/SolidColor"
                },
                "expression": {
                  "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartBarColorFilter"
                }
              }
            }
          }
        },
        "additionalProperties": false
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartBarColorFilter": {
      "title": "ChartBarColorFilter",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "enum": [
                  "{value}"
                ],
                "default": "{value}"
              },
              "comparator": {
                "type": "string",
                "enum": [
                  "==",
                  "!=",
                  "<",
                  ">",
                  "<=",
                  ">="
                ],
                "default": "=="
              },
              "value": {
                "type": "number"
              }
            },
            "additionalProperties": false,
            "required": [
              "path",
              "comparator",
              "value"
            ]
          },
          {
            "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartBarColorFilter"
          }
        ]
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartAxisLabeling": {
      "title": "ChartAxisLabeling",
      "type": "string",
      "enum": [
        "Number",
        "Scientific",
        "Auto"
      ],
      "default": "Number"
    },
    "TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartReferenceLineDefinition": {
      "title": "ChartReferenceLineDefinition",
      "type": "object",
      "engineeringColumns": [
        "name",
        "value",
        "orientation"
      ],
      "propertiesMeta": [
        {
          "name": "show",
          "category": "General",
          "displayName": "Show",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": true
        },
        {
          "name": "name",
          "category": "General",
          "displayName": "Name",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": ""
        },
        {
          "name": "orientation",
          "category": "General",
          "displayName": "Orientation",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "Horizontal",
          "defaultValueInternal": "Horizontal"
        },
        {
          "name": "value",
          "category": "General",
          "displayName": "Value",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 0
        },
        {
          "name": "color",
          "category": "Colors",
          "displayName": "Color",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart::ReferenceLineColor%/tr%",
          "defaultValueInternal": {
            "color": "#4794da"
          }
        },
        {
          "name": "lineWidth",
          "category": "General",
          "displayName": "Line width",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 1
        },
        {
          "name": "showLabel",
          "category": "General",
          "displayName": "Show label",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": true
        },
        {
          "name": "labelHorizontalAlignment",
          "category": "General",
          "displayName": "Label horizontal alignment",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Right"
        },
        {
          "name": "labelVerticalAlignment",
          "category": "General",
          "displayName": "Label vertical alignment",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Top"
        },
        {
          "name": "labelFontFamily",
          "category": "General",
          "displayName": "Label font-family",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "labelFontSize",
          "category": "General",
          "displayName": "Label font-size",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 12
        },
        {
          "name": "labelFontSizeUnit",
          "refTo": "labelFontSize",
          "category": "General",
          "displayName": "Label font-size unit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "labelFontWeight",
          "category": "General",
          "displayName": "Label font-weight",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Auto"
        }
      ],
      "properties": {
        "show": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "orientation": {
          "type": "string",
          "enum": [
            "Horizontal",
            "Vertical"
          ]
        },
        "value": {
          "type": "number"
        },
        "color": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "lineWidth": {
          "type": "number"
        },
        "showLabel": {
          "type": "boolean"
        },
        "labelHorizontalAlignment": {
          "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
        },
        "labelVerticalAlignment": {
          "$ref": "tchmi:framework#/definitions/VerticalAlignment"
        },
        "labelFontFamily": {
          "$ref": "tchmi:framework#/definitions/FontFamily"
        },
        "labelFontSize": {
          "$ref": "tchmi:framework#/definitions/MeasurementValue"
        },
        "labelFontSizeUnit": {
          "$ref": "tchmi:framework#/definitions/PixelUnit"
        },
        "labelFontWeight": {
          "$ref": "tchmi:framework#/definitions/FontWeight"
        }
      },
      "additionalProperties": false,
      "required": [
        "name",
        "value",
        "orientation"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartReferenceLineDefinitionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ChartReferenceLineDefinitionList",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartReferenceLineDefinition"
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart.ChartReferenceLinesPosition": {
      "title": "ChartReferenceLinesPosition",
      "type": "string",
      "enum": [
        "Background",
        "Foreground"
      ],
      "default": "Background"
    },
    "TcHmiHorizontalBarChart": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiHorizontalBarChart"
    },
    "TcHmi.Controls.Beckhoff.TcHmiIFrame": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiIFrame",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiIFrame": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiIFrame"
    },
    "TcHmi.Controls.Beckhoff.TcHmiImage": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiImage",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiImage": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiImage"
    },
    "TcHmi.Controls.Beckhoff.TcHmiKeyboard.ProjectKeyboardLayouts": {
      "type": "string",
      "description": "A path of a keyboard layout in the project."
    },
    "KeyList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiKeyboard.KeyList"
    },
    "TcHmi.Controls.Beckhoff.TcHmiKeyboard": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiKeyboard",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiKeyboard.KeyList": {
      "title": "KeyList",
      "description": "Array of keys.",
      "type": "array",
      "items": {
        "type": "object",
        "engineeringColumns": [
          "code",
          "key"
        ],
        "propertiesMeta": [
          {
            "name": "code",
            "displayName": "Code",
            "category": "General",
            "displayPriority": 10,
            "description": "Special string for each physical key on the keyboard (does not have to be the same as the corresponding char)",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "key",
            "displayName": "Key",
            "category": "General",
            "displayPriority": 10,
            "description": "Value of the key pressed",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "location",
            "displayName": "Location",
            "category": "General",
            "displayPriority": 10,
            "description": "Location of the pressed key",
            "defaultValue": null,
            "defaultValueInternal": null
          }
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "unmodifiedKey": {
            "type": "string"
          },
          "location": {
            "type": "string",
            "enum": [
              "standard",
              "left",
              "right",
              "numpad"
            ]
          }
        },
        "required": [
          "code",
          "key",
          "unmodifiedKey",
          "location"
        ]
      }
    },
    "TcHmiKeyboard": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiKeyboard"
    },
    "ControlKeyboardLayouts": {
      "title": "ControlKeyboardLayouts",
      "description": "Enum of existing Layouts from the control",
      "type": "string",
      "enum": [
        "EN-US_QWERTY_standard",
        "EN-US_QWERTY_full",
        "EN-US_QWERTY_compact",
        "DE-DE_QWERTZ_standard",
        "DE-DE_QWERTZ_full",
        "DE-DE_QWERTZ_compact",
        "PINpad",
        "Numpad",
        "Calculator"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiLine": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiLine",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiLine": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLine"
    },
    "LinearGaugeLabelPosition": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLinearGauge.LabelPosition"
    },
    "LinearGaugeOrientation": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLinearGauge.Orientation"
    },
    "LinearGaugeUnitOrientation": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLinearGauge.UnitOrientation"
    },
    "TcHmi.Controls.Beckhoff.TcHmiLinearGauge": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiLinearGauge",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiLinearGauge.LabelPosition": {
      "title": "LabelPosition",
      "type": "string",
      "enum": [
        "Top",
        "Bottom",
        "Left",
        "Right"
      ],
      "default": "Top"
    },
    "TcHmi.Controls.Beckhoff.TcHmiLinearGauge.Orientation": {
      "title": "LinearGaugeOrientation",
      "type": "string",
      "enum": [
        "Horizontal",
        "Vertical",
        "HorizontalInverted",
        "VerticalInverted"
      ],
      "default": "Horizontal"
    },
    "TcHmi.Controls.Beckhoff.TcHmiLinearGauge.UnitOrientation": {
      "title": "LinearGaugeUnitOrientation",
      "type": "string",
      "enum": [
        "Theme",
        "Horizontal",
        "Vertical"
      ],
      "default": "Theme"
    },
    "TcHmiLinearGauge": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLinearGauge"
    },
    "ChartLineGraphDataDefinitionList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartLineGraphDataDefinitionList"
    },
    "ChartLineGraphDescriptionDefinitionList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartLineGraphDescriptionDefinitionList"
    },
    "ChartYAxisDefinition": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartYAxisDefinition"
    },
    "ChartYAxisDefinitionList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartYAxisDefinitionList"
    },
    "TcHmi.Controls.Beckhoff.TcHmiLineChart": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiLineChart",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartLineGraphDataDefinitionList": {
      "title": "ChartLineGraphDataDefinitionList",
      "anyOf": [
        {
          "type": "array",
          "title": "Array<Array<Coordinate pair>>",
          "items": {
            "type": "array",
            "title": "List of coordinate pairs",
            "items": {
              "type": "object",
              "title": "Coordinate pair",
              "engineeringColumns": [
                "x",
                "y"
              ],
              "propertiesMeta": [
                {
                  "name": "x",
                  "displayName": "X",
                  "category": "General",
                  "displayPriority": 10,
                  "description": "x coordinate",
                  "defaultValue": null,
                  "defaultValueInternal": null
                },
                {
                  "name": "y",
                  "displayName": "Y",
                  "category": "General",
                  "displayPriority": 10,
                  "description": "y coordinate",
                  "defaultValue": null,
                  "defaultValueInternal": null
                }
              ],
              "properties": {
                "x": {
                  "type": "number"
                },
                "y": {
                  "type": "number"
                }
              },
              "required": [
                "x",
                "y"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "array",
          "title": "Array<Array<number>>",
          "items": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        {
          "type": "array",
          "title": "Array<number>",
          "items": {
            "type": "number"
          }
        }
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartLineGraphDescriptionDefinitionList": {
      "title": "ChartLineGraphDescriptionDefinitionList",
      "type": "array",
      "items": {
        "type": "object",
        "engineeringColumns": [
          "yAxisId",
          "lineWidth"
        ],
        "propertiesMeta": [
          {
            "name": "lineColor",
            "displayName": "Line color",
            "category": "Colors",
            "displayPriority": 10,
            "description": "Color for this line",
            "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionLineColor%/tr%",
            "defaultValueInternal": null
          },
          {
            "name": "pointDotFillColor",
            "displayName": "Point dot fill color",
            "category": "Colors",
            "displayPriority": 10,
            "description": "Color for the fill of the dots",
            "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotFillColor%/tr%",
            "defaultValueInternal": null
          },
          {
            "name": "pointDotStrokeColor",
            "displayName": "Point dot stroke color",
            "category": "Colors",
            "displayPriority": 10,
            "description": "Color for the stroke of the dots",
            "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotStrokeColor%/tr%",
            "defaultValueInternal": null
          },
          {
            "name": "yAxisId",
            "displayName": "Y-Axis Id",
            "category": "General",
            "displayPriority": 10,
            "description": "Id of the y-axis to use for this graph",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "lineWidth",
            "displayName": "Line width",
            "category": "General",
            "displayPriority": 10,
            "description": "Line width in pixel",
            "defaultValue": 1,
            "defaultValueInternal": null
          },
          {
            "name": "pointDot",
            "displayName": "Point dot",
            "category": "General",
            "displayPriority": 10,
            "description": "Defines if the line has dots on the data points",
            "defaultValue": false,
            "defaultValueInternal": false
          },
          {
            "name": "pointDotRadius",
            "displayName": "Point dot radius",
            "category": "General",
            "displayPriority": 10,
            "description": "Dot radius",
            "defaultValue": 3,
            "defaultValueInternal": 3
          },
          {
            "name": "pointDotStrokeWidth",
            "displayName": "Point dot stroke width",
            "category": "General",
            "displayPriority": 10,
            "description": "Dot stroke width",
            "defaultValue": 1,
            "defaultValueInternal": null
          },
          {
            "name": "legendName",
            "category": "General",
            "displayName": "Legend name",
            "displayPriority": 10,
            "description": "The name that is displayed in the legend.",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "xScaleFactor",
            "category": "General",
            "displayName": "X scale factor",
            "displayPriority": 10,
            "description": "Scales all x values with this scale factor.",
            "defaultValue": null,
            "defaultValueInternal": 1
          },
          {
            "name": "yScaleFactor",
            "category": "General",
            "displayName": "Y scale factor",
            "displayPriority": 10,
            "description": "Scales all y values with this scale factor.",
            "defaultValue": null,
            "defaultValueInternal": 1
          },
          {
            "name": "fillMode",
            "displayName": "Fill mode",
            "category": "General",
            "displayPriority": 10,
            "description": "Fill mode for the fill area",
            "defaultValue": null,
            "defaultValueInternal": "None"
          },
          {
            "name": "fillColor",
            "displayName": "Fill color",
            "category": "Colors",
            "displayPriority": 10,
            "description": "Color for the fill area",
            "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionFillColor%/tr%",
            "defaultValueInternal": null
          },
          {
            "name": "fillTransparency",
            "displayName": "Fill transparency",
            "category": "General",
            "displayPriority": 10,
            "description": "Fill transparency for the fill area",
            "defaultValue": 50,
            "defaultValueInternal": 50
          },
          {
            "name": "colorRanges",
            "category": "General",
            "displayName": "Line color ranges",
            "displayPriority": 10,
            "description": "An array of colors to be used in different ranges.",
            "defaultValue": null,
            "defaultValueInternal": null
          }
        ],
        "properties": {
          "lineColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "pointDotFillColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "pointDotStrokeColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "yAxisId": {
            "type": "number"
          },
          "lineWidth": {
            "type": "number"
          },
          "pointDot": {
            "type": "boolean"
          },
          "pointDotRadius": {
            "type": "number",
            "minimum": 0
          },
          "pointDotStrokeWidth": {
            "type": "number",
            "minimum": 0
          },
          "legendName": {
            "type": "string"
          },
          "xScaleFactor": {
            "type": "number"
          },
          "yScaleFactor": {
            "type": "number"
          },
          "fillMode": {
            "type": "string",
            "enum": [
              "None",
              "HorizontalZero",
              "Top",
              "Bottom",
              "Center",
              "Source"
            ]
          },
          "fillColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "fillTransparency": {
            "type": "number"
          },
          "colorRanges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "color": {
                  "$ref": "tchmi:framework#/definitions/SolidColor"
                },
                "expression": {
                  "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartLineColorFilter"
                }
              }
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "yAxisId"
        ]
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartLineColorFilter": {
      "title": "ChartLineColorFilter",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "enum": [
                  "{value}"
                ],
                "default": "{value}"
              },
              "comparator": {
                "type": "string",
                "enum": [
                  "==",
                  "!=",
                  "<",
                  ">",
                  "<=",
                  ">="
                ],
                "default": "=="
              },
              "value": {
                "type": "number"
              }
            },
            "additionalProperties": false,
            "required": [
              "path",
              "comparator",
              "value"
            ]
          },
          {
            "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartLineColorFilter"
          }
        ]
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartYAxisDefinition": {
      "title": "ChartYAxisDefinition",
      "type": "object",
      "engineeringColumns": [
        "id",
        "axisName",
        "position"
      ],
      "propertiesMeta": [
        {
          "name": "labelFontColor",
          "category": "Colors",
          "displayName": "Label font color",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::YAxisLabelFontColor%/tr%",
          "defaultValueInternal": null
        },
        {
          "name": "axisColor",
          "category": "Colors",
          "displayName": "Axis color",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::YAxisAxisColor%/tr%",
          "defaultValueInternal": null
        },
        {
          "name": "axisNameFontColor",
          "category": "Colors",
          "displayName": "Axis name font color",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::YAxisAxisNameFontColor%/tr%",
          "defaultValueInternal": null
        },
        {
          "name": "id",
          "category": "General",
          "displayName": "Id",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 1
        },
        {
          "name": "position",
          "category": "General",
          "displayName": "Position",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Left"
        },
        {
          "name": "logarithmicScale",
          "category": "General",
          "displayName": "Logarithmic scale",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": false
        },
        {
          "name": "axisLabeling",
          "category": "General",
          "displayName": "Axis labeling",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Number"
        },
        {
          "name": "mainTickMinValue",
          "category": "General",
          "displayName": "Main-tick min-value",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 0
        },
        {
          "name": "mainTickMaxValue",
          "category": "General",
          "displayName": "Main-tick max-value",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 100
        },
        {
          "name": "autoScaling",
          "category": "General",
          "displayName": "Auto scaling",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": false
        },
        {
          "name": "decimalPlaces",
          "category": "General",
          "displayName": "decimalPlaces",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 2
        },
        {
          "name": "showAxis",
          "category": "General",
          "displayName": "Show Axis",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": true
        },
        {
          "name": "showLabels",
          "category": "General",
          "displayName": "showLabels",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": true
        },
        {
          "name": "showAxisName",
          "category": "General",
          "displayName": "Show axis name",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": true
        },
        {
          "name": "axisName",
          "category": "General",
          "displayName": "Axis name",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "y axis 1"
        },
        {
          "name": "axisNameFontFamily",
          "category": "General",
          "displayName": "Axis name font-family",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "axisNameFontSize",
          "category": "General",
          "displayName": "Axis name font-size",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 15
        },
        {
          "name": "axisNameFontSizeUnit",
          "refTo": "axisNameFontSize",
          "category": "General",
          "displayName": "Axis name font-size unit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "axisNameFontWeight",
          "category": "General",
          "displayName": "Axis name font-weight",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Bold"
        },
        {
          "name": "unit",
          "category": "General",
          "displayName": "Unit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "labelFontColor": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "axisColor": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "axisNameFontColor": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "id": {
          "type": "number"
        },
        "position": {
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ]
        },
        "logarithmicScale": {
          "type": "boolean"
        },
        "axisLabeling": {
          "type": "string",
          "enum": [
            "Number",
            "Scientific",
            "Auto"
          ]
        },
        "mainTickMinValue": {
          "type": "number"
        },
        "mainTickMaxValue": {
          "type": "number"
        },
        "autoScaling": {
          "type": "boolean"
        },
        "decimalPlaces": {
          "type": "number",
          "minimum": 0
        },
        "showAxis": {
          "type": "boolean"
        },
        "showLabels": {
          "type": "boolean"
        },
        "showAxisName": {
          "type": "boolean"
        },
        "axisName": {
          "type": "string"
        },
        "axisNameFontFamily": {
          "$ref": "tchmi:framework#/definitions/FontFamily"
        },
        "axisNameFontSize": {
          "$ref": "tchmi:framework#/definitions/MeasurementValue"
        },
        "axisNameFontSizeUnit": {
          "$ref": "tchmi:framework#/definitions/PixelUnit"
        },
        "axisNameFontWeight": {
          "$ref": "tchmi:framework#/definitions/FontWeight"
        },
        "unit": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "id",
        "position"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartYAxisDefinitionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ChartYAxisDefinitionList",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartYAxisDefinition"
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartAxisLabeling": {
      "title": "ChartAxisLabeling",
      "type": "string",
      "enum": [
        "Number",
        "Scientific",
        "Auto"
      ],
      "default": "Number"
    },
    "TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartReferenceLineDefinition": {
      "title": "ChartReferenceLineDefinition",
      "type": "object",
      "engineeringColumns": [
        "name",
        "value",
        "orientation"
      ],
      "propertiesMeta": [
        {
          "name": "show",
          "category": "General",
          "displayName": "Show",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": true
        },
        {
          "name": "name",
          "category": "General",
          "displayName": "Name",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "orientation",
          "category": "General",
          "displayName": "Orientation",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "Horizontal",
          "defaultValueInternal": "Horizontal"
        },
        {
          "name": "yAxisId",
          "category": "General",
          "displayName": "Y-Axis id",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "value",
          "category": "General",
          "displayName": "Value",
          "displayPriority": 10,
          "description": "",
          "defaultValue": 0,
          "defaultValueInternal": 0
        },
        {
          "name": "color",
          "category": "Colors",
          "displayName": "Color",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::ReferenceLineColor%/tr%",
          "defaultValueInternal": {
            "color": "#4794da"
          }
        },
        {
          "name": "lineWidth",
          "category": "General",
          "displayName": "Line width",
          "displayPriority": 10,
          "description": "",
          "defaultValue": 1,
          "defaultValueInternal": null
        },
        {
          "name": "showLabel",
          "category": "General",
          "displayName": "Show label",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": true
        },
        {
          "name": "labelHorizontalAlignment",
          "category": "General",
          "displayName": "Label horizontal alignment",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Right"
        },
        {
          "name": "labelVerticalAlignment",
          "category": "General",
          "displayName": "Label vertical alignment",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Top"
        },
        {
          "name": "labelFontFamily",
          "category": "General",
          "displayName": "Label font-family",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "labelFontSize",
          "category": "General",
          "displayName": "Label font-size",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 15
        },
        {
          "name": "labelFontSizeUnit",
          "refTo": "labelFontSize",
          "category": "General",
          "displayName": "Label font-size unit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "labelFontWeight",
          "category": "General",
          "displayName": "Label font-weight",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Auto"
        }
      ],
      "properties": {
        "show": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "orientation": {
          "type": "string",
          "enum": [
            "Horizontal",
            "Vertical"
          ]
        },
        "yAxisId": {
          "type": "number"
        },
        "value": {
          "type": "number"
        },
        "color": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "lineWidth": {
          "type": "number"
        },
        "showLabel": {
          "type": "boolean"
        },
        "labelHorizontalAlignment": {
          "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
        },
        "labelVerticalAlignment": {
          "$ref": "tchmi:framework#/definitions/VerticalAlignment"
        },
        "labelFontFamily": {
          "$ref": "tchmi:framework#/definitions/FontFamily"
        },
        "labelFontSize": {
          "$ref": "tchmi:framework#/definitions/MeasurementValue"
        },
        "labelFontSizeUnit": {
          "$ref": "tchmi:framework#/definitions/PixelUnit"
        },
        "labelFontWeight": {
          "$ref": "tchmi:framework#/definitions/FontWeight"
        }
      },
      "additionalProperties": false,
      "required": [
        "name",
        "value",
        "orientation"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartReferenceLineDefinitionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ChartReferenceLineDefinitionList",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartReferenceLineDefinition"
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiLineChart.ChartReferenceLinesPosition": {
      "title": "ChartReferenceLinesPosition",
      "type": "string",
      "enum": [
        "Background",
        "Foreground"
      ],
      "default": "Background"
    },
    "TcHmiLineChart": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLineChart"
    },
    "FillMode": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiPolygon.FillMode"
    },
    "TcHmi.Controls.Beckhoff.TcHmiPolygon": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiPolygon",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiPolygon.FillMode": {
      "title": "FillMode",
      "type": "string",
      "enum": [
        "NonZero",
        "EvenOdd"
      ],
      "default": "NonZero"
    },
    "TcHmiPolygon": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiPolygon"
    },
    "TcHmi.Controls.Beckhoff.TcHmiPolyline": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiPolyline",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiPolyline": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiPolyline"
    },
    "RadialGaugeLabelPosition": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiRadialGauge.LabelPosition"
    },
    "TcHmi.Controls.Beckhoff.TcHmiRadialGauge": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiRadialGauge",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiRadialGauge.LabelPosition": {
      "title": "LabelPosition",
      "type": "string",
      "enum": [
        "Outside",
        "Inside"
      ],
      "default": "Inside"
    },
    "TcHmi.Controls.Beckhoff.TcHmiRadialGauge.GaugeAlignment": {
      "title": "GaugeAlignment",
      "type": "string",
      "enum": [
        "Start",
        "Center",
        "End"
      ],
      "default": "Start"
    },
    "TcHmiRadialGauge": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiRadialGauge"
    },
    "TcHmi.Controls.Beckhoff.TcHmiRadioButton": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiRadioButton",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiRadioButton.StateSymbol": {
      "allOf": [
        {
          "$ref": "tchmi:framework#/definitions/Symbol"
        },
        {
          "frameworkSymbolSubType": {
            "$ref": "tchmi:general#/definitions/Boolean"
          }
        }
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiRadioButton.TextPosition": {
      "type": "string",
      "enum": [
        "Left",
        "Right"
      ]
    },
    "TcHmiRadioButton": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiRadioButton"
    },
    "TcHmiRadioButtonStateSymbol": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiRadioButton.StateSymbol"
    },
    "TcHmi.Controls.Beckhoff.TcHmiRectangle": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiRectangle",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiRectangle": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiRectangle"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTachometer": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiTachometer",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiTachometer": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTachometer"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTachometer.LabelPosition": {
      "title": "LabelPosition",
      "type": "string",
      "enum": [
        "Outside",
        "Inside"
      ],
      "default": "Inside"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTachometer.GaugeAlignment": {
      "title": "GaugeAlignment",
      "type": "string",
      "enum": [
        "Start",
        "Center",
        "End"
      ],
      "default": "Inside"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTextblock": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiTextblock",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiTextblock": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTextblock"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTextbox": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiTextbox",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiTextbox": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTextbox"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTimespanInput": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiTimespanInput",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiTimespanInput": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTimespanInput"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTimespanInput.ButtonPosition": {
      "title": "DateTimeInputButtonPosition",
      "type": "string",
      "enum": [
        "Left",
        "Right"
      ],
      "default": "Right"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTimespanPicker": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiTimespanPicker",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiTimespanPicker": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTimespanPicker"
    },
    "ChartMenuBarPosition": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartMenuBarPosition"
    },
    "ChartMouseMode": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartMouseMode"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiTrendLineChart",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartEnd": {
      "anyOf": [
        {
          "title": "Time",
          "$ref": "tchmi:general#/definitions/DateTime"
        },
        {
          "title": "Timespan",
          "$ref": "tchmi:general#/definitions/TimeSpan"
        },
        {
          "title": "KeyWords",
          "type": "string",
          "enum": [
            "Latest"
          ]
        }
      ],
      "default": "Latest"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartLineGraphDescriptionDefinitionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "TrendLineChartLineGraphDescriptionDefinitionList",
      "type": "array",
      "items": {
        "type": "object",
        "title": "Line graph description",
        "description": "Defines one line graph descriptions.",
        "propertiesMeta": [
          {
            "name": "lineColor",
            "displayName": "Line color",
            "category": "Colors",
            "displayPriority": 10,
            "description": "Color for this line",
            "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiTrendLineChart::LineGraphDescriptionLineColor%/tr%",
            "defaultValueInternal": null
          },
          {
            "name": "pointDotFillColor",
            "displayName": "Point dot fill color",
            "category": "Colors",
            "displayPriority": 10,
            "description": "Color for the fill of the dots",
            "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiTrendLineChart::LineGraphDescriptionPointDotFillColor%/tr%",
            "defaultValueInternal": null
          },
          {
            "name": "pointDotStrokeColor",
            "displayName": "Point dot stroke color",
            "category": "Colors",
            "displayPriority": 10,
            "description": "Color for the stroke of the dots",
            "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiTrendLineChart::LineGraphDescriptionPointDotStrokeColor%/tr%",
            "defaultValueInternal": null
          },
          {
            "name": "symbol",
            "displayName": "symbol",
            "category": "General",
            "displayPriority": 10,
            "description": "Name of the historized Symbol",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "yAxisId",
            "displayName": "Y-Axis Id",
            "category": "General",
            "displayPriority": 10,
            "description": "Id of the y-axis to use for this graph",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "lineWidth",
            "displayName": "Line width",
            "category": "General",
            "displayPriority": 10,
            "description": "Line width in pixel",
            "defaultValue": 1,
            "defaultValueInternal": null
          },
          {
            "name": "pointDot",
            "displayName": "Point dot",
            "category": "General",
            "displayPriority": 10,
            "description": "Defines if the line has dots on the data points",
            "defaultValue": false,
            "defaultValueInternal": false
          },
          {
            "name": "pointDotInStopMode",
            "displayName": "Point dot in stopmode",
            "category": "General",
            "displayPriority": 10,
            "description": "Defines if the line has dots on the data points",
            "defaultValue": false,
            "defaultValueInternal": false
          },
          {
            "name": "pointDotRadius",
            "displayName": "Point dot radius",
            "category": "General",
            "displayPriority": 10,
            "description": "Dot radius",
            "defaultValue": 3,
            "defaultValueInternal": 3
          },
          {
            "name": "pointDotStrokeWidth",
            "displayName": "Point dot stroke width",
            "category": "General",
            "displayPriority": 10,
            "description": "Dot stroke width",
            "defaultValue": 1,
            "defaultValueInternal": 1
          },
          {
            "name": "legendName",
            "category": "General",
            "displayName": "Legend name",
            "displayPriority": 10,
            "description": "The name that is displayed in the legend.",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "scaleFactor",
            "category": "General",
            "displayName": "Scale factor",
            "displayPriority": 10,
            "description": "Scales all values with this scale factor.",
            "defaultValue": null,
            "defaultValueInternal": 1
          },
          {
            "name": "fillMode",
            "displayName": "Fill mode",
            "category": "General",
            "displayPriority": 10,
            "description": "Fill mode for the fill area",
            "defaultValue": null,
            "defaultValueInternal": "None"
          },
          {
            "name": "fillColor",
            "displayName": "Fill color",
            "category": "Colors",
            "displayPriority": 10,
            "description": "Color for the fill area",
            "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionFillColor%/tr%",
            "defaultValueInternal": null
          },
          {
            "name": "fillTransparency",
            "displayName": "Fill transparency",
            "category": "General",
            "displayPriority": 10,
            "description": "Fill transparency for the fill area",
            "defaultValue": null,
            "defaultValueInternal": 50
          },
          {
            "name": "colorRanges",
            "category": "General",
            "displayName": "Line color ranges",
            "displayPriority": 10,
            "description": "An array of colors to be used in different ranges.",
            "defaultValue": null,
            "defaultValueInternal": null
          }
        ],
        "properties": {
          "symbol": {
            "type": "string"
          },
          "yAxisId": {
            "type": "integer"
          },
          "lineWidth": {
            "type": "number"
          },
          "lineColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "pointDot": {
            "type": "boolean"
          },
          "pointDotInStopMode": {
            "type": "boolean"
          },
          "pointDotRadius": {
            "type": "number",
            "minimum": 0
          },
          "pointDotFillColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "pointDotStrokeWidth": {
            "type": "number",
            "minimum": 0
          },
          "pointDotStrokeColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "legendName": {
            "type": "string"
          },
          "scaleFactor": {
            "type": "number"
          },
          "fillMode": {
            "type": "string",
            "enum": [
              "None",
              "HorizontalZero",
              "Top",
              "Bottom"
            ]
          },
          "fillColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "fillTransparency": {
            "type": "number"
          },
          "colorRanges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "color": {
                  "$ref": "tchmi:framework#/definitions/SolidColor"
                },
                "expression": {
                  "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartLineColorFilter"
                }
              }
            }
          }
        },
        "required": [
          "yAxisId"
        ]
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartLineColorFilter": {
      "title": "ChartLineColorFilter",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "enum": [
                  "{value}"
                ],
                "default": "{value}"
              },
              "comparator": {
                "type": "string",
                "enum": [
                  "==",
                  "!=",
                  "<",
                  ">",
                  "<=",
                  ">="
                ],
                "default": "=="
              },
              "value": {
                "type": "number"
              }
            },
            "required": [
              "path",
              "comparator",
              "value"
            ]
          },
          {
            "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartLineColorFilter"
          }
        ]
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartMenuBarPosition": {
      "title": "ChartMenuBarPosition",
      "type": "string",
      "enum": [
        "Bottom",
        "Top"
      ],
      "default": "Bottom"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartMouseMode": {
      "title": "ChartMouseMode",
      "type": "string",
      "enum": [
        "ZoomX",
        "ZoomXY",
        "PanX",
        "PanXY"
      ],
      "default": "ZoomX"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartStart": {
      "anyOf": [
        {
          "title": "Time",
          "$ref": "tchmi:general#/definitions/DateTime"
        },
        {
          "title": "Timespan",
          "$ref": "tchmi:general#/definitions/TimeSpan"
        },
        {
          "title": "KeyWords",
          "type": "string",
          "enum": [
            "First"
          ]
        }
      ],
      "default": "First"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartTooltipErrorInformationList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ChartTooltipErrorInformationList",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartTooltipErrorInformationObject"
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartTooltipErrorInformationObject": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "title": "TrendLineChart tooltip error information object",
      "properties": {
        "yAxis": {
          "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartYAxisDefinition"
        },
        "beginTime": {
          "type": "number"
        },
        "endTime": {
          "type": "number"
        },
        "errorCode": {
          "type": "number"
        },
        "symbolname": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "symbolname"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartTooltipInformationList": {
      "title": "ChartTooltipInformationList",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartTooltipInformationObject"
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartTooltipInformationObject": {
      "type": "object",
      "title": "TrendLineChart tooltip information object",
      "properties": {
        "point": {
          "type": "object",
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          },
          "required": [
            "x",
            "y"
          ],
          "additionalProperties": false
        },
        "yAxis": {
          "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartYAxisDefinition"
        },
        "symbolname": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "point",
        "symbolname"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartYAxisDefinition": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ChartYAxisDefinition",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "labelFontColor",
          "category": "Colors",
          "displayName": "Label font color",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiTrendLineChart::YAxisLabelFontColor%/tr%",
          "defaultValueInternal": null
        },
        {
          "name": "axisColor",
          "category": "Colors",
          "displayName": "Axis color",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiTrendLineChart::YAxisAxisColor%/tr%",
          "defaultValueInternal": null
        },
        {
          "name": "axisNameFontColor",
          "category": "Colors",
          "displayName": "Axis name font color",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiTrendLineChart::YAxisAxisNameFontColor%/tr%",
          "defaultValueInternal": null
        },
        {
          "name": "id",
          "category": "General",
          "displayName": "Id",
          "displayPriority": 10,
          "description": "",
          "defaultValue": 1,
          "defaultValueInternal": null
        },
        {
          "name": "position",
          "category": "General",
          "displayName": "Position",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "Left",
          "defaultValueInternal": "Left"
        },
        {
          "name": "logarithmicScale",
          "category": "General",
          "displayName": "Logarithmic scale",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": false
        },
        {
          "name": "axisLabeling",
          "category": "General",
          "displayName": "Axis labeling",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Number"
        },
        {
          "name": "mainTickMinValue",
          "category": "General",
          "displayName": "Main-tick min-value",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 0
        },
        {
          "name": "mainTickMaxValue",
          "category": "General",
          "displayName": "Main-tick max-value",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 100
        },
        {
          "name": "autoScaling",
          "category": "General",
          "displayName": "Auto scaling",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": false
        },
        {
          "name": "decimalPlaces",
          "category": "General",
          "displayName": "decimalPlaces",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 2
        },
        {
          "name": "showAxis",
          "category": "General",
          "displayName": "showAxis",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": true
        },
        {
          "name": "showLabels",
          "category": "General",
          "displayName": "showLabels",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": true
        },
        {
          "name": "showAxisName",
          "category": "General",
          "displayName": "Show axis name",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": true
        },
        {
          "name": "axisName",
          "category": "General",
          "displayName": "Axis name",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "y axis 1"
        },
        {
          "name": "axisNameFontFamily",
          "category": "General",
          "displayName": "Axis name font-family",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "axisNameFontSize",
          "category": "General",
          "displayName": "Axis name font-size",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 15
        },
        {
          "name": "axisNameFontSizeUnit",
          "refTo": "axisNameFontSize",
          "category": "General",
          "displayName": "Axis name font-size unit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "axisNameFontWeight",
          "category": "General",
          "displayName": "Axis name font-weight",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Bold"
        },
        {
          "name": "unit",
          "category": "General",
          "displayName": "Unit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "labelFontColor": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "axisColor": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "axisNameFontColor": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "id": {
          "type": "number"
        },
        "position": {
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ]
        },
        "logarithmicScale": {
          "type": "boolean"
        },
        "axisLabeling": {
          "type": "string",
          "enum": [
            "Number",
            "Scientific",
            "Auto"
          ]
        },
        "mainTickMinValue": {
          "type": "number"
        },
        "mainTickMaxValue": {
          "type": "number"
        },
        "autoScaling": {
          "type": "boolean"
        },
        "decimalPlaces": {
          "type": "number",
          "minimum": 0
        },
        "showAxis": {
          "type": "boolean"
        },
        "showLabels": {
          "type": "boolean"
        },
        "showAxisName": {
          "type": "boolean"
        },
        "axisName": {
          "type": "string"
        },
        "axisNameFontFamily": {
          "$ref": "tchmi:framework#/definitions/FontFamily"
        },
        "axisNameFontSize": {
          "$ref": "tchmi:framework#/definitions/MeasurementValue"
        },
        "axisNameFontSizeUnit": {
          "$ref": "tchmi:framework#/definitions/PixelUnit"
        },
        "axisNameFontWeight": {
          "$ref": "tchmi:framework#/definitions/FontWeight"
        },
        "unit": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "id",
        "position"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartYAxisDefinitionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ChartYAxisDefinitionList",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartYAxisDefinition"
      }
    },
    "TcHmiTrendLineChart": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart"
    },
    "TrendLineChartEnd": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartEnd"
    },
    "TrendLineChartLineGraphDescriptionDefinitionList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartLineGraphDescriptionDefinitionList"
    },
    "TrendLineChartStart": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartStart"
    },
    "TrendLineChartTooltipErrorInformationList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartTooltipErrorInformationList"
    },
    "TrendLineChartTooltipErrorInformationObject": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartTooltipErrorInformationObject"
    },
    "TrendLineChartTooltipInformationList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartTooltipInformationList"
    },
    "TrendLineChartTooltipInformationObject": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartTooltipInformationObject"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartReferenceLineDefinition": {
      "title": "ChartReferenceLineDefinition",
      "type": "object",
      "engineeringColumns": [
        "name",
        "value",
        "orientation"
      ],
      "propertiesMeta": [
        {
          "name": "show",
          "category": "General",
          "displayName": "Show",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": true
        },
        {
          "name": "name",
          "category": "General",
          "displayName": "Name",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "orientation",
          "category": "General",
          "displayName": "Orientation",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "Horizontal",
          "defaultValueInternal": "Horizontal"
        },
        {
          "name": "yAxisId",
          "category": "General",
          "displayName": "Y-Axis id",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "value",
          "category": "General",
          "displayName": "Value",
          "displayPriority": 10,
          "description": "",
          "defaultValue": 0,
          "defaultValueInternal": 0
        },
        {
          "name": "color",
          "category": "Colors",
          "displayName": "Color",
          "displayPriority": 10,
          "description": "",
          "defaultValue": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiTrendLineChart::ReferenceLineColor%/tr%",
          "defaultValueInternal": {
            "color": "#4794da"
          }
        },
        {
          "name": "lineWidth",
          "category": "General",
          "displayName": "Line width",
          "displayPriority": 10,
          "description": "",
          "defaultValue": 1,
          "defaultValueInternal": 1
        },
        {
          "name": "showLabel",
          "category": "General",
          "displayName": "Show label",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": true
        },
        {
          "name": "labelHorizontalAlignment",
          "category": "General",
          "displayName": "Label horizontal alignment",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Right"
        },
        {
          "name": "labelVerticalAlignment",
          "category": "General",
          "displayName": "Label vertical alignment",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Top"
        },
        {
          "name": "labelFontFamily",
          "category": "General",
          "displayName": "Label font-family",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "labelFontSize",
          "category": "General",
          "displayName": "Label font-size",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": 12
        },
        {
          "name": "labelFontSizeUnit",
          "refTo": "labelFontSize",
          "category": "General",
          "displayName": "Label font-size unit",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "px"
        },
        {
          "name": "labelFontWeight",
          "category": "General",
          "displayName": "Label font-weight",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Auto"
        }
      ],
      "properties": {
        "show": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "orientation": {
          "type": "string",
          "enum": [
            "Horizontal"
          ]
        },
        "yAxisId": {
          "type": "integer"
        },
        "value": {
          "type": "number"
        },
        "color": {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        "lineWidth": {
          "type": "number"
        },
        "showLabel": {
          "type": "boolean"
        },
        "labelHorizontalAlignment": {
          "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
        },
        "labelVerticalAlignment": {
          "$ref": "tchmi:framework#/definitions/VerticalAlignment"
        },
        "labelFontFamily": {
          "$ref": "tchmi:framework#/definitions/FontFamily"
        },
        "labelFontSize": {
          "$ref": "tchmi:framework#/definitions/MeasurementValue"
        },
        "labelFontSizeUnit": {
          "$ref": "tchmi:framework#/definitions/PixelUnit"
        },
        "labelFontWeight": {
          "$ref": "tchmi:framework#/definitions/FontWeight"
        }
      },
      "additionalProperties": false,
      "required": [
        "name",
        "value",
        "orientation"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartReferenceLineDefinitionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ChartReferenceLineDefinitionList",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartReferenceLineDefinition"
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiTrendLineChart.ChartReferenceLinesPosition": {
      "title": "ChartReferenceLinesPosition",
      "type": "string",
      "enum": [
        "Background",
        "Foreground"
      ],
      "default": "Background"
    },
    "TcHmi.Controls.Beckhoff.TcHmiVideo": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiVideo",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiVideo.VideoSourceList": {
      "title": "VideoSourceList",
      "description": "Video Source List",
      "type": "array",
      "items": {
        "type": "object",
        "engineeringColumns": [
          "source",
          "type"
        ],
        "properties": {
          "source": {
            "$ref": "tchmi:framework#/definitions/Path"
          },
          "type": {
            "type": "string",
            "category": "Common",
            "enum": [
              "",
              "video/mp4",
              "video/webm",
              "video/ogg",
              "application/dash+xml",
              "application/vnd.apple.mpegurl"
            ],
            "default": ""
          }
        },
        "required": [
          "source"
        ]
      }
    },
    "TcHmiVideo": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiVideo"
    },
    "VideoSourceList": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiVideo.VideoSourceList"
    },
    "TcHmi.Controls.Beckhoff.TcHmiRecipeSelect": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiRecipeSelect",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiRecipeSelect": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiRecipeSelect"
    },
    "TcHmi.Controls.Beckhoff.TcHmiThemeSelect": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiThemeSelect",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiThemeSelect": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiThemeSelect"
    },
    "TcHmi.Controls.Beckhoff.TcHmiLocalizationSelect": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiLocalizationSelect",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiLocalizationSelect": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLocalizationSelect"
    },
    "TcHmi.Controls.Beckhoff.TcHmiLocalizationSelect.ListItem": {
      "title": "List Item",
      "description": "List Item List",
      "type": "object",
      "engineeringColumns": [
        "code",
        "text"
      ],
      "propertiesMeta": [
        {
          "name": "code",
          "displayName": "Localization Code",
          "category": "General",
          "displayPriority": 10,
          "description": "A Localization code like 'de-DE'. ",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "text",
          "displayName": "Text",
          "category": "General",
          "displayPriority": 10,
          "description": "Text to show for the defined localization code",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      },
      "required": [
        "code",
        "text"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiLocalizationSelect.ListItemList": {
      "title": "ListItemList",
      "description": "List Item List",
      "engineeringDefaultDatatype": 0,
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiLocalizationSelect.ListItem"
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiDateTimeDisplay": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiDateTimeDisplay",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiDateTimeDisplay": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiDateTimeDisplay"
    },
    "TcHmi.Controls.Beckhoff.TcHmiDateTimeDisplay.TimeDisplayLayout": {
      "type": "string",
      "enum": [
        "Time",
        "Date",
        "TimeDateSingleLine",
        "TimeDateMultiLine",
        "DateTimeSingleLine",
        "DateTimeMultiLine"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiToggleSwitch": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiToggleSwitch",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiToggleSwitch": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiToggleSwitch"
    },
    "TcHmi.Controls.Beckhoff.TcHmiInput": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiInput",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiInput": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiInput"
    },
    "TcHmi.Controls.Beckhoff.TcHmiNumericInput": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiNumericInput",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiNumericInput": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiNumericInput"
    },
    "TcHmi.Controls.Beckhoff.TcHmiPasswordInput": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiPasswordInput",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiPasswordInput": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiPasswordInput"
    },
    "TcHmi.Controls.Beckhoff.TcHmiSpinboxInput": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiSpinboxInput",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiSpinboxInput": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiSpinboxInput"
    },
    "TcHmi.Controls.Beckhoff.TcHmiSpinboxInput.ButtonPosition": {
      "title": "SpinboxInputButtonPosition",
      "type": "string",
      "enum": [
        "BothLeft",
        "BothRight",
        "PlusLeftAndMinusRight",
        "MinusLeftAndPlusRight",
        "PlusTopAndMinusBottom",
        "MinusTopAndPlusBottom"
      ],
      "default": "MinusLeftAndPlusRight"
    },
    "TcHmi.Controls.Beckhoff.TcHmiAudio": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiAudio",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiAudio.AudioSourceList": {
      "title": "AudioSourceList",
      "description": "Audio Source List",
      "type": "array",
      "items": {
        "type": "object",
        "title": "Audio Source",
        "engineeringColumns": [
          "source",
          "type"
        ],
        "properties": {
          "source": {
            "$ref": "tchmi:framework#/definitions/Path"
          },
          "type": {
            "type": "string",
            "category": "Common",
            "enum": [
              "",
              "audio/mpeg",
              "audio/ogg",
              "audio/wav",
              "application/dash+xml",
              "application/vnd.apple.mpegurl"
            ],
            "options": [
              {
                "label": "<auto detect>",
                "value": ""
              }
            ],
            "default": ""
          }
        },
        "propertiesMeta": [
          {
            "name": "source",
            "displayName": "Source",
            "category": "General",
            "displayPriority": 10,
            "description": "The source path of the audio source",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "type",
            "displayName": "Audio Type",
            "category": "General",
            "displayPriority": 10,
            "description": "The type of the audio source.",
            "defaultValue": null,
            "defaultValueInternal": null
          }
        ],
        "required": [
          "source"
        ]
      }
    },
    "TcHmiAudio": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiAudio"
    },
    "TcHmi.Controls.Beckhoff.TcHmiStateImage": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiStateImage",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiStateImage": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiStateImage"
    },
    "TcHmi.Controls.Beckhoff.TcHmiStateImage.StateList": {
      "title": "StateList",
      "description": "State List",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiStateImage.StateListItem"
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiStateImage.StateListItem": {
      "title": "State List Item",
      "description": "State List Item",
      "type": "object",
      "engineeringColumns": [
        "state",
        "stateIcon"
      ],
      "propertiesMeta": [
        {
          "name": "state",
          "displayName": "Value",
          "category": "General",
          "displayPriority": 10,
          "description": "State Value",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "stateIcon",
          "displayName": "Icon",
          "category": "General",
          "displayPriority": 10,
          "description": "Icon Path for this entry.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "state": {
          "$ref": "tchmi:general#/definitions/Any"
        },
        "stateIcon": {
          "$ref": "tchmi:framework#/definitions/Path"
        }
      },
      "required": [
        "state",
        "stateIcon"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiRecipeEdit": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiRecipeEdit",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiRecipeEdit.NameArray": {
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1
      }
    },
    "TcHmiRecipeEdit": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiRecipeEdit"
    },
    "TcHmi.Controls.Beckhoff.TcHmiAdsState": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiAdsState",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiAdsState": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiAdsState"
    },
    "TcHmi.Controls.Beckhoff.TcHmiAdsState.StateImages": {
      "type": "object",
      "title": "StateImages",
      "description": "A structure defining an image for each state the control can have and the fallback image.",
      "propertiesMeta": [
        {
          "name": "Fallback",
          "displayName": "Fallback",
          "category": "General",
          "displayPriority": 1,
          "description": "The Fallback Image if a state is not defined.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Invalid",
          "displayName": "Invalid",
          "category": "General",
          "displayPriority": 2,
          "description": "The Image for the State 'Invalid'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Idle",
          "displayName": "Idle",
          "category": "General",
          "displayPriority": 3,
          "description": "The Image for the State 'Idle'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Reset",
          "displayName": "Reset",
          "category": "General",
          "displayPriority": 4,
          "description": "The Image for the State 'Reset'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Init",
          "displayName": "Init",
          "category": "General",
          "displayPriority": 5,
          "description": "The Image for the State 'Init'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Start",
          "displayName": "Start",
          "category": "General",
          "displayPriority": 6,
          "description": "The Image for the State 'Start'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Run",
          "displayName": "Run",
          "category": "General",
          "displayPriority": 7,
          "description": "The Image for the State 'Run'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Stop",
          "displayName": "Stop",
          "category": "General",
          "displayPriority": 8,
          "description": "The Image for the State 'Stop'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "SaveCfg",
          "displayName": "SaveCfg",
          "category": "General",
          "displayPriority": 9,
          "description": "The Image for the State 'SaveCfg'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "LoadCfg",
          "displayName": "LoadCfg",
          "category": "General",
          "displayPriority": 10,
          "description": "The Image for the State 'LoadCfg'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "PowerFailure",
          "displayName": "PowerFailure",
          "category": "General",
          "displayPriority": 11,
          "description": "The Image for the State 'PowerFailure'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "PowerGood",
          "displayName": "PowerGood",
          "category": "General",
          "displayPriority": 12,
          "description": "The Image for the State 'PowerGood'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Error",
          "displayName": "Error",
          "category": "General",
          "displayPriority": 13,
          "description": "The Image for the State 'Error'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Shutdown",
          "displayName": "Shutdown",
          "category": "General",
          "displayPriority": 14,
          "description": "The Image for the State 'Shutdown'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Suspend",
          "displayName": "Suspend",
          "category": "General",
          "displayPriority": 15,
          "description": "The Image for the State 'Suspend'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Resume",
          "displayName": "Resume",
          "category": "General",
          "displayPriority": 16,
          "description": "The Image for the State 'Resume'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Config",
          "displayName": "Config",
          "category": "General",
          "displayPriority": 17,
          "description": "The Image for the State 'Config'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Reconfig",
          "displayName": "Reconfig",
          "category": "General",
          "displayPriority": 18,
          "description": "The Image for the State 'Reconfig'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Stopping",
          "displayName": "Stopping",
          "category": "General",
          "displayPriority": 19,
          "description": "The Image for the State 'Stopping'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Incompatible",
          "displayName": "Incompatible",
          "category": "General",
          "displayPriority": 20,
          "description": "The Image for the State 'Incompatible'.",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "Exception",
          "displayName": "Exception",
          "category": "General",
          "displayPriority": 21,
          "description": "The Image for the State 'Exception'.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "Fallback": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Invalid": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Idle": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Reset": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Init": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Start": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Run": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Stop": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "SaveCfg": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "LoadCfg": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "PowerFailure": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "PowerGood": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Error": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Shutdown": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Suspend": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Resume": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Config": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Reconfig": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Stopping": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Incompatible": {
          "$ref": "tchmi:framework#/definitions/Path"
        },
        "Exception": {
          "$ref": "tchmi:framework#/definitions/Path"
        }
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiUserManagement": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiUserManagement",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiUserManagement": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiUserManagement"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTreeView": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiTreeView",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTreeView.Index": {
      "type": "array",
      "title": "The hierarchical index of treeview data.",
      "items": {
        "type": "number"
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiTreeView.DataSymbol": {
      "allOf": [
        {
          "$ref": "tchmi:framework#/definitions/Symbol"
        },
        {
          "frameworkSymbolSubType": {
            "$ref": "tchmi:general#/definitions/Array"
          }
        }
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiTreeView.ColumnDefinitionList": {
      "title": "ColumnDefinitionList",
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "object",
            "engineeringColumns": [
              "name",
              "label",
              "control",
              "width",
              "widthUnit"
            ],
            "propertiesMeta": [
              {
                "name": "cellBackground",
                "displayName": "Cell background",
                "category": "Colors",
                "displayPriority": 10,
                "description": "Background color of the cells in this column",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "textColor",
                "displayName": "Text color",
                "category": "Colors",
                "displayPriority": 10,
                "description": "Text color of the cells in this column",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "name",
                "displayName": "Name",
                "category": "General",
                "displayPriority": 10,
                "description": "Name of the property in the srcData object",
                "defaultValue": "",
                "defaultValueInternal": null
              },
              {
                "name": "label",
                "displayName": "Label",
                "category": "General",
                "displayPriority": 10,
                "description": "Name of the label for this column",
                "defaultValue": "",
                "defaultValueInternal": null
              },
              {
                "name": "control",
                "displayName": "Control",
                "category": "General",
                "displayPriority": 10,
                "description": "Type of the input elements for this column",
                "defaultValue": "TextBox",
                "defaultValueInternal": null
              },
              {
                "name": "width",
                "displayName": "Width",
                "category": "General",
                "displayPriority": 10,
                "description": "Width for this column",
                "defaultValue": 100,
                "defaultValueInternal": null
              },
              {
                "name": "widthUnit",
                "refTo": "width",
                "displayName": "Width unit",
                "category": "General",
                "displayPriority": 10,
                "description": "Width unit for this column. px defines an absolute width, % is relative to the control width and factor can be used to divide the available space into fractions.",
                "defaultValue": "px",
                "defaultValueInternal": "px"
              },
              {
                "name": "resize",
                "displayName": "Resize",
                "category": "General",
                "displayPriority": 10,
                "description": "Can this column be resized? Columns that have factor as their widthUnit can never be resizeable.",
                "defaultValue": false,
                "defaultValueInternal": false
              },
              {
                "name": "minWidth",
                "displayName": "Min width",
                "category": "General",
                "displayPriority": 10,
                "description": "Minimum width for this column",
                "defaultValue": 100,
                "defaultValueInternal": null
              },
              {
                "name": "minWidthUnit",
                "refTo": "minWidth",
                "displayName": "Min width unit",
                "category": "General",
                "displayPriority": 10,
                "description": "Minimum width unit for this column",
                "defaultValue": "px",
                "defaultValueInternal": "px"
              },
              {
                "name": "editable",
                "displayName": "Editable",
                "category": "General",
                "displayPriority": 10,
                "description": "Can this column be edited (text, number) or operated (button, checkbox)?",
                "defaultValue": false,
                "defaultValueInternal": false
              },
              {
                "name": "sortable",
                "displayName": "Sortable",
                "category": "General",
                "displayPriority": 10,
                "description": "Can this column be sortedby user interaction?",
                "defaultValue": true,
                "defaultValueInternal": true
              },
              {
                "name": "horizontalAlignment",
                "displayName": "Horizontal alignment",
                "category": "General",
                "displayPriority": 10,
                "description": "Horizontal alignment of this column",
                "defaultValue": "Left",
                "defaultValueInternal": "Left"
              },
              {
                "name": "verticalAlignment",
                "displayName": "Vertical alignment",
                "category": "General",
                "displayPriority": 10,
                "description": "Vertical alignment of this column",
                "defaultValue": "Center",
                "defaultValueInternal": "Center"
              },
              {
                "name": "headerHorizontalAlignment",
                "displayName": "Header Horizontal alignment",
                "category": "General",
                "displayPriority": 10,
                "description": "Horizontal alignment of the header of this column",
                "defaultValue": "Center",
                "defaultValueInternal": "Center"
              },
              {
                "name": "headerVerticalAlignment",
                "displayName": "Header Vertical alignment",
                "category": "General",
                "displayPriority": 10,
                "description": "Vertical alignment of the header of this column",
                "defaultValue": "Center",
                "defaultValueInternal": "Center"
              },
              {
                "name": "format",
                "displayName": "Format",
                "category": "General",
                "displayPriority": 10,
                "description": "A reference of function which is called with each entry",
                "allowedFunctions": {
                  "returnType": "tchmi:general#/definitions/String",
                  "requiredArguments": [
                    {
                      "type": "tchmi:general#/definitions/Any",
                      "description": "The value to format."
                    }
                  ],
                  "waitMode": "Synchronous"
                },
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "dataDefinitions",
                "displayName": "Data definitions",
                "category": "General",
                "displayPriority": 10,
                "description": "Mapping from the srcData to a combobox or image selection. \nText to show on Buttons. \nRestrictions for number inputs.",
                "defaultValue": null,
                "defaultValueInternal": null
              },
              {
                "name": "ignoreEscapeSequences",
                "displayName": "Ignore Escape Sequences",
                "category": "General",
                "displayPriority": 10,
                "description": "When set to true a backslash in a text will be shown verbatim in the HMI",
                "defaultValue": false,
                "defaultValueInternal": false
              },
              {
                "name": "autoFocusOut",
                "displayName": "Auto Focus-Out",
                "category": "General",
                "displayPriority": 10,
                "description": "When set to true the control will automatically lose focus when the user presses the enter or escape key",
                "defaultValue": true,
                "defaultValueInternal": true
              },
              {
                "name": "autoSelectText",
                "displayName": "Auto Select Text",
                "category": "General",
                "displayPriority": 10,
                "description": "When set to true all text within the control will be selected when the control gains focus",
                "defaultValue": false,
                "defaultValueInternal": false
              }
            ],
            "properties": {
              "cellBackground": {
                "$ref": "tchmi:framework#/definitions/Color"
              },
              "textColor": {
                "anyOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/SolidColor"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "name": {
                "type": "string",
                "minLength": 1
              },
              "label": {
                "type": "string"
              },
              "control": {
                "type": "string",
                "enum": [
                  "TextBox",
                  "TextBlock",
                  "CheckBox",
                  "Image",
                  "ComboBox",
                  "NumericInput",
                  "SpinboxInput",
                  "PasswordInput",
                  "Button",
                  "ToggleButton",
                  "ToggleSwitch",
                  "RadioButton",
                  "DateTimeInput",
                  "TimespanInput",
                  "AutoDetectControl"
                ]
              },
              "width": {
                "allOf": [
                  {
                    "$ref": "#/definitions/PositiveNumber"
                  },
                  {
                    "$ref": "#/definitions/MeasurementValue"
                  }
                ]
              },
              "widthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnitOrFactor"
              },
              "resize": {
                "type": "boolean"
              },
              "minWidth": {
                "allOf": [
                  {
                    "$ref": "#/definitions/PositiveNumber"
                  },
                  {
                    "$ref": "#/definitions/MeasurementValue"
                  }
                ]
              },
              "minWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "editable": {
                "type": "boolean"
              },
              "sortable": {
                "type": "boolean"
              },
              "horizontalAlignment": {
                "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
              },
              "verticalAlignment": {
                "$ref": "tchmi:framework#/definitions/VerticalAlignment"
              },
              "headerHorizontalAlignment": {
                "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
              },
              "headerVerticalAlignment": {
                "$ref": "tchmi:framework#/definitions/VerticalAlignment"
              },
              "format": {
                "$ref": "tchmi:framework#/definitions/Function"
              },
              "dataDefinitions": {
                "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiDatagrid.DataDefinitionList"
              },
              "ignoreEscapeSequences": {
                "type": "boolean"
              },
              "autoFocusOut": {
                "type": "boolean"
              },
              "autoSelectText": {
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "label",
              "control",
              "width",
              "widthUnit",
              "resize",
              "minWidth",
              "minWidthUnit",
              "editable",
              "horizontalAlignment",
              "verticalAlignment"
            ]
          }
        },
        {
          "type": "object",
          "propertiesMeta": [
            {
              "name": "cellBackground",
              "displayName": "Cell background",
              "category": "Colors",
              "displayPriority": 10,
              "description": "Background color of the cells in this column",
              "defaultValue": null,
              "defaultValueInternal": null
            },
            {
              "name": "textColor",
              "displayName": "Text color",
              "category": "Colors",
              "displayPriority": 10,
              "description": "Text color of the cells in this column",
              "defaultValue": null,
              "defaultValueInternal": null
            },
            {
              "name": "label",
              "displayName": "Label",
              "category": "General",
              "displayPriority": 10,
              "description": "Name of the label for this column",
              "defaultValue": "",
              "defaultValueInternal": null
            },
            {
              "name": "control",
              "displayName": "Control",
              "category": "General",
              "displayPriority": 10,
              "description": "Type of the input elements for this column",
              "defaultValue": "TextBox",
              "defaultValueInternal": null
            },
            {
              "name": "width",
              "displayName": "Width",
              "category": "General",
              "displayPriority": 10,
              "description": "Width for this column",
              "defaultValue": 100,
              "defaultValueInternal": null
            },
            {
              "name": "widthUnit",
              "refTo": "width",
              "displayName": "Width unit",
              "category": "General",
              "displayPriority": 10,
              "description": "Width unit for this column",
              "defaultValue": "px",
              "defaultValueInternal": "px"
            },
            {
              "name": "resize",
              "displayName": "Resize",
              "category": "General",
              "displayPriority": 10,
              "description": "Can this column be resized?",
              "defaultValue": false,
              "defaultValueInternal": false
            },
            {
              "name": "minWidth",
              "displayName": "Min width",
              "category": "General",
              "displayPriority": 10,
              "description": "Minimum width for this column",
              "defaultValue": 100,
              "defaultValueInternal": null
            },
            {
              "name": "minWidthUnit",
              "refTo": "minWidth",
              "displayName": "Min width unit",
              "category": "General",
              "displayPriority": 10,
              "description": "Minimum width unit for this column",
              "defaultValue": "px",
              "defaultValueInternal": "px"
            },
            {
              "name": "editable",
              "displayName": "Editable",
              "category": "General",
              "displayPriority": 10,
              "description": "Can this column be edited (text, number) or operated (button, checkbox)?",
              "defaultValue": false,
              "defaultValueInternal": false
            },
            {
              "name": "sortable",
              "displayName": "Sortable",
              "category": "General",
              "displayPriority": 10,
              "description": "Can this column be sorted by user interaction?",
              "defaultValue": true,
              "defaultValueInternal": false
            },
            {
              "name": "horizontalAlignment",
              "displayName": "Horizontal alignment",
              "category": "General",
              "displayPriority": 10,
              "description": "Horizontal alignment of this column",
              "defaultValue": "Left",
              "defaultValueInternal": "Left"
            },
            {
              "name": "verticalAlignment",
              "displayName": "Vertical alignment",
              "category": "General",
              "displayPriority": 10,
              "description": "Vertical alignment of this column",
              "defaultValue": "Center",
              "defaultValueInternal": "Center"
            },
            {
              "name": "headerHorizontalAlignment",
              "displayName": " Header Horizontal alignment",
              "category": "General",
              "displayPriority": 10,
              "description": "Horizontal alignment of the header of this column",
              "defaultValue": "Center",
              "defaultValueInternal": "Center"
            },
            {
              "name": "headerVerticalAlignment",
              "displayName": "Header Vertical alignment",
              "category": "General",
              "displayPriority": 10,
              "description": "Vertical alignment of the header of this column",
              "defaultValue": "Center",
              "defaultValueInternal": "Center"
            },
            {
              "name": "format",
              "displayName": "Format",
              "category": "General",
              "displayPriority": 10,
              "description": "A reference of function which is called with each entry",
              "allowedFunctions": {
                "returnType": "tchmi:general#/definitions/String",
                "requiredArguments": [
                  {
                    "type": "tchmi:general#/definitions/Any",
                    "description": "The value to format."
                  }
                ],
                "waitMode": "Synchronous"
              },
              "defaultValue": null,
              "defaultValueInternal": null
            },
            {
              "name": "dataDefinitions",
              "displayName": "Data definitions",
              "category": "General",
              "displayPriority": 10,
              "description": "Mapping from the srcData to a combobox or image selection. \nText to show on Buttons. \nRestrictions for number inputs.",
              "defaultValue": null,
              "defaultValueInternal": null
            },
            {
              "name": "ignoreEscapeSequences",
              "displayName": "Ignore Escape Sequences",
              "category": "General",
              "displayPriority": 10,
              "description": "When set to true a backslash in a text will be shown verbatim in the HMI",
              "defaultValue": false,
              "defaultValueInternal": false
            },
            {
              "name": "autoFocusOut",
              "displayName": "Auto Focus-Out",
              "category": "General",
              "displayPriority": 10,
              "description": "When set to true the control will automatically lose focus when the user presses the enter or escape key",
              "defaultValue": true,
              "defaultValueInternal": true
            },
            {
              "name": "autoSelectText",
              "displayName": "Auto Select Text",
              "category": "General",
              "displayPriority": 10,
              "description": "When set to true all text within the control will be selected when the control gains focus",
              "defaultValue": false,
              "defaultValueInternal": false
            }
          ],
          "properties": {
            "cellBackground": {
              "$ref": "tchmi:framework#/definitions/Color"
            },
            "textColor": {
              "anyOf": [
                {
                  "$ref": "tchmi:framework#/definitions/SolidColor"
                },
                {
                  "type": "null"
                }
              ]
            },
            "label": {
              "type": "string"
            },
            "control": {
              "type": "string",
              "enum": [
                "TextBox",
                "TextBlock",
                "CheckBox",
                "Image",
                "ComboBox",
                "NumericInput",
                "SpinboxInput",
                "PasswordInput",
                "Button",
                "ToggleButton",
                "ToggleSwitch",
                "RadioButton",
                "DateTimeInput",
                "TimespanInput",
                "AutoDetectControl"
              ]
            },
            "width": {
              "allOf": [
                {
                  "$ref": "#/definitions/PositiveNumber"
                },
                {
                  "$ref": "#/definitions/MeasurementValue"
                }
              ]
            },
            "widthUnit": {
              "$ref": "tchmi:framework#/definitions/MeasurementUnitOrFactor"
            },
            "resize": {
              "type": "boolean"
            },
            "minWidth": {
              "allOf": [
                {
                  "$ref": "#/definitions/PositiveNumber"
                },
                {
                  "$ref": "#/definitions/MeasurementValue"
                }
              ]
            },
            "minWidthUnit": {
              "$ref": "tchmi:framework#/definitions/MeasurementUnit"
            },
            "editable": {
              "type": "boolean"
            },
            "sortable": {
              "type": "boolean"
            },
            "horizontalAlignment": {
              "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
            },
            "verticalAlignment": {
              "$ref": "tchmi:framework#/definitions/VerticalAlignment"
            },
            "headerHorizontalAlignment": {
              "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
            },
            "headerVerticalAlignment": {
              "$ref": "tchmi:framework#/definitions/VerticalAlignment"
            },
            "format": {
              "$ref": "tchmi:framework#/definitions/Function"
            },
            "dataDefinitions": {
              "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiDatagrid.DataDefinitionList"
            },
            "ignoreEscapeSequences": {
              "type": "boolean"
            },
            "autoFocusOut": {
              "type": "boolean"
            },
            "autoSelectText": {
              "type": "boolean"
            }
          },
          "required": [
            "label",
            "control",
            "width",
            "widthUnit",
            "resize",
            "minWidth",
            "minWidthUnit",
            "editable",
            "horizontalAlignment",
            "verticalAlignment"
          ]
        }
      ]
    },
    "TcHmiTreeView": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTreeView"
    },
    "TcHmi.Controls.Beckhoff.TcHmiObjectBrowser": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiObjectBrowser",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiObjectBrowser": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiObjectBrowser"
    },
    "TcHmi.Controls.Beckhoff.TcHmiObjectBrowser.Index": {
      "type": "array",
      "title": "The hierarchical index of treeview data.",
      "items": {
        "type": "number"
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiObjectBrowser.DataSymbol": {
      "allOf": [
        {
          "$ref": "tchmi:framework#/definitions/Symbol"
        },
        {
          "frameworkSymbolSubType": {
            "anyOf": [
              {
                "$ref": "tchmi:general#/definitions/Object"
              },
              {
                "$ref": "tchmi:general#/definitions/Array"
              }
            ]
          }
        }
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiObjectBrowser.ColumnName": {
      "type": "string",
      "enum": [
        "Name",
        "Value",
        "Datatype",
        "ValueDisplay"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiObjectBrowser.ColumnDefinitionList": {
      "title": "ColumnDefinitionList",
      "type": "array",
      "items": {
        "title": "ColumnDefinition",
        "type": "object",
        "engineeringColumns": [
          "columnData",
          "width",
          "widthUnit"
        ],
        "propertiesMeta": [
          {
            "name": "cellBackground",
            "displayName": "Cell background",
            "category": "Colors",
            "displayPriority": 10,
            "description": "Background color of the cells in this column",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "textColor",
            "displayName": "Text color",
            "category": "Colors",
            "displayPriority": 10,
            "description": "Text color of the cells in this column",
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "columnData",
            "displayName": "Column data",
            "category": "General",
            "displayPriority": 10,
            "description": "The data that will be displayed in the column.",
            "defaultValue": "",
            "defaultValueInternal": null
          },
          {
            "name": "width",
            "displayName": "Width",
            "category": "General",
            "displayPriority": 10,
            "description": "Width for this column",
            "defaultValue": 100,
            "defaultValueInternal": null
          },
          {
            "name": "widthUnit",
            "refTo": "width",
            "displayName": "Width unit",
            "category": "General",
            "displayPriority": 10,
            "description": "Width unit for this column. px defines an absolute width, % is relative to the control width and factor can be used to divide the available space into fractions.",
            "defaultValue": "px",
            "defaultValueInternal": "px"
          },
          {
            "name": "resize",
            "displayName": "Resize",
            "category": "General",
            "displayPriority": 10,
            "description": "Can this column be resized? Columns that have factor as their widthUnit can never be resizeable.",
            "defaultValue": false,
            "defaultValueInternal": false
          },
          {
            "name": "minWidth",
            "displayName": "Min width",
            "category": "General",
            "displayPriority": 10,
            "description": "Minimum width for this column",
            "defaultValue": 100,
            "defaultValueInternal": null
          },
          {
            "name": "minWidthUnit",
            "refTo": "minWidth",
            "displayName": "Min width unit",
            "category": "General",
            "displayPriority": 10,
            "description": "Minimum width unit for this column",
            "defaultValue": "px",
            "defaultValueInternal": "px"
          },
          {
            "name": "editable",
            "displayName": "Editable",
            "category": "General",
            "displayPriority": 10,
            "description": "Can this column be edited (text, number) or operated (button, checkbox)?",
            "defaultValue": false,
            "defaultValueInternal": false
          },
          {
            "name": "sortable",
            "displayName": "Sortable",
            "category": "General",
            "displayPriority": 10,
            "description": "Can this column be sortedby user interaction?",
            "defaultValue": true,
            "defaultValueInternal": true
          },
          {
            "name": "horizontalAlignment",
            "displayName": "Horizontal alignment",
            "category": "General",
            "displayPriority": 10,
            "description": "Horizontal alignment of this column",
            "defaultValue": "Left",
            "defaultValueInternal": "Left"
          },
          {
            "name": "verticalAlignment",
            "displayName": "Vertical alignment",
            "category": "General",
            "displayPriority": 10,
            "description": "Vertical alignment of this column",
            "defaultValue": "Center",
            "defaultValueInternal": "Center"
          },
          {
            "name": "headerHorizontalAlignment",
            "displayName": "Header Horizontal alignment",
            "category": "General",
            "displayPriority": 10,
            "description": "Horizontal alignment of the header of this column",
            "defaultValue": "Center",
            "defaultValueInternal": "Center"
          },
          {
            "name": "headerVerticalAlignment",
            "displayName": "Header Vertical alignment",
            "category": "General",
            "displayPriority": 10,
            "description": "Vertical alignment of the header of this column",
            "defaultValue": "Center",
            "defaultValueInternal": "Center"
          },
          {
            "name": "format",
            "displayName": "Format",
            "category": "General",
            "displayPriority": 10,
            "description": "A reference of function which is called with each entry",
            "allowedFunctions": {
              "returnType": "tchmi:general#/definitions/String",
              "requiredArguments": [
                {
                  "type": "tchmi:general#/definitions/Any",
                  "description": "The value to format."
                }
              ],
              "waitMode": "Synchronous"
            },
            "defaultValue": null,
            "defaultValueInternal": null
          },
          {
            "name": "ignoreEscapeSequences",
            "displayName": "Ignore Escape Sequences",
            "category": "General",
            "displayPriority": 10,
            "description": "When set to true a backslash in a text will be shown verbatim in the HMI",
            "defaultValue": false,
            "defaultValueInternal": false
          }
        ],
        "properties": {
          "cellBackground": {
            "$ref": "tchmi:framework#/definitions/Color"
          },
          "textColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "columnData": {
            "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiObjectBrowser.ColumnName"
          },
          "width": {
            "allOf": [
              {
                "$ref": "#/definitions/PositiveNumber"
              },
              {
                "$ref": "#/definitions/MeasurementValue"
              }
            ]
          },
          "widthUnit": {
            "$ref": "tchmi:framework#/definitions/MeasurementUnitOrFactor"
          },
          "resize": {
            "type": "boolean"
          },
          "minWidth": {
            "allOf": [
              {
                "$ref": "#/definitions/PositiveNumber"
              },
              {
                "$ref": "#/definitions/MeasurementValue"
              }
            ]
          },
          "minWidthUnit": {
            "$ref": "tchmi:framework#/definitions/MeasurementUnit"
          },
          "editable": {
            "type": "boolean"
          },
          "sortable": {
            "type": "boolean"
          },
          "horizontalAlignment": {
            "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
          },
          "verticalAlignment": {
            "$ref": "tchmi:framework#/definitions/VerticalAlignment"
          },
          "headerHorizontalAlignment": {
            "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
          },
          "headerVerticalAlignment": {
            "$ref": "tchmi:framework#/definitions/VerticalAlignment"
          },
          "format": {
            "$ref": "tchmi:framework#/definitions/Function"
          },
          "ignoreEscapeSequences": {
            "type": "boolean"
          }
        },
        "required": [
          "columnData",
          "width",
          "widthUnit",
          "resize",
          "minWidth",
          "minWidthUnit",
          "horizontalAlignment",
          "verticalAlignment"
        ]
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiTabNavigation": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiTabNavigation",
      "frameworkControlNamespace": "TcHmi.Controls.Beckhoff"
    },
    "TcHmiTabNavigation": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTabNavigation"
    },
    "TcHmi.Controls.Beckhoff.TcHmiTabNavigation.TabAlignment": {
      "type": "string",
      "enum": [
        "Top",
        "Right",
        "Bottom",
        "Left"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiTabNavigation.TabList": {
      "type": "array",
      "title": "Tabs",
      "description": "A list of tabs",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiTabNavigation.Tab"
      }
    },
    "TcHmi.Controls.Beckhoff.TcHmiTabNavigation.TargetFile": {
      "type": "object",
      "description": "An object ({ path: string; attributes?: Dictionary<any>; }) with a file path and an attributes dictionary for the target file host control (when path points to a *.usercontrol file).",
      "properties": {
        "path": {
          "anyOf": [
            {
              "$ref": "tchmi:framework#/definitions/UserControlPath"
            },
            {
              "$ref": "tchmi:framework#/definitions/ContentPath"
            }
          ]
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": [
              "object",
              "array",
              "string",
              "boolean",
              "integer",
              "number"
            ]
          }
        }
      },
      "required": [
        "path"
      ]
    },
    "TcHmi.Controls.Beckhoff.TcHmiTabNavigation.Tab": {
      "type": "object",
      "title": "Tab",
      "description": "A single tab",
      "engineeringColumns": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "targetFile": {
          "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiPopup.TargetFile"
        },
        "targetFileHostPreload": {
          "type": "boolean"
        },
        "targetFileHostPreAttach": {
          "type": "boolean"
        },
        "targetFileHostKeepAlive": {
          "type": "boolean"
        },
        "horizontalAlignment": {
          "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
        },
        "verticalAlignment": {
          "$ref": "tchmi:framework#/definitions/VerticalAlignment"
        },
        "icon": {
          "type": "object",
          "properties": {
            "iconPath": {
              "$ref": "tchmi:framework#/definitions/Path"
            },
            "iconWidth": {
              "$ref": "tchmi:framework#/definitions/MeasurementValue"
            },
            "iconWidthUnit": {
              "$ref": "tchmi:framework#/definitions/MeasurementUnit"
            },
            "iconHeight": {
              "$ref": "tchmi:framework#/definitions/MeasurementValue"
            },
            "iconHeightUnit": {
              "$ref": "tchmi:framework#/definitions/MeasurementUnit"
            }
          },
          "propertiesMeta": [
            {
              "name": "iconPath",
              "displayName": "Icon Path",
              "category": "General",
              "displayPriority": 10,
              "description": "The icon that will be displayed in the tab bar.",
              "defaultValue": null,
              "defaultValueInternal": null
            },
            {
              "name": "iconWidth",
              "displayName": "Icon Width",
              "category": "General",
              "displayPriority": 11,
              "description": "",
              "defaultValue": null,
              "defaultValueInternal": 32
            },
            {
              "name": "iconWidthUnit",
              "displayName": "Icon Width Unit",
              "category": "General",
              "displayPriority": 11,
              "description": "",
              "defaultValue": null,
              "defaultValueInternal": "px",
              "refTo": "iconWidth"
            },
            {
              "name": "iconHeight",
              "displayName": "Icon Height",
              "category": "General",
              "displayPriority": 12,
              "description": "",
              "defaultValue": null,
              "defaultValueInternal": 32
            },
            {
              "name": "iconHeightUnit",
              "displayName": "Icon Height Unit",
              "category": "General",
              "displayPriority": 12,
              "description": "",
              "defaultValue": null,
              "defaultValueInternal": "px",
              "refTo": "iconHeight"
            }
          ],
          "required": [
            "iconPath",
            "iconWidth",
            "iconWidthUnit",
            "iconHeight",
            "iconHeightUnit"
          ]
        }
      },
      "propertiesMeta": [
        {
          "name": "name",
          "displayName": "Name",
          "category": "General",
          "displayPriority": 10,
          "description": "Name of the Tab.",
          "defaultValue": "newTab",
          "defaultValueInternal": null
        },
        {
          "name": "displayName",
          "displayName": "Display Name",
          "category": "General",
          "displayPriority": 10,
          "description": "Name of the Tab that will be displayed in the tab bar.",
          "defaultValue": "New Tab",
          "defaultValueInternal": null
        },
        {
          "name": "targetFile",
          "displayName": "Target File",
          "category": "General",
          "displayPriority": 11,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "targetFileHostPreload",
          "displayName": "Target File Host Preload",
          "category": "General",
          "displayPriority": 13,
          "description": "Defines whether the target file host is preloaded when the tab navigation control is initialized or loaded when the tab is selected.",
          "defaultValue": null,
          "defaultValueInternal": false
        },
        {
          "name": "targetFileHostPreAttach",
          "displayName": "Target File Host Pre Attach",
          "category": "General",
          "displayPriority": 14,
          "description": "Defines whether the target file host is pre attached to the DOM even if the tab is not yet selected. Does only have an effect if TargetFileHostPreload is true.",
          "defaultValue": null,
          "defaultValueInternal": false
        },
        {
          "name": "targetFileHostKeepAlive",
          "displayName": "Target File Host Keep Alive",
          "category": "General",
          "displayPriority": 15,
          "description": "Defines whether the target file host is kept alive when the tab is unselected. Has no effect when TargetFileHostPreload is set to true.",
          "defaultValue": null,
          "defaultValueInternal": false
        },
        {
          "name": "horizontalAlignment",
          "displayName": "Horizontal alignment",
          "category": "General",
          "displayPriority": 20,
          "description": "Horizontal alignment of the text in the tab bar.",
          "defaultValue": "Left",
          "defaultValueInternal": "Left"
        },
        {
          "name": "verticalAlignment",
          "displayName": "Vertical alignment",
          "category": "General",
          "displayPriority": 21,
          "description": "Vertical alignment of the text in the tab bar.",
          "defaultValue": "Center",
          "defaultValueInternal": "Center"
        },
        {
          "name": "icon",
          "displayName": "Icon",
          "category": "General",
          "displayPriority": 30,
          "description": "The Icon displayed in the tab bar.",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "required": [
        "name"
      ]
    },
    "TcHmi.Controls.System.TcHmiControl": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiControl",
      "frameworkControlNamespace": "TcHmi.Controls.System"
    },
    "TcHmiControl": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiControl"
    },
    "TcHmi.Controls.System.TcHmiContainerControl": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiContainerControl",
      "frameworkControlNamespace": "TcHmi.Controls.System"
    },
    "TcHmiContainerControl": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiContainerControl"
    },
    "TcHmi.Controls.System.TcHmiPartial": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiPartial",
      "frameworkControlNamespace": "TcHmi.Controls.System"
    },
    "TcHmiPartial": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiPartial"
    },
    "TcHmi.Controls.System.TcHmiPopup": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiPopup",
      "frameworkControlNamespace": "TcHmi.Controls.System"
    },
    "TcHmiPopup": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiPopup"
    },
    "TcHmi.Controls.System.TcHmiPopup.TargetFile": {
      "type": "object",
      "properties": {
        "path": {
          "anyOf": [
            {
              "$ref": "tchmi:framework#/definitions/UserControlPath"
            },
            {
              "$ref": "tchmi:framework#/definitions/ContentPath"
            }
          ]
        },
        "attributes": {
          "type": "object",
          "description": "A dictionary for the attributes with the html attribute names as keys.",
          "additionalProperties": {
            "type": [
              "object",
              "array",
              "string",
              "boolean",
              "integer",
              "number"
            ]
          }
        }
      },
      "required": [
        "path"
      ]
    },
    "TcHmi.Controls.System.TcHmiContainer": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiContainer",
      "frameworkControlNamespace": "TcHmi.Controls.System"
    },
    "TcHmiContainer": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiContainer"
    },
    "TcHmi.Controls.System.TcHmiContent": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiContent",
      "frameworkControlNamespace": "TcHmi.Controls.System"
    },
    "TcHmiContent": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiContent"
    },
    "CellOptions": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiGrid.CellOptions"
    },
    "ColumnOptions": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiGrid.ColumnOptions"
    },
    "RowOptions": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiGrid.RowOptions"
    },
    "TcHmi.Controls.System.TcHmiGrid": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiGrid",
      "frameworkControlNamespace": "TcHmi.Controls.System"
    },
    "TcHmi.Controls.System.TcHmiGrid.CellOptions": {
      "title": "CellOptions",
      "description": "Definition of cell options in the grid.",
      "type": "array",
      "items": {
        "title": "Cell definition",
        "description": "Definition of a cell.",
        "type": "object",
        "engineeringColumns": [
          "columnIndex",
          "rowIndex"
        ],
        "propertiesMeta": [
          {
            "name": "columnIndex",
            "category": "Layout",
            "displayName": "ColumnIndex",
            "displayPriority": 10,
            "description": "Column index of the defined cell.",
            "defaultValueInternal": null
          },
          {
            "name": "rowIndex",
            "category": "Layout",
            "displayName": "RowIndex",
            "displayPriority": 10,
            "description": "Row index of the defined cell.",
            "defaultValueInternal": null
          },
          {
            "name": "padding",
            "category": "Layout",
            "displayPriority": 60,
            "displayName": "Padding",
            "description": "Inner padding of the cell. \nNote: Percentages always refer to the width of the cell, never its height (even for top and bottom).",
            "defaultValueInternal": null
          },
          {
            "name": "backgroundColor",
            "category": "Colors",
            "displayPriority": 10,
            "displayName": "BackgroundColor",
            "description": "Definition of the background color which is used if no or a transparent Background image is set.",
            "defaultValueInternal": null
          },
          {
            "name": "borderColor",
            "category": "Colors",
            "displayPriority": 10,
            "displayName": "BorderColor",
            "description": "Definition of the border color.",
            "defaultValueInternal": null
          },
          {
            "name": "borderWidth",
            "category": "Border",
            "displayPriority": 10,
            "displayName": "BorderWidth",
            "description": "Definition of the border width.",
            "defaultValueInternal": null
          },
          {
            "name": "borderStyle",
            "category": "Border",
            "displayPriority": 10,
            "displayName": "BorderStyle",
            "description": "Definition of the border style.",
            "defaultValueInternal": null
          },
          {
            "name": "backgroundImage",
            "category": "Background Image",
            "displayPriority": 10,
            "displayName": "BackgroundImage",
            "description": "Definition of the background image.",
            "defaultValueInternal": null
          },
          {
            "name": "backgroundImageWidth",
            "category": "Background Image",
            "displayPriority": 20,
            "displayName": "BackgroundImageWidth",
            "description": "Width of the background image.",
            "defaultValueInternal": null
          },
          {
            "name": "backgroundImageWidthUnit",
            "refTo": "backgroundImageWidth",
            "category": "Background Image",
            "displayPriority": 20,
            "displayName": "BackgroundImageWidthUnit",
            "description": "Width Unit of the background image.",
            "defaultValue": null,
            "defaultValueInternal": "px"
          },
          {
            "name": "backgroundImageHeight",
            "category": "Background Image",
            "displayPriority": 20,
            "displayName": "BackgroundImageHeight",
            "description": "Height of the background image.",
            "defaultValueInternal": null
          },
          {
            "name": "backgroundImageHeightUnit",
            "refTo": "backgroundImageHeight",
            "category": "Background Image",
            "displayPriority": 20,
            "displayName": "BackgroundImageHeightUnit",
            "description": "Height Unit of the background image.",
            "defaultValue": null,
            "defaultValueInternal": "px"
          },
          {
            "name": "backgroundImageHorizontalAlignment",
            "category": "Background Image",
            "displayPriority": 30,
            "displayName": "BackgroundImageHorizontalAligment",
            "description": "Horizontal Aligment of the background image.",
            "defaultValue": null,
            "defaultValueInternal": "Center"
          },
          {
            "name": "backgroundImageVerticalAlignment",
            "category": "Background Image",
            "displayPriority": 30,
            "displayName": "BackgroundImageVerticalAligment",
            "description": "Vertical Aligment of the background image.",
            "defaultValue": null,
            "defaultValueInternal": "Center"
          },
          {
            "name": "backgroundImagePadding",
            "category": "Background Image",
            "displayPriority": 60,
            "displayName": "BackgroundImagePadding",
            "description": "Padding of the background image.",
            "defaultValueInternal": null
          }
        ],
        "properties": {
          "columnIndex": {
            "type": "integer",
            "minimum": 0,
            "title": "ColumnIndex",
            "description": "Column index of the defined cell.",
            "default": null,
            "category": "Layout",
            "displayPriority": 10
          },
          "rowIndex": {
            "type": "integer",
            "minimum": 0,
            "title": "RowIndex",
            "description": "Row index of the defined cell.",
            "default": null,
            "category": "Layout",
            "displayPriority": 10
          },
          "padding": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/Padding"
              },
              {
                "title": "Padding",
                "description": "Inner padding of the cell. \nNote: Percentages always refer to the width of the cell, never its height (even for top and bottom).",
                "default": null,
                "category": "Layout",
                "displayPriority": 60
              }
            ]
          },
          "backgroundColor": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/SolidColor"
              },
              {
                "title": "BackgroundColor",
                "description": "Definition of the background color which is used if no or a transparent Background image is set.",
                "default": null,
                "category": "Colors",
                "displayPriority": 10
              }
            ]
          },
          "borderColor": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/SolidColor"
              },
              {
                "title": "BorderColor",
                "description": "Definition of the border color.",
                "default": null,
                "category": "Colors",
                "displayPriority": 10
              }
            ]
          },
          "borderWidth": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/BorderWidth"
              },
              {
                "title": "BorderWidth",
                "description": "Definition of the border width.",
                "default": null,
                "category": "Border",
                "displayPriority": 10
              }
            ]
          },
          "borderStyle": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/BorderStyle"
              },
              {
                "title": "BorderStyle",
                "description": "Definition of the border style.",
                "default": null,
                "category": "Border",
                "displayPriority": 10
              }
            ]
          },
          "backgroundImage": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/Path"
              },
              {
                "title": "BackgroundImage",
                "description": "Definition of the background image.",
                "default": "",
                "category": "Background Image",
                "displayPriority": 10
              }
            ]
          },
          "backgroundImageWidth": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              {
                "title": "BackgroundImageWidth",
                "description": "Width of the background image.",
                "default": null,
                "category": "Background Image",
                "displayPriority": 20
              }
            ]
          },
          "backgroundImageWidthUnit": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              {
                "title": "BackgroundImageWidthUnit",
                "description": "Width Unit of the background image.",
                "default": "px",
                "refTo": "backgroundImageWidth",
                "category": "Background Image",
                "displayPriority": 20
              }
            ]
          },
          "backgroundImageHeight": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              {
                "title": "BackgroundImageHeight",
                "description": "Height of the background image.",
                "default": null,
                "category": "Background Image",
                "displayPriority": 20
              }
            ]
          },
          "backgroundImageHeightUnit": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              {
                "title": "BackgroundImageHeightUnit",
                "description": "Height Unit of the background image.",
                "default": "px",
                "refTo": "backgroundImageHeight",
                "category": "Background Image",
                "displayPriority": 20
              }
            ]
          },
          "backgroundImageHorizontalAlignment": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
              },
              {
                "title": "BackgroundImageHorizontalAligment",
                "description": "Horizontal Aligment of the background image.",
                "default": "Center",
                "category": "Background Image",
                "displayPriority": 30
              }
            ]
          },
          "backgroundImageVerticalAlignment": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/VerticalAlignment"
              },
              {
                "title": "BackgroundImageVerticalAligment",
                "description": "Vertical Aligment of the background image.",
                "default": "Center",
                "category": "Background Image",
                "displayPriority": 30
              }
            ]
          },
          "backgroundImagePadding": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/Padding"
              },
              {
                "title": "BackgroundImagePadding",
                "description": "Padding of the background image.",
                "default": null,
                "category": "Background Image",
                "displayPriority": 60
              }
            ]
          }
        }
      }
    },
    "TcHmi.Controls.System.TcHmiGrid.ColumnOptions": {
      "title": "ColumnOptions",
      "type": "array",
      "items": {
        "type": "object",
        "title": "Column definition",
        "description": "Defines one column.",
        "engineeringColumns": [
          "width",
          "widthUnit",
          "widthMode"
        ],
        "propertiesMeta": [
          {
            "name": "width",
            "category": "Layout",
            "displayName": "Width",
            "displayPriority": 10,
            "description": "Defines width of the column in the grid. Can be a pixel value (42px), percent value (42%) or a grow factor (1).\nThe grow factor determines how much the items will grow relative to the rest of the items when positive free space is distributed.",
            "defaultValue": null,
            "defaultValueInternal": 1
          },
          {
            "name": "widthUnit",
            "refTo": "width",
            "category": "Layout",
            "displayName": "WidthUnit",
            "displayPriority": 10,
            "description": "Defines if the number defines a pixel value (px), percent value (42%) or grow factor (2).",
            "defaultValue": null,
            "defaultValueInternal": "factor"
          },
          {
            "name": "widthMode",
            "category": "Layout",
            "displayName": "WidthMode",
            "displayPriority": 30,
            "description": "Defines if the width is taken from the width value or calculated from child controls in this Column.",
            "defaultValue": null,
            "defaultValueInternal": "Value"
          },
          {
            "name": "maxWidth",
            "category": "Layout",
            "displayName": "MaxWidth",
            "displayPriority": 60,
            "description": "Defines maximal width of the column in the grid. Can be a pixel value (42px), percent value (42%).\nmax-width overrides width, but min-width overrides max-width.",
            "defaultValueInternal": null
          },
          {
            "name": "maxWidthUnit",
            "refTo": "maxWidth",
            "category": "Layout",
            "displayName": "MaxWidthUnit",
            "displayPriority": 60,
            "description": "",
            "defaultValueInternal": "px"
          },
          {
            "name": "minWidth",
            "category": "Layout",
            "displayName": "MinWidth",
            "displayPriority": 61,
            "description": "Defines minimal width of the column in the grid. Can be a pixel value (42px), percent value (42%).\nmax-width overrides width, but min-width overrides max-width.",
            "defaultValueInternal": null
          },
          {
            "name": "minWidthUnit",
            "refTo": "minWidth",
            "category": "Layout",
            "displayName": "MinWidthUnit",
            "displayPriority": 61,
            "description": "",
            "defaultValueInternal": "px"
          },
          {
            "name": "overflow",
            "category": "Layout",
            "displayName": "Overflow",
            "displayPriority": 65,
            "description": "Defines if a control should be fully visible if it is outside of this column.",
            "defaultValue": null,
            "defaultValueInternal": false
          }
        ],
        "properties": {
          "width": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              {
                "title": "Width",
                "description": "Defines width of the column in the grid. Can be a pixel value (42px), percent value (42%) or a grow factor (1).\nThe grow factor determines how much the items will grow relative to the rest of the items when positive free space is distributed.",
                "default": 1,
                "category": "Layout",
                "displayPriority": 10
              }
            ]
          },
          "widthUnit": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiGrid.MeasurementUnitOrFactor"
              },
              {
                "title": "WidthUnit",
                "description": "Defines if the number defines a pixel value (px), percent value (42%) or grow factor (2).",
                "default": "factor",
                "refTo": "width",
                "category": "Layout",
                "displayPriority": 10
              }
            ]
          },
          "widthMode": {
            "allOf": [
              {
                "type": "string",
                "enum": [
                  "Value",
                  "Content"
                ]
              },
              {
                "title": "WidthMode",
                "description": "Defines if the width is taken from the width value or calculated from child controls in this Column.",
                "default": "Value",
                "category": "Layout",
                "displayPriority": 30
              }
            ]
          },
          "maxWidth": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              {
                "title": "MaxWidth",
                "description": "Defines maximal width of the column in the grid. Can be a pixel value (42px), percent value (42%).\nmax-width overrides width, but min-width overrides max-width.",
                "default": null,
                "displayPriority": 60,
                "category": "Layout"
              }
            ]
          },
          "maxWidthUnit": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              {
                "title": "MaxWidthUnit",
                "description": "",
                "default": "px",
                "category": "Layout",
                "displayPriority": 60,
                "refTo": "maxWidth"
              }
            ]
          },
          "minWidth": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              {
                "title": "MinWidth",
                "description": "Defines minimal width of the column in the grid. Can be a pixel value (42px), percent value (42%).\nmax-width overrides width, but min-width overrides max-width.",
                "default": null,
                "category": "Layout",
                "displayPriority": 61
              }
            ]
          },
          "minWidthUnit": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              {
                "title": "MinWidthUnit",
                "description": "",
                "default": "px",
                "refTo": "minWidth",
                "category": "Layout",
                "displayPriority": 61
              }
            ]
          },
          "overflow": {
            "allOf": [
              {
                "$ref": "tchmi:general#/definitions/Boolean"
              },
              {
                "title": "Overflow",
                "description": "Defines if a control should be fully visible if it is outside of this column.",
                "default": false,
                "category": "Layout",
                "displayPriority": 65
              }
            ]
          }
        }
      }
    },
    "TcHmi.Controls.System.TcHmiGrid.MeasurementUnitOrFactor": {
      "description": "Defines if the number defines a pixel value (px), percent value (42%) or grow factor (2).\nThe grow factor determines how much the items will grow relative to the rest of the items when positive free space is distributed.",
      "type": "string",
      "enum": [
        "factor",
        "px",
        "%"
      ],
      "default": "factor"
    },
    "TcHmi.Controls.System.TcHmiGrid.RowOptions": {
      "title": "RowOptions",
      "type": "array",
      "items": {
        "type": "object",
        "title": "Row definition",
        "description": "Defines one row.",
        "engineeringColumns": [
          "height",
          "heightUnit",
          "heightMode"
        ],
        "propertiesMeta": [
          {
            "name": "height",
            "category": "Layout",
            "displayName": "Height",
            "displayPriority": 10,
            "description": "Defines height of the cells of this row in the grid. Can be a pixel value (42px), percent value (42%) or a grow factor (1).\nThe grow factor determines how much the items will grow relative to the rest of the items when positive free space is distributed.",
            "defaultValue": null,
            "defaultValueInternal": 1
          },
          {
            "name": "heightUnit",
            "refTo": "height",
            "category": "Layout",
            "displayName": "HeightUnit",
            "displayPriority": 10,
            "description": "Defines if the number defines a pixel value (px), percent value (42%) or grow factor (2).",
            "defaultValue": null,
            "defaultValueInternal": "factor"
          },
          {
            "name": "heightMode",
            "category": "Layout",
            "displayName": "HeightMode",
            "displayPriority": 30,
            "description": "Defines if the height is taken from the height value or calculated from child controls in row.",
            "defaultValue": null,
            "defaultValueInternal": "Value"
          },
          {
            "name": "maxHeight",
            "category": "Layout",
            "displayName": "MaxHeight",
            "displayPriority": 60,
            "description": "Defines maximal height of the row in the grid. Can be a pixel value (42px), percent value (42%).\nmax-height overrides height, but min-height overrides max-height.",
            "defaultValueInternal": null
          },
          {
            "name": "maxHeightUnit",
            "refTo": "maxHeight",
            "category": "Layout",
            "displayName": "MaxHeightUnit",
            "displayPriority": 60,
            "description": "",
            "defaultValueInternal": "px"
          },
          {
            "name": "minHeight",
            "category": "Layout",
            "displayName": "MinHeight",
            "displayPriority": 61,
            "description": "Defines minimal height of the row in the grid. Can be a pixel value (42px), percent value (42%).\nmax-height overrides height, but min-height overrides max-height.",
            "defaultValueInternal": null
          },
          {
            "name": "minHeightUnit",
            "refTo": "minHeight",
            "category": "Layout",
            "displayName": "MinHeightUnit",
            "displayPriority": 61,
            "description": "",
            "defaultValueInternal": "px"
          },
          {
            "name": "overflow",
            "category": "Layout",
            "displayName": "Overflow",
            "displayPriority": 65,
            "description": "Defines if a control should be fully visible if it is outside of this row.",
            "defaultValue": null,
            "defaultValueInternal": false
          }
        ],
        "properties": {
          "height": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              {
                "title": "Height",
                "description": "Defines height of the cells of this row in the grid. Can be a pixel value (42px), percent value (42%) or a grow factor (1).\nThe grow factor determines how much the items will grow relative to the rest of the items when positive free space is distributed.",
                "default": 1,
                "category": "Layout",
                "displayPriority": 10
              }
            ]
          },
          "heightUnit": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiGrid.MeasurementUnitOrFactor"
              },
              {
                "title": "HeightUnit",
                "description": "Defines if the number defines a pixel value (px), percent value (42%) or grow factor (2).",
                "default": "factor",
                "refTo": "height",
                "category": "Layout",
                "displayPriority": 10
              }
            ]
          },
          "heightMode": {
            "allOf": [
              {
                "type": "string",
                "enum": [
                  "Value",
                  "Content"
                ]
              },
              {
                "title": "HeightMode",
                "description": "Defines if the height is taken from the height value or calculated from child controls in row.",
                "default": "Value",
                "category": "Layout",
                "displayPriority": 30
              }
            ]
          },
          "maxHeight": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              {
                "title": "MaxHeight",
                "description": "Defines maximal height of the row in the grid. Can be a pixel value (42px), percent value (42%).\nmax-height overrides height, but min-height overrides max-height.",
                "default": null,
                "refTo": "maxHeight",
                "category": "Layout",
                "displayPriority": 60
              }
            ]
          },
          "maxHeightUnit": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              {
                "title": "MaxHeightUnit",
                "description": "",
                "default": "px",
                "category": "Layout",
                "displayPriority": 60
              }
            ]
          },
          "minHeight": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/MeasurementValue"
              },
              {
                "title": "MinHeight",
                "description": "Defines minimal height of the row in the grid. Can be a pixel value (42px), percent value (42%).\nmax-height overrides height, but min-height overrides max-height.",
                "default": null,
                "category": "Layout",
                "displayPriority": 61
              }
            ]
          },
          "minHeightUnit": {
            "allOf": [
              {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              {
                "title": "MinHeightUnit",
                "description": "",
                "default": "px",
                "refTo": "minHeight",
                "category": "Layout",
                "displayPriority": 61
              }
            ]
          },
          "overflow": {
            "allOf": [
              {
                "$ref": "tchmi:general#/definitions/Boolean"
              },
              {
                "title": "Overflow",
                "description": "Defines if a control should be fully visible if it is outside of this row.",
                "default": false,
                "category": "Layout",
                "displayPriority": 65
              }
            ]
          }
        }
      }
    },
    "TcHmiGrid": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiGrid"
    },
    "TcHmi.Controls.System.TcHmiHtmlHost": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiHtmlHost",
      "frameworkControlNamespace": "TcHmi.Controls.System"
    },
    "TcHmiHtmlHost": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiHtmlHost"
    },
    "TcHmi.Controls.System.TcHmiUserControl": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiUserControl",
      "frameworkControlNamespace": "TcHmi.Controls.System"
    },
    "TcHmiUserControl": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiUserControl"
    },
    "TcHmi.Controls.System.TcHmiView": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiView",
      "frameworkControlNamespace": "TcHmi.Controls.System"
    },
    "TcHmiView": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiView"
    },
    "TcHmi.Controls.System.TcHmiRegion": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiRegion",
      "frameworkControlNamespace": "TcHmi.Controls.System"
    },
    "TcHmiRegion": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiRegion"
    },
    "TcHmi.Controls.System.TcHmiUserControlHost": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "frameworkInstanceOf": "TcHmi.Controls.System.TcHmiControl",
      "frameworkControlType": "TcHmiUserControlHost",
      "frameworkControlNamespace": "TcHmi.Controls.System"
    },
    "TcHmiUserControlHost": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiUserControlHost"
    },
    "TcHmi.Functions.BaseTemplate.MediaQueryList": {
      "id": "tchmi:framework#/definitions/TcHmi.Functions.BaseTemplate.MediaQueryList",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Functions.BaseTemplate.MediaQuery"
      }
    },
    "TcHmi.Functions.BaseTemplate.MediaQuery": {
      "properties": {
        "name": {
          "type": "string"
        },
        "maxWidth": {
          "type": "number"
        },
        "minWidth": {
          "type": "number"
        },
        "controlBehaviourList": {
          "$ref": "tchmi:framework#/definitions/TcHmi.Functions.BaseTemplate.ControlBehaviourList"
        }
      },
      "required": [
        "name",
        "minWidth",
        "maxWidth"
      ],
      "propertiesMeta": [
        {
          "name": "name",
          "displayName": "Name",
          "category": "General",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "maxWidth",
          "displayName": "MaxWidth",
          "category": "General",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "minWidth",
          "displayName": "Min Width",
          "category": "General",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "controlBehaviourList",
          "displayName": "Control Behaviour List",
          "category": "General",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "engineeringColumns": [
        "minWidth",
        "maxWidth",
        "name"
      ],
      "title": "MediaQuery",
      "type": "object",
      "id": "tchmi:framework#/definitions/TcHmi.Functions.BaseTemplate.MediaQuery"
    },
    "TcHmi.Functions.BaseTemplate.ControlBehaviourList": {
      "id": "tchmi:framework#/definitions/TcHmi.Functions.BaseTemplate.ControlBehaviourList",
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "definitions": {
        "ControlBehaviour": {
          "title": "ControlBehaviour",
          "type": "object",
          "engineeringColumns": [
            "controlType",
            "controlID",
            "displayOption"
          ],
          "properties": {
            "controlType": {
              "enum": [
                "TcHmi.Controls.BaseTemplate.TcHmiNavigation",
                "TcHmi.Controls.System.TcHmiContainer"
              ],
              "type": "string"
            },
            "controlID": {
              "type": "string"
            },
            "displayOption": {
              "enum": [
                "full",
                "icons",
                "burger_top",
                "burger_bottom"
              ],
              "type": "string"
            }
          },
          "propertiesMeta": [
            {
              "name": "controlType",
              "displayName": "Control Type",
              "category": "General",
              "displayPriority": 10,
              "description": "",
              "defaultValue": null,
              "defaultValueInternal": null
            },
            {
              "name": "controlID",
              "displayName": "ControlID",
              "category": "General",
              "displayPriority": 10,
              "description": "",
              "defaultValue": null,
              "defaultValueInternal": null
            },
            {
              "name": "displayOption",
              "displayName": "Display Option",
              "category": "General",
              "displayPriority": 10,
              "description": "",
              "defaultValue": null,
              "defaultValueInternal": null
            }
          ]
        }
      },
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Functions.BaseTemplate.ControlBehaviourList/definitions/ControlBehaviour"
      }
    },
    "TcHmi.Functions.BaseTemplate.AffectedControl": {
      "properties": {
        "controlID": {
          "type": "string"
        },
        "position": {
          "enum": [
            "Top",
            "Bottom",
            "Left",
            "Right",
            "Center"
          ],
          "type": "string"
        },
        "defaultHeight": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ]
        },
        "defaultWidth": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ]
        },
        "defaultTop": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ]
        },
        "defaultBottom": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ]
        },
        "defaultLeft": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ]
        },
        "defaultRight": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "propertiesMeta": [
        {
          "name": "controlID",
          "displayName": "Control ID",
          "category": "General",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": ""
        },
        {
          "name": "position",
          "displayName": "Position",
          "category": "General",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": "Center"
        },
        {
          "name": "defaultHeight",
          "displayName": "Default Height",
          "category": "Default Control Sizes",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "defaultWidth",
          "displayName": "Default Width",
          "category": "Default Control Sizes",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "defaultTop",
          "displayName": "Default Top",
          "category": "Default Control Sizes",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "defaultBottom",
          "displayName": "Default Bottom",
          "category": "Default Control Sizes",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "defaultLeft",
          "displayName": "Default Left",
          "category": "Default Control Sizes",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "defaultRight",
          "displayName": "Default Right",
          "category": "Default Control Sizes",
          "displayPriority": 10,
          "description": "",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "type": "object",
      "id": "tchmi:framework#/definitions/TcHmi.Functions.BaseTemplate.AffectedControl"
    },
    "TcHmi.Functions.BaseTemplate.AffectedControlList": {
      "items": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Functions.BaseTemplate.AffectedControl"
      },
      "type": "array",
      "id": "tchmi:framework#/definitions/TcHmi.Functions.BaseTemplate.AffectedControlList"
    },
    "TcHmi.Functions.Beckhoff.Increment.IncrementValueSymbol": {
      "allOf": [
        {
          "$ref": "tchmi:framework#/definitions/Symbol"
        },
        {
          "frameworkSymbolSubType": {
            "$ref": "tchmi:general#/definitions/Number"
          }
        }
      ]
    },
    "IncrementValueSymbol": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Functions.Beckhoff.Increment.IncrementValueSymbol"
    },
    "TcHmi.Functions.Beckhoff.Decrement.DecrementValueSymbol": {
      "allOf": [
        {
          "$ref": "tchmi:framework#/definitions/Symbol"
        },
        {
          "frameworkSymbolSubType": {
            "$ref": "tchmi:general#/definitions/Number"
          }
        }
      ]
    },
    "DecrementValueSymbol": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Functions.Beckhoff.Decrement.DecrementValueSymbol"
    },
    "TcHmi.Functions.Beckhoff.Log.Level": {
      "type": "string",
      "enum": [
        "Error",
        "Warning",
        "Info",
        "Debug"
      ]
    }
  },
  "TcHmiBreadcrumb": {
    "$ref": "tchmi:framework#/definitions/TcHmi.Controls.BaseTemplate.TcHmiBreadcrumb"
  },
  "TcHmi.Controls.BaseTemplate.TcHmiBreadcrumb.ListItem": {
    "title": "List Item",
    "description": "Navigation Item",
    "type": "object",
    "engineeringColumns": [
      "name",
      "content"
    ],
    "propertiesMeta": [
      {
        "name": "name",
        "displayName": "Name",
        "category": "General",
        "displayPriority": 10,
        "description": "Name of the Page. Will be displayed on the navigation button.",
        "defaultValue": null,
        "defaultValueInternal": null
      },
      {
        "name": "content",
        "displayName": "Content",
        "category": "General",
        "displayPriority": 10,
        "description": "Path to the .content file the button click will switch to.  ",
        "defaultValue": null,
        "defaultValueInternal": null
      },
      {
        "name": "icon_a",
        "displayName": "Icon Active",
        "category": "Icon",
        "displayPriority": 10,
        "description": "[Optional] Select an image for the Icon in active state. For themeable Icons place the icon in every theme folder with the exact same structure and declare the path to the icon in 'Base' Theme here ",
        "defaultValue": null,
        "defaultValueInternal": null
      },
      {
        "name": "icon_n",
        "displayName": "Icon Normal",
        "category": "Icon",
        "displayPriority": 10,
        "description": "[Optional] Select an image for the Icon in normal state. For themeable Icons place the icon in every theme folder with the exact same structure and declare the path to the icon in 'Base' Theme here ",
        "defaultValue": null,
        "defaultValueInternal": null
      },
      {
        "name": "icon_p",
        "displayName": "Icon Pressed",
        "category": "Icon",
        "displayPriority": 10,
        "description": "[Optional] Select an image for the Icon in pressed state. For themeable Icons place the icon in every theme folder with the exact same structure and declare the path to the icon in 'Base' Theme here ",
        "defaultValue": null,
        "defaultValueInternal": null
      },
      {
        "name": "subItem",
        "displayName": "Sub Item",
        "category": "General",
        "displayPriority": 10,
        "description": "[Optional] Create sub Item for this Item. Sub item will be displayed in the context menu when this Content is selected.",
        "defaultValue": null,
        "defaultValueInternal": null
      },
      {
        "name": "accessRights",
        "displayName": "Access Right",
        "category": "General",
        "displayPriority": 10,
        "description": "[Optional] Array of user groups which have access to this content.",
        "defaultValue": null,
        "defaultValueInternal": [
          {
            "accessright": "observe",
            "group": "__SystemUsers",
            "permission": "Allow"
          },
          {
            "accessright": "operate",
            "group": "__SystemUsers",
            "permission": "Allow"
          }
        ]
      }
    ],
    "properties": {
      "name": {
        "type": "string"
      },
      "content": {
        "$ref": "tchmi:framework#/definitions/Path"
      },
      "icon_a": {
        "$ref": "tchmi:framework#/definitions/Path"
      },
      "icon_n": {
        "$ref": "tchmi:framework#/definitions/Path"
      },
      "icon_p": {
        "$ref": "tchmi:framework#/definitions/Path"
      },
      "subItem": {
        "$ref": "tchmi:framework#/definitions/TcHmi.Controls.BaseTemplate.TcHmiBreadcrumb.ListItemList"
      },
      "accessRights": {
        "$ref": "tchmi:framework#/definitions/AccessConfig"
      }
    },
    "required": [
      "name",
      "content"
    ]
  },
  "TcHmi.Controls.BaseTemplate.TcHmiBreadcrumb.ListItemList": {
    "title": "ListItemList",
    "description": "List Navigation Items",
    "type": "array",
    "items": {
      "$ref": "tchmi:framework#/definitions/TcHmi.Controls.BaseTemplate.TcHmiBreadcrumb.ListItem"
    }
  }
}