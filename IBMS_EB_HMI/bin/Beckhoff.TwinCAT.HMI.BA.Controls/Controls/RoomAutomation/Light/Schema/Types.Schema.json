{
  "$schema": "http://json-schema.org/draft-04/schema",
  "definitions": {
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Light": {
      "type": "object",
      "frameworkInstanceOf": "TcHmi.BuildingAutomation.Controls.System.BaseRoomControl",
      "frameworkControlType": "Light",
      "frameworkControlNamespace": "TcHmi.BuildingAutomation.Controls.RoomAutomation"
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Light.DisplayMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        0,
        1,
        2
      ],
      "options": [
        {
          "label": "lightBulb",
          "value": 0
        },
        {
          "label": "lightBulbFilled",
          "value": 1
        },
        {
          "label": "filled",
          "value": 2
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Light.Priority": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "integer",
      "enum": [
        1,
        2,
        3,
        4,
        8,
        9,
        12,
        13,
        14,
        18,
        19,
        20
      ],
      "options": [
        {
          "label": "fire",
          "value": 1
        },
        {
          "label": "communicationError",
          "value": 2
        },
        {
          "label": "burglary",
          "value": 3
        },
        {
          "label": "maintenance",
          "value": 4
        },
        {
          "label": "cleaning",
          "value": 8
        },
        {
          "label": "nightWatch",
          "value": 9
        },
        {
          "label": "simple",
          "value": 12
        },
        {
          "label": "manual",
          "value": 13
        },
        {
          "label": "automaticLight",
          "value": 14
        },
        {
          "label": "scene1",
          "value": 18
        },
        {
          "label": "scene2",
          "value": 19
        },
        {
          "label": "scene3",
          "value": 20
        }
      ]
    },
    "TcHmi.BuildingAutomation.Controls.RoomAutomation.Light.BaInterfaceSymbolNames": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "BaInterfaceSymbolNames",
      "type": "object",
      "propertiesMeta": [
        {
          "name": "name",
          "displayName": "Name",
          "description": "Name of the light. (Default: sName, DataType: string)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "error",
          "displayName": "Error",
          "description": "Defines if an error has occured or not. The error will be displayed. (Default: bErr_Out, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "priority",
          "displayName": "Priority",
          "description": "Priority of the light. (Default: eActualPrio_Out, DataType: integer)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "fdbLightOn",
          "displayName": "Feedback light on",
          "description": "Feedback if the light is on or off. (Default: bLightOn_Out, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "resetManual",
          "displayName": "Reset Manual",
          "description": "Symbol to reset the light into automatic mode. (Default: bSetCtrlMod_In, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "cmdBrightness",
          "displayName": "Command Brightness",
          "description": "The command for the brightness. (Default: fSetLightValueMan_In, DataType: number | boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "setCmdBrightness",
          "displayName": "Set Command Brightness",
          "description": "The command to set the brightness value. (Default: bSetLightValueMan_In, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "fdbBrightness",
          "displayName": "Feedback Brightness",
          "description": "The feedback for the brightness. (Default: fLightValue_Out, DataType: number | boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "cmdTemperature",
          "displayName": "Command Temperature",
          "description": "The command for the light temperature. (Default: fSetLightTemperatureMan_In, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "setCmdTemperature",
          "displayName": "Set Command Temperature",
          "description": "The command to set the temperature value. (Default: bSetLightTemperatureMan_In, DataType: boolean)",
          "defaultValue": null,
          "defaultValueInternal": null
        },
        {
          "name": "fdbTemperature",
          "displayName": "Feedback Temperature",
          "description": "The feedback for the light temperature. (Default: fLightTemperature_Out, DataType: number)",
          "defaultValue": null,
          "defaultValueInternal": null
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "resetManual": {
          "type": "string"
        },
        "fdbLightOn": {
          "type": "string"
        },
        "cmdBrightness": {
          "type": "string"
        },
        "setCmdBrightness": {
          "type": "string"
        },
        "fdbBrightness": {
          "type": "string"
        },
        "cmdTemperature": {
          "type": "string"
        },
        "setCmdTemperature": {
          "type": "string"
        },
        "fdbTemperature": {
          "type": "string"
        }
      }
    }
  }
}
