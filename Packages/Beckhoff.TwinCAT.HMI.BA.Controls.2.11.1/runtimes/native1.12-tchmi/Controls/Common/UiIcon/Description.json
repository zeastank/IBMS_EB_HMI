{"$schema": "../.hmiframework/Schema/ControlDescription.Schema.json", "apiVersion": 1, "name": "UiIcon", "namespace": "TcHmi.BuildingAutomation.Controls.Common", "displayName": "UiIcon", "version": {"full": "1.2.11.1", "major": 1, "minor": 2, "revision": 11, "build": 1}, "visible": true, "themeable": "Standard", "base": "TcHmi.BuildingAutomation.Controls.Common.Button", "description": "Display events and values in the form of a button that can use different icons.", "properties": {"containerControl": false, "geometry": {"width": 50, "height": 50}}, "icons": [{"name": "Icons/16x16.png", "width": 16, "height": 16}], "dependencyFiles": [{"name": "UiIcon.js", "type": "JavaScript", "description": ""}], "attributes": [{"name": "data-tchmi-ba-object", "displayName": "BaObject", "propertyName": "BaObject", "propertySetterName": "setBaObject", "propertyGetterName": "getBaObject", "visible": true, "themeable": "None", "type": "tchmi:framework#/definitions/Symbol", "category": "BA", "description": "BA object of the control.", "requiredOnCompile": false, "readOnly": false, "bindable": true, "heritable": true, "defaultValue": null, "defaultValueInternal": null}, {"name": "data-tchmi-displays-data", "displayName": "DisplaysData", "propertyName": "DisplaysData", "propertySetterName": "__setDisplaysDataDesigner", "propertyGetterName": "__getDisplaysDataDesigner", "visible": true, "themeable": "None", "type": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Common.UiIcon.DisplaysData", "category": "Common", "description": "Describe the data for different displays on the UiIcon control.", "requiredOnCompile": false, "readOnly": false, "bindable": true, "heritable": true, "allowSymbolExpressionsInObject": true, "defaultValue": null, "defaultValueInternal": null}, {"name": "data-tchmi-displayed-digits", "displayName": "DisplayedDigits", "propertyName": "DisplayedDigits", "propertySetterName": "setDisplayedDigits", "propertyGetterName": "getDisplayedDigits", "visible": true, "themeable": "Standard", "type": "tchmi:general#/definitions/Number", "category": "Common", "description": "Number of displayed digits when a display contains a number.", "requiredOnCompile": false, "readOnly": false, "bindable": true, "heritable": true, "defaultValue": null, "defaultValueInternal": null}, {"name": "data-tchmi-is-active", "displayName": "IsActive", "propertyName": "IsActive", "propertySetterName": "setIsActive", "propertyGetterName": "getIsActive", "visible": true, "themeable": "None", "type": "tchmi:general#/definitions/Boolean", "category": "Common", "displayPriority": 51, "description": "[DEPRECATED - Use 'IconStatus'] If a BaIcon is used and the attribute is true, the icon will be colored in the active color. If false the icon color will have the default color.", "requiredOnCompile": false, "readOnly": false, "bindable": true, "heritable": true, "defaultValue": null, "defaultValueInternal": null}, {"name": "data-tchmi-has-event", "displayName": "HasEvent", "propertyName": "HasEvent", "propertySetterName": "setHasEvent", "propertyGetterName": "getHasEvent", "visible": true, "themeable": "None", "type": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.EventType", "category": "Common", "displayPriority": 52, "description": "[DEPRECATED - Use 'IconStatus'] If a BaIcon is used and the attribute is not Invalid, the icon will be colored in the defined event color. If Invalid the icon color will have the default color.", "requiredOnCompile": false, "readOnly": false, "bindable": true, "heritable": true, "defaultValue": null, "defaultValueInternal": null}, {"name": "data-tchmi-icon-status", "displayName": "IconStatus", "propertyName": "IconStatus", "propertySetterName": "setIconStatus", "propertyGetterName": "getIconStatus", "visible": true, "themeable": "None", "type": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Common.UiIcon.Status", "category": "Common", "description": "If a BaIcon is used and the attribute is not Invalid, the icon will be colored in the defined status color. If Invalid the icon color will have the default color.", "requiredOnCompile": false, "readOnly": false, "bindable": true, "heritable": true, "defaultValue": null, "defaultValueInternal": null}, {"name": "data-tchmi-border-status", "displayName": "BorderStatus", "propertyName": "BorderStatus", "propertySetterName": "setBorderStatus", "propertyGetterName": "getBorderStatus", "visible": true, "themeable": "None", "type": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Common.UiIcon.Status", "category": "Common", "description": "The border will be colored in the defined status color. If Invalid the border color will have the default color.", "requiredOnCompile": false, "readOnly": false, "bindable": true, "heritable": true, "defaultValue": null, "defaultValueInternal": null}, {"name": "data-tchmi-events-data", "displayName": "EventsData", "propertyName": "EventsData", "propertySetterName": "__setEventsDataDesigner", "propertyGetterName": "__getEventsDataDesigner", "visible": true, "themeable": "None", "type": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Common.UiIcon.EventsData", "category": "Common", "displayPriority": 53, "description": "Set the different events that can be displayed.", "requiredOnCompile": false, "readOnly": false, "bindable": true, "heritable": true, "allowSymbolExpressionsInObject": true, "defaultValue": null, "defaultValueInternal": null}, {"name": "data-tchmi-show-displays", "displayName": "ShowDisplays", "propertyName": "ShowDisplays", "propertySetterName": "setShowDisplays", "propertyGetterName": "getShowDisplays", "visible": true, "themeable": "None", "type": "tchmi:general#/definitions/Boolean", "category": "Common", "displayPriority": 54, "description": "Define if displays are visible or not.", "requiredOnCompile": false, "readOnly": false, "bindable": true, "heritable": true, "defaultValue": null, "defaultValueInternal": true}, {"name": "data-tchmi-connections", "displayName": "Connections", "propertyName": "Connections", "propertySetterName": "setConnections", "propertyGetterName": "getConnections", "visible": true, "themeable": "None", "type": "tchmi:framework#/definitions/Padding", "category": "Connections", "description": "Set connections that are placed to the UiIcon.", "requiredOnCompile": false, "readOnly": false, "bindable": true, "heritable": true, "allowSymbolExpressionsInObject": true, "defaultValue": null, "defaultValueInternal": null}, {"name": "data-tchmi-connection-extensions", "displayName": "ConnectionExtensions", "propertyName": "ConnectionExtensions", "propertySetterName": "setConnectionExtensions", "propertyGetterName": "getConnectionExtensions", "visible": true, "themeable": "None", "type": "tchmi:framework#/definitions/Padding", "category": "Connections", "description": "Set connection extensions for available connections.", "requiredOnCompile": false, "readOnly": false, "bindable": true, "heritable": true, "allowSymbolExpressionsInObject": true, "defaultValue": null, "defaultValueInternal": null}, {"name": "data-tchmi-connections-width", "displayName": "ConnectionsWidth", "propertyName": "ConnectionsWidth", "propertySetterName": "setConnectionsWidth", "propertyGetterName": "getConnectionsWidth", "visible": true, "themeable": "Advanced", "type": "tchmi:framework#/definitions/PositiveNumber", "category": "Connections", "description": "Width of the connections in px.", "readOnly": false, "bindable": true, "heritable": true, "defaultValue": null, "defaultValueInternal": 4}, {"name": "data-tchmi-connection-colors", "displayName": "ConnectionColors", "propertyName": "ConnectionColors", "propertySetterName": "setConnectionColors", "propertyGetterName": "getConnectionColors", "visible": true, "themeable": "Advanced", "type": "tchmi:framework#/definitions/SolidColor", "category": "Colors", "description": "Colors of the connections.", "readOnly": false, "bindable": true, "heritable": true, "defaultValue": null, "defaultValueInternal": {"color": "rgb(144, 185, 234)"}}, {"name": "data-tchmi-connection-color-per-side", "displayName": "ConnectionColorPerSide", "propertyName": "ConnectionColorPerSide", "propertySetterName": "setConnectionColorPerSide", "propertyGetterName": "setConnectionColorPerSide", "visible": true, "themeable": "Advanced", "type": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.FourSidedColor", "category": "Connections", "description": "Colors for each connection.", "readOnly": false, "bindable": true, "heritable": true, "defaultValue": null, "defaultValueInternal": null}, {"name": "data-tchmi-show-tag", "displayName": "ShowTag", "propertyName": "ShowTag", "propertySetterName": "setShowTag", "propertyGetterName": "getShowTag", "visible": true, "themeable": "Advanced", "type": "tchmi:framework#/definitions/TcHmi.BuildingAutomation.Controls.Common.UiIcon.DisplayPosition", "category": "BA", "displayPriority": 51, "description": "Defines where the tag of the bound BaObject is displayed. If null the tag will not be displayed.", "requiredOnCompile": false, "readOnly": false, "bindable": true, "heritable": true, "defaultValue": null, "defaultValueInternal": null}, {"name": "data-tchmi-show-faceplate", "propertyName": "ShowFaceplate", "displayName": "ShowFaceplate", "propertySetterName": "setShowFaceplate", "propertyGetterName": "getShowFaceplate", "visible": true, "type": "tchmi:general#/definitions/Boolean", "category": "PopUp", "description": "Specifies if the faceplate is shown when the UiIcon is pressed.", "readOnly": false, "bindable": true, "defaultBindingMode": "OneWay", "heritable": true, "allowSymbolExpressionsInObject": false, "defaultValue": null, "defaultValueInternal": true}], "attributeCategories": [{"name": "PopUp", "displayPriority": 200, "defaultCollapsed": true, "description": "Attributes for the pop-up of the UiIcon."}, {"name": "Connections", "displayPriority": 201, "defaultCollapsed": true, "description": "Attributes for connections on the UiIcon."}], "functions": [], "events": [{"name": ".onDisplayValueChanged", "displayName": ".onDisplayValueChanged", "visible": true, "displayPriority": 30, "category": "Control", "description": "Event is fired when a value of a display was changed.", "heritable": true, "allowsPreventDefault": false}], "dataTypes": [{"schema": "Schema/Types.Schema.json"}]}