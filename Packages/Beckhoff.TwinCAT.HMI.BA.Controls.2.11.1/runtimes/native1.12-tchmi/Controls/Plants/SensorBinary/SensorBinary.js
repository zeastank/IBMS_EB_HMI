var TcHmi;!function(e){!function(e){!function(t){!function(a){class i extends t.System.Sensor{constructor(e,t,a){super(e,t,a),this.__defaultBaTemplateDescription=i.BaTemplateDescription}__previnit(){super.__previnit()}__init(){this.__isAnalog=!1,super.__init()}__attach(){super.__attach(),this.__displayMode<t.System.Sensor.DisplayMode.custom&&this.__legendIconHandler.show()}__detach(){super.__detach(),this.__legendIconHandler.hide()}destroy(){this.__keepAlive||super.destroy()}processBaObject(){if(super.processBaObject(),null==this.__baFc.baObjectHandler.baObject)return this.__fdb=null,void this.__processValues();if(this.__baFc.baObjectHandler.baObject instanceof e.BA.BaView)this.__baFc.baObjectHandler.baObject.checkTemplate(i.BaTemplateDefinition,this.baTemplateHandler.baBaTemplateDescription,void 0,!1)&&(this.__fdb=this.__baFc.baObjectHandler.baObject.getTemplateChild("feedback"));else{null!=this.__baFc.baObjectHandler.baObject.tryGetBaVariable(e.BA.BaParameterId.ePresentValue)&&this.__baFc.baObjectHandler.baObject.DataType===e.DataType.boolean&&(this.__fdb=this.__baFc.baObjectHandler.baObject)}null!=this.__fdb?this.__processValues():e.Components.DialogWindow.alert(this.logger.warn(`Invalid BA template bound to ${this.__id}!`,this.__baFc.baObjectHandler.baObject))}}a.SensorBinary=i,function(e){e.BaTemplateDefinition={feedback:{}},e.BaTemplateDescription={feedback:{identifier:"Input"}}}(i=a.SensorBinary||(a.SensorBinary={}))}(t.Plants||(t.Plants={}))}(e.Controls||(e.Controls={}))}(e.BuildingAutomation||(e.BuildingAutomation={}))}(TcHmi||(TcHmi={})),TcHmi.Controls.registerEx("SensorBinary","TcHmi.BuildingAutomation.Controls.Plants",TcHmi.BuildingAutomation.Controls.Plants.SensorBinary);